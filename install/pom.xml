<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<artifactId>root</artifactId>
		<groupId>com.soffid.iam.console</groupId>
		<version>2.7.12</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>install</artifactId>
	<packaging>jar</packaging>
	<name>install</name>
	<properties>
		<maven.compile.source>1.5</maven.compile.source>
		<maven.compile.target>1.5</maven.compile.target>
	</properties>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/messages.properties</include>
				</includes>
			</resource>

			<resource>
				<directory>src/main/docker</directory>
				<filtering>true</filtering>
				<targetPath>../docker</targetPath>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-server</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.directory}/lib
							</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>
								true
							</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<stripVersion>true</stripVersion>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>install4j</id>
						<phase>package</phase>
						<configuration>
							<tasks>
								<taskdef name="install4j" classname="com.install4j.Install4JTask" classpath="${env.INSTALL4J_HOME}/bin/ant.jar" />
								<install4j projectfile="src/main/install4j/seu.install4j">
									<variable name="seu.version" value="${project.version}" />
								</install4j>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>docker</id>
						<phase>package</phase>
						<configuration>
							<tasks>
								<exec failonerror="true" executable="docker" dir="${project.basedir}">
									<arg value="build" />
									<arg value="-f" />
									<arg value="target/docker/Dockerfile" />
									<arg value="-t" />
									<arg value="soffid/iam-console:${pom.version}" />
									<arg value="-t" />
									<arg value="soffid/iam-console:latest" />
									<arg value="." />
								</exec>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.1</version>
				<executions>
					<execution>
						<id>attach-artifacts</id>
						<phase>package</phase>
						<goals>
							<goal>attach-artifact</goal>
						</goals>
						<configuration>
							<artifacts>
								<artifact>
									<file>
										target/SOFFID_console_installer.sh
									</file>
									<type>sh</type>
								</artifact>
								<artifact>
									<file>
										target/SEU_installer.exe
									</file>
									<type>exe</type>
								</artifact>
								<artifact>
									<file>
										target/SEU_installer_64.exe
									</file>
									<type>64bits.exe</type>
								</artifact>
								<artifact>
									<file>
										target/Soffid-iamconsole.tar.gz
									</file>
									<type>tar.gz</type>
								</artifact>
							</artifacts>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.1,)
										</versionRange>
										<goals>
											<goal>
												copy-dependencies
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>
											[1.1,)
										</versionRange>
										<goals>
											<goal>add-source</goal>
											<goal>add-test-source</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
			<version>1.8.0</version>
		</dependency>
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc7</artifactId>
			<version>12.1.0.1.0</version>
		</dependency>
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>sqljdbc4</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.2.5.jre7</version>
			<scope>test</scope>
		</dependency>
	    <dependency>
           	<groupId>${project.groupId}</groupId>
           	<artifactId>deployer</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>iam-ear</artifactId>
			<version>${project.version}</version>
			<type>ear</type>
		</dependency>
		<dependency>
			<groupId>install4j</groupId>
			<artifactId>install4j</artifactId>
			<version>4.1</version>
			<scope>system</scope>
			<systemPath>${env.INSTALL4J_HOME}/resource/i4jruntime.jar</systemPath>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.apache.ddlutils</groupId>
			<artifactId>ddlutils</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>com.soffid.iam.bpm</groupId>
			<artifactId>add-agent-wf</artifactId>
			<version>1.0.4</version>
			<type>par</type>
		</dependency>
	</dependencies>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<skip>true</skip>
					<additionalJOption>-J-Xmx128m</additionalJOption>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
	<profiles>
		<profile>
			<id>noi4j</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>install4j</id>
								<phase>none</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>nodocker</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>docker</id>
								<phase>none</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
