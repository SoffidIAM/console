<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE server
    PUBLIC "-//JBoss//DTD MBean Service 3.2//EN"
    "http://www.jboss.org/j2ee/dtd/jboss-service_3_2.dtd">
<!-- $Id: jboss-service-50-default.xml,v 1.2 2007-02-15 11:29:24 u07286 Exp $ -->

<server>

   <mbean code="org.jboss.web.tomcat.tc5.Tomcat5"
      name="jboss.web:service=WebServer">

      <!-- The JAAS security domain to use in the absense of an explicit
      security-domain specification in the war WEB-INF/jboss-web.xml
      -->
      <attribute name="DefaultSecurityDomain">java:/jaas/seycon</attribute>
      <!-- Get the flag indicating if the normal Java2 parent first class
           loading model should be used over the servlet 2.3 web container first
           model.
      -->
      <attribute name="Java2ClassLoadingCompliance">true</attribute>

      <attribute name="LenientEjbLink">true</attribute>

      <!-- A flag indicating if the JBoss Loader should be used. This loader
           uses a unified class loader as the class loader rather than the tomcat
           specific class loader.
      -->
      <attribute name="UseJBossWebLoader">true</attribute>

      <!--
          Class of the session manager (used if context is marked as 'distributable'. Currently allowed values:
          - org.jboss.web.tomcat.tc5.session.JBossCacheManager
      -->
      <attribute name="ManagerClass">org.jboss.web.tomcat.tc5.session.JBossCacheManager</attribute>

      <!-- The name of the request attribute under with the authenticated JAAS
      Subject is stored on successful authentication. If null or empty then
      the Subject will not be stored.
      -->
      <!--
      <attribute name="SubjectAttributeName">j_subject</attribute>
      -->
      <!-- A flag indicating whether web-apps may set themselfs as privileged 
           in their custom WEB-INF/context.xml context configuration.
      -->
      <attribute name="AllowSelfPrivilegedWebApps">false</attribute>

      <!-- The SessionIdAlphabet is the set of characters used to create a session Id
           It must be made up of exactly 65 unique characters
      <attribute name="SessionIdAlphabet">ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-*</attribute>
      -->

      <!--
        *******************************************************
        ****************** CLUSTERING *************************
        *******************************************************
        In order to activate HTTP Session clustering for Tomcat
        make sure you run JBoss's "all" configuration i.e.
        "run -c all"
        (the default configuration doesn't contain clustering)

        Furthermore, you may change SnapshotMode and
        SnapshotInterval attributes below to indicate when to
        synchronize changes with the other node(s).

        If you use Apache+mod_jk(2) you will most probably use
        the AJP1.3 connector below. Thus, if you so wish,
        you may comment (i.e. deactivate) the HTTP connector
        as it won't be used anymore.

        *******************************************************
        *******************************************************
        *******************************************************
       -->

      <!--
        If you are using clustering, the following two attributes
        define when the sessions are replicated to the other nodes.
        The default value, "instant", immediately replicates changes
        to the other nodes after each request. In this case, the 
        "SnapshotInterval" attribute is not used.

        The "interval" mode, in association with the "SnapshotInterval"
        attribute, indicates that Tomcat will only replicates modified
        sessions every "SnapshotInterval" miliseconds at most.
      -->
      <attribute name="SnapshotMode">instant</attribute> 

      <!-- you must switch to "interval" to use this attribute (msec) -->
      <attribute name="SnapshotInterval">2000</attribute>

      <!-- 
      DEPRECATED IN RELEASE 3.2.6.

      A flag indicating if the local vm session value should be used if
      it exists. When true, the existing vm local session values are used and
      updates are replicated, but updates to the same session on other nodes
      do not update the local session value. In the future release, we will
      relax this restriction.

      Note that this flag is needed because of scoped class loading. Since
      each web app may have a different class loader, the session stored
      in the distributed store are still serialzed version. So if this flag
      is false, the session value is obtained from the distributed
      cache for each access and there will be significant penalty for 
      performance. 

      For clustering purpose only.
      -->
      <attribute name="UseLocalCache">true</attribute>

      <!--
      Whether to use MOD_JK(2) for load balancing with sticky session 
      combined with JvmRoute. If set to true, it will insert a JvmRouteFilter 
      to intercept every request and replace the JvmRoute if it detects a 
      failover. In addition, you will need to set the JvmRoute inside
      Tomcat, e.g.,
        Engine name="jboss.web" jmvRoute="Node1" defaultHost="localhost" 
      in server.xml.

      For clustering purpose only.
      -->
      <attribute name="UseJK">false</attribute>
    

      <attribute name="Domain">jboss.web</attribute>

      <!-- A mapping to the server security manager service which must be
      operation compatible with type
      org.jboss.security.plugins.JaasSecurityManagerServiceMBean. This is only
      needed if web applications are allowed to flush the security manager
      authentication cache when the web sessions invalidate.
      -->
      <depends optional-attribute-name="SecurityManagerService"
         proxy-type="attribute">jboss.security:service=JaasSecurityManager
      </depends>

      <!--
         Needed for HTTP Session Clustering 
         and ClusteredSSO using JBossCache
      -->
      <!--
      <depends>jboss.cache:service=TomcatClusteringCache</depends>
      -->
      <depends>jboss:service=TransactionManager</depends>
      <!-- Only needed if the org.jboss.web.tomcat.tc5.jca.CachedConnectionValve
      is enabled in the tomcat server.xml file
      <depends>jboss.jca:service=CachedConnectionManager</depends>
      -->
      <depends>jboss.security:service=SeyconRealm</depends>

   </mbean>

</server>

