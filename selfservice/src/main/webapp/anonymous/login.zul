<?xml version="1.0" encoding="UTF-8" standalone="no"?><?page id="login" title="SOFFID IAM login page" ?>
<?taglib uri="/WEB-INF/tld/web/core.dsp.tld" prefix="c" ?>
<zk xmlns="http://www.zkoss.org/2005/zul" xmlns:h="http://www.w3.org/1999/xhtml">
	<script><![CDATA[
	    var useHolderGroup = true;
		function updateUsername ()
		{
			document.getElementById("j_username").value = '';
			var tenant = document.getElementById("j_tenant").value;
			var account = document.getElementById("j_account").value;
			zkau.send ({uuid:'hgh',cmd:'onSelectUser', data:[tenant, account]}); 
		}
		
		function updateAccountName()
		{
			var tenant = document.getElementById("j_tenant").value;
			var account = document.getElementById("j_account").value;
			if (useHolderGroup) {
				option = document.getElementById('j_group').value;
				if (option.length == 0)
				{
					document.getElementById("j_username").value = '';
					document.getElementById('loginButton').style.display="none";
					return;
				}
				account = option+"\\"+account;
				document.getElementById('loginButton').style.display="";
			}
			if (tenant == null || tenant.length == 0)
			{
				document.getElementById("j_username").value = account;
			} else {
				document.getElementById("j_username").value = tenant + "\\" + account;
			}
		}
		
		function displayHolderGroup(groups) {
			document.getElementById('holderGroupDiv').style.display="";
			var selector = document.getElementById('j_group');
			while (selector.firstElementChild != null)
				selector.firstElementChild.remove();
			var option = document.createElement("OPTION");
			option.setAttribute("value", '');
			option.appendChild (document.createTextNode("- Select one -"));
			selector.appendChild(option);
			for (i = 0; i < groups.length; i++)
			{
				option = document.createElement("OPTION");
				option.setAttribute("value", groups[i].name);
				option.appendChild (document.createTextNode(groups[i].description+" - "+groups[i].name));
				selector.appendChild(option);
			}
			selector.size = groups.length + 1;
			document.getElementById('loginButton').style.display="none";
			selector.focus();
			useHolderGroup = true;
			updateAccountName();
		}

		function hideHolderGroup() {
			useHolderGroup = false;
			document.getElementById('holderGroupDiv').style.display="none";
			document.getElementById('loginButton').style.display="";
			updateAccountName();
		}
	]]></script>
	<style src="~./styles/estil.css" />
	<style src="/css/localSEU.css" />
	<style src="/css/devices.css"/>
		<zscript><![CDATA[
   			javax.servlet.http.HttpServletRequest req = execution.getNativeRequest();
   			String tenant = new com.soffid.iam.filter.TenantExtractor().getTenant(req);
			boolean saml = "true".equals(com.soffid.iam.utils.ConfigurationCache.getTenantProperty(tenant, "soffid.auth.saml"));
			boolean autoLogin = false;
			String user = "";
			String password = "";
			String rootPath = req.getContextPath();
			if (saml)
			{
				String[] token = session.getAttribute("samlLoginToken");
				user = token != null && token.length == 2 ? token[0]: "";
				password = token != null && token.length == 2 ? token [1]: "";

				autoLogin = !user.isEmpty() && !password.isEmpty();
				session.removeAttribute("samlLoginToken");
				if (!autoLogin)
				{
					boolean classic = ! "false".equals(com.soffid.iam.utils.ConfigurationCache.getTenantProperty(tenant, "soffid.auth.classic"));
					if (!classic)
					{
						System.out.println(rootPath);
						execution.sendRedirect("/saml");
					}
				}
			}
		
			if (org.zkoss.util.resource.Labels.getLabel("login.lblUser") == null)
			{
				org.zkoss.util.resource.Labels.register(new es.caib.bpm.ui.V2LabelLocator());
				org.zkoss.util.resource.Labels.register(new es.caib.bpm.ui.BPMLabelLocator());
			}
			
			String failed = req.getParameter("failed");
			String error = "";
		    if (failed != null && ! failed.isEmpty())
		    {
		      error = "Login failed";
		    }
		    if (req.getRequestURL().toString().endsWith("/zkau")) {
                execution.getNativeResponse().sendError(401, "Unauthenticatd ajax request");
            	return;
            }
		    
			try {
				es.caib.seycon.ng.web.ConfiguraSEU.configuraLocale(null); 
			} catch (Throwable th) {
			}		    
		]]></zscript>
		<html id="htmlData"><![CDATA[
		<div class="login">
        		<p><img src="/anonymous/logo.png" alt="Soffid logo" /> </p> 
			<div class="loginbox" id="loginbox"> 
				<p>${c:l('configure.header')}</p>
				<form method="post" action="j_security_check" id='loginForm' accept-charset="UTF-8">
				<input name="j_method"  id="j_method_usu-pas" type="hidden" value="U"/>
				<input name="j_username" id="j_username" type="hidden" value="${user }">
				<input name="j_tenant" id="j_tenant" type="hidden" autocomplete="off"  onChange="updateUsername()" value="${tenant}"/>
				<p>
				
					<div class="inputlogin">${c:l('login.lblUser')} :
					<input name="j_account" id="j_account" type="text" autocomplete="off" autofocus onChange="updateUsername ()" style="width: 200px"/></div>
				</p>
				<p />
					<div id="holderGroupDiv" style="display:none" class="inputlogin">${c:l('accounts.group')} :
						<select name="j_group" style="width: 200px; overflow: hidden; vertical-align: top"  id="j_group" onchange="updateAccountName()">
							<option value="">- Select one -</option>
						</select>
					</div>
				<p/>
				<p>
					<div class="inputlogin">${c:l('login.lblPassword')} :
					<input name="j_password" id="j_password" type="password" autocomplete="off" value="${password }" style="width: 200px"/></div>
				</p>
				<p style="color:red;">${error}</p>
				<input name="formUCboton" id="loginButton" type="submit" value="${c:l('configure.Login')}">
]]></html>
<html if="${saml }"><![CDATA[
   				<input type="button" value="${c:l('configure.samlLogin')}" onClick="location.href='${rootPath }/saml'"/>
                             
]]></html>
<html><![CDATA[
			</form>
			</div>
		</div>
		]]></html>
		<html if="${autoLogin}"><![CDATA[
			<script type="text/javascript">
			// <!--
			document.getElementById('loginbox').setAttribute("style","display: none");
			document.getElementById('loginForm').submit();
			// -->
			</script>
   		]]></html>
   		<div use="com.soffid.iam.web.groupHolder.HolderGroupHandler" id="hgh"/>
</zk>
