<?xml version="1.0" encoding="UTF-8" standalone="no"?><?page id="selfservice" title="${c:l('selfService.Titol')}" style="width:100%;height:100%"?>
<?taglib uri="/WEB-INF/tld/web/core.dsp.tld" prefix="c" ?>
<?component name="input_criteri" macro-uri="/comu/input_criteri.zul"?>
<?component name="input_dada" macro-uri="/comu/input_dada.zul"?>
<?component name="input_etiqueta" macro-uri="/comu/input_etiqueta.zul"?>

<zk xmlns:h="http://www.w3.org/1999/xhtml">

	<frame id="p_selfService" saveContent="true" use="com.soffid.selfservice.web.SelfServiceHandler"
		title="${c:l('selfService.Titol')}" width="100%" height="100%">

		<script src="/js/ssokm.js"/>
		<datamodel id="model" rootNode="root" src="descriptorSelfService.xml"/>
		<zscript>
			<![CDATA[
					import es.caib.seycon.ng.comu.*;
			 		model.getVariables().declareVariable("query", false);
			 		boolean canUpdateUserMetadata = true;
			 		boolean canDelegate = ! "true".equals(com.soffid.iam.utils.ConfigurationCache.getProperty("soffid.delegation.disable"));
			 		void delegate (Component comp) {
			 			RolAccount ra = es.caib.zkib.datasource.XPathUtils.getValue(comp, ".").getInstance();
			 			pageScope{"roleToDelegate"} = ra;
		                Window window = execution.createComponents(
		                        "/wf/task/seleccionUsuario.zul", p_selfService, null); //$NON-NLS-1$
		                window.doModal();

		                String usuarioSeleccionado = window.getUsuarioSeleccionado(); 
			 			pageScope{"userToDelegate"} = usuarioSeleccionado;
		                
		                if (usuarioSeleccionado != null && ! usuarioSeleccionado.equals(es.caib.seycon.ng.utils.Security.getCurrentUser()))
		                {
		                	com.soffid.iam.api.RoleAccount ra2 = com.soffid.iam.api.RoleAccount.toRoleAccount(ra);
			                List accounts = es.caib.seycon.ng.EJBLocator.getEntitlementDelegationService().findAccountsToDelegate(ra2, usuarioSeleccionado);
			                newDelegation.getFellow("roleName").setValue(ra.getNomRol());
			                newDelegation.getFellow("userName").setValue(usuarioSeleccionado);
			                Listbox lb = newDelegation.getFellow("account");
			                lb.getChildren().clear();
			                for (String account: accounts)
			                {
			                	lb.appendChild(new Listitem(account, account));
				                lb.setSelectedIndex(0);
			                }
			                java.util.Calendar c = java.util.Calendar.getInstance();
			                c.set(java.util.Calendar.HOUR, 0);
			                c.set(java.util.Calendar.MINUTE, 0);
			                c.set(java.util.Calendar.SECOND, 0);
			                c.set(java.util.Calendar.MILLISECOND, 0);
			                c.add(java.util.Calendar.DAY_OF_MONTH, 1);
			                newDelegation.getFellow("since").setValue (c.getTime());
			                c.add(java.util.Calendar.DAY_OF_MONTH, 7);
			                newDelegation.getFellow("until").setValue (c.getTime());
			                newDelegation.doHighlighted ();
		                }
			 		}
			 		
			 		void cancelDelegate ()
			 		{
			 			newDelegation.setVisible(false);
			 		}
			 		
			 		void acceptDelegate ()
			 		{
			 			RolAccount ra = pageScope{"roleToDelegate"};
	                	com.soffid.iam.api.RoleAccount ra2 = com.soffid.iam.api.RoleAccount.toRoleAccount(ra);
			 			String user = pageScope{"userToDelegate"};
		                Listbox lb = newDelegation.getFellow("account");
		                String account = lb.getSelectedItem() == null ? null : lb.getSelectedItem().getValue();
		                Date since =  newDelegation.getFellow("since").getValue ();
		                Date until = newDelegation.getFellow("until").getValue ();
		                es.caib.seycon.ng.EJBLocator.getEntitlementDelegationService().delegate(ra2, user, account, since, until);
		                model.getValue("/usuari[1]/rol").refresh();
			 			newDelegation.setVisible(false);
			 		}
			 		
			 		void cancelDelegate (Component comp)
			 		{
			 			RolAccount ra = es.caib.zkib.datasource.XPathUtils.getValue(comp, ".").getInstance();
	                	com.soffid.iam.api.RoleAccount ra2 = com.soffid.iam.api.RoleAccount.toRoleAccount(ra);
		                es.caib.seycon.ng.EJBLocator.getEntitlementDelegationService().cancelDelegation(ra2);
		                model.getValue("/usuari[1]/rol").refresh();
			 		}

			 		void newRolAccount (Component comp)
			 		{
			 			RolAccount ra = es.caib.zkib.datasource.XPathUtils.getValue(comp, ".").getInstance();
			 			if (ra.getDelegationStatus() != null) {
			 				es.caib.zkib.zkiblaf.ImageClic ic = new es.caib.zkib.zkiblaf.ImageClic("/img/info.png");
			 				Component listitem = comp.getChildren().get(5);
			 				listitem.insertBefore(ic, listitem.getFirstChild());
			 				java.text.DateFormat df = new java.text.SimpleDateFormat(org.zkoss.util.resource.Labels.getLabel("usuaris.zul.dateFormat2"));
			 				String since = df.format(ra.getDelegateSince());
			 				String until = ra.getDelegateUntil() == null ? "" :df.format(ra.getDelegateUntil());
			 				if (ra.getDelegationStatus() == es.caib.seycon.ng.common.DelegationStatus.DELEGATION_PENDING)
			 				{
			 					ic.setTitle(org.zkoss.util.resource.Labels.getLabel("selfService.delegationStatusPending", new Object[] { ra.getDelegateAccount(), since, until }));
			 					listitem.getChildren().get(1).setVisible(false);
			 					listitem.getChildren().get(2).setVisible(true);
			 				}
			 				else if (ra.getCodiUsuari().equals(es.caib.seycon.ng.utils.Security.getCurrentUser()) &&
			 						ra.getDelegationStatus() == es.caib.seycon.ng.common.DelegationStatus.DELEGATION_ACTIVE)
			 				{
			 					ic.setTitle(org.zkoss.util.resource.Labels.getLabel("selfService.delegationStatusReceived", new Object[] { ra.getOwnerAccount(), since, until }));
			 					listitem.getChildren().get(1).setVisible(false);
			 					listitem.getChildren().get(2).setVisible(false);
			 				}
			 				else
			 				{
			 					ic.setTitle(org.zkoss.util.resource.Labels.getLabel("selfService.delegationStatusActive", new Object[] { ra.getDelegateAccount(),since, until}));
			 					listitem.getChildren().get(1).setVisible(false);
			 					listitem.getChildren().get(2).setVisible(true);
			 				}
			 			}
			 		}
			]]>
		</zscript>
		
		<popup id="toolCaducat">
			<vbox>
				<label value="${c:l('selfService.Expired')}" multiline="true"/>
			</vbox>
		</popup>	
		<popup id="toolPropCaducar">
			<vbox>
				<label value="${c:l('selfService.NearToExpire')}" multiline="true"/>
			</vbox>
		</popup>
		<div class="content">
			<div class="sidebar aplications">
				<label value="${c:l('selfService.Applications')}" sclass="titolSelf"/>
				<div>
					<textbox style="width:90%" focus="true" id="appfinder"
						></textbox>
					<imageclic id="appcancelbutton" src="/img/cancel.png" />
				</div>
				<tree autocommit="false" dataPath="/model:/" fixedLayout="true" id="treebox" 
							sclass="senseBorder1">
					<treeitemfinder bind="." open="false" path="/moure">
						<treerow sclass="fons">
							<treecell>
								<image align="center" height="15px" width="15px" onClick="p_selfService.openTree(self.parent.parent.parent)"/>
								<label value="  " onClick="p_selfService.openTree(self.parent.parent.parent)"/>
								<label bind="@nom" onClick="p_selfService.openTree(self.parent.parent.parent)"/> 
							</treecell>
						</treerow>
					</treeitemfinder>
					<treeitemfinder bind="." open="false" path="/folder">
						<treerow sclass="fons">
							<treecell>
								<image align="center" height="15px" width="15px" onClick="p_selfService.openTree(self.parent.parent.parent)"/>
								<label value="  " onClick="p_selfService.openTree(self.parent.parent.parent)"/>
								<label bind="@name" onClick="p_selfService.openTree(self.parent.parent.parent)"/> 
							</treecell>
						</treerow>
					</treeitemfinder>
					<treeitemfinder bind="." open="false" path="/folderAccount">
						<treerow sclass="fons">
							<treecell>
								<image align="center" height="15px" width="15px" onClick="p_selfService.openTree(self.parent.parent.parent)"/>
								<label value="  " onClick="p_selfService.openTree(self.parent.parent.parent)"/>
								<label bind="@description" onClick="p_selfService.openTree(self.parent.parent.parent)"/> 
							</treecell>
						</treerow>
					</treeitemfinder>
				</tree>
			</div>
			<div class="wrap">
				<div class="tasks accounts">
					<div class="tasks">
						<vbox use="es.caib.bpm.ui.inbox.InboxHandler" id="inboxhandler" sclass="">
							<label value="${c:l('selfService.MyTasks')}" sclass="titolSelf"/>
							<listbox fixedLayout="true" id="listadoTareas" mold="paging" pageSize="15" sclass="senseBorder">
								<listhead>
									<listheader label="${c:l('inbox.lbldefinicionTarea')}" sort="auto" width="40%"/>
									<listheader label="${c:l('inbox.lblFecha')}" sort="auto" width="15%"/>
								</listhead>
							</listbox>
						</vbox>
					</div>
					<div class="tasks">
						<vbox use="es.caib.bpm.ui.inbox.MyProcessHandler" id="processhandler" sclass="">
							<label value="${c:l('selfService.MyProcess')}" sclass="titolSelf"/>
							<listbox fixedLayout="true" id="listadoProcesos" mold="paging" pageSize="15" sclass="senseBorder">
								<listhead>
									<listheader label="${c:l('process.lblIdentificador')}" sort="auto" width="20%"/>
									<listheader label="${c:l('inbox.lblProceso')}" sort="auto" width="40%"/>
									<listheader label="${c:l('inbox.lblFecha')}" sort="auto" width="20%"/>
									<listheader label="${c:l('process.lblEstado')}" sort="auto" width="20%"/>
								</listhead>
							</listbox>
						</vbox>
					</div>
					<div class="accounts">
						<label value="${c:l('selfService.Accounts')}" sclass="titolSelf"/>
						<listbox id="listadoAccounts" autocommit="false"
							dataPath="/model:/usuari/account" fixedLayout="true"
							sclass="senseBorder tabla-cuentas">
							<listhead>
								<listheader label="${c:l('accounts.dispatcher')}" width="20%" visible="false"/>
								<listheader label="${c:l('accounts.dispatcher')}" width="20%"/> 
								<listheader label="${c:l('accounts.name')}" width="20%"/>
								<listheader sclass="short-passwd" id="headQuery" label="${c:l('selfService.QueryPasswords')}" width="15%"/>
								<listheader sclass="short-change" id="headChange" label="${c:l('selfService.ChangePassword')}" width="15%"/>
							</listhead>
					
							<dataitem bind=".">
								<listcell style="vertical-align: top;">
									<label bind="@dispatcher" passwordDataPath="estatContrasenya" use="com.soffid.selfservice.utils.Inputlabel"/>
								</listcell>
								<listcell style="vertical-align: top;">
									<label bind="dispatcherInformation/@description" use="com.soffid.selfservice.utils.Inputlabel" passwordDataPath="estatContrasenya" />
								</listcell>
								<listcell style="vertical-align: top;"> 
									<div style="display: inline-flex">
										<label bind="@name" passwordDataPath="estatContrasenya" style="display: inline-block"
										 	   use="com.soffid.selfservice.utils.Inputlabel"/>
										<separator width="3px"></separator>
										<image src="~./img/exclamacio.gif" visible="false"
											width="16px" height="16px">
										</image>
									</div>
									<div visible="false" style="background-color: darkgray; border: 3px solid darkgray; border-radius: 3px; display: inline-block">
										<label value="owner:" style="font-size: 8pt; vertical-align:top"/>
										<label style="margin-left: 6px; margin-right: 4px" bind="/owner/@codi"></label>
										<image src="/img/cancel.png" width="12px" height="12px" visible="false" onClick="p_selfService.checkinAccount(self)"/>
									</div>
								</listcell>
								<listcell style="text-align: center; vertical-align: top;">
									<imageclic src="/img/lupa.gif">
										<attribute name="onClick">
											p_selfService.queryPassword(self);
										</attribute>
									</imageclic>
<!-- 									<timer delay="${p_selfService.timerDelay}" repeats="${p_selfService.enableTimers}" 
										onTimer="checkIsUpdatePending(self.parent.parent);" />
										 -->
								</listcell>	
								<listcell style="text-align: center; vertical-align: top;">
									<imageclic src="~./img/pwd.gif">
										<attribute name="onClick">
											p_selfService.setPassword(self);
										</attribute>
									</imageclic>
								</listcell>
							</dataitem>
						</listbox> 
					</div>
				</div>
				<div class="user-info">
					<form id="fusuaris" dataPath="/model:/usuari" sclass="fons">
						<tabbox id="panels" width="100%" >
							<tabs>
								<tab label="${c:l('selfService.Identification')}" />
								<tab label="${c:l('selfService.ApplPermissions')}" />
							</tabs>
							<tabpanels>
								<tabpanel id="identification"  width="100%">
									<grid sclass="fonsBlanc" width="100%" fixedLayout="true">
										<columns>
											<column width="250px"/>
											<column width="*"/>
										</columns>
										<rows>
											<row>
												<input_etiqueta	value="${c:l('usuaris.zul.Codi-2')}"/>
												<label bind="@codi" id="codi" width="*"/>
											</row>
											<row>
												<input_etiqueta value="${c:l('usuaris.zul.Nom-2')}"/>
												<label id="nom" bind="@nom" />
											</row>
											<row>
												<input_etiqueta style="white-space:nowrap;"
													value="${c:l('usuaris.zul.Primerllinatge-2')}"/>
												<label id="primerLlinatge" bind="@primerLlinatge"/>
											</row>
											<row>
												<input_etiqueta value="${c:l('usuaris.zul.Segonllinatge-2')}"/>
												<label id="segonLlinatge" bind="@segonLlinatge" />
											</row>
											<row>
												<input_etiqueta value="${c:l('usuaris.zul.Grupprimari-2')}"/>
												<div>
													<label id="codiGrupPrimari" bind="@codiGrupPrimari" />
													:
													<label bind="@descripcioGrupPrimari" />
												</div>
											</row>
											<row>
												<input_etiqueta value="${c:l('selfService.AltresGrups')}"/>
												<grid id="gridGrups" dataPath="grup" fixedLayout="true"
													sclass="fonsBlanc">
													<datarow>
														<label bind="@codiGrup"/>
													</datarow>
												</grid>
											</row>
										</rows>
									</grid>
									<grid sclass="fonsBlanc" dataPath="/dada"  onNewRow="event.data.getChildren().get(1).onCreate()"
										fixedLayout="true" width="100%"> 
										<columns>
											<column width="250px"/>
											<column width="*"/>
										</columns>
										<datarow>
											<input_etiqueta bind="@dataLabel" width_custom="250px"
												value="${c:l('usuaris.zul.@codiDada')}"/>
											<div use="com.soffid.iam.web.users.additionalData.InputField" twoPhaseEdit="true" onChange=""/>
										</datarow>
									</grid>
									<popup id="pwd">
										<label value="${c:l('usuaris.zul.Canviacontrasenya')}" />
									</popup>
								</tabpanel>
						
								<tabpanel id="applicationPermissions" width="100%">
									<div>
										<listbox fixedLayout="false" dataPath="/rol"  width="100%" height="300px" onNewRow="newRolAccount (event.data)">
											<listhead>
												<listheader label="${c:l('usuaris.zul.Rol')}" sort="auto" width="15%" />
												<listheader label="${c:l('usuaris.zul.Bbdd')}" sort="auto" width="15%" />
												<listheader label="${c:l('usuaris.zul.Account')}" sort="auto" width="15%" />
												<listheader label="${c:l('usuaris.zul.Aplicacia')}" sort="auto" width="15%" />
												<listheader label="${c:l('usuaris.zul.Domini')}" width="15%" />
												<listheader width="10%" visible="${canDelegate }"></listheader>
											</listhead>
											<dataitem>
												<listcell bind="@nomRol"/>
												<listcell bind="@baseDeDades" />
												<listcell bind="@accountName"/>
												<listcell bind="@codiAplicacio" />
												<listcell bind="valorDomini/@descripcio"/>
												<listcell>
													<button label="${c:l('seleccionUsuario.btnDelegar') }" onClick='delegate(event.getTarget())' visible='${canDelegate}'/>
													<button label="${c:l('selfService.cancelDelegation') }" onClick='cancelDelegate(event.getTarget())' visible='false'/>
												</listcell>
											</dataitem>
										</listbox>
									</div>
								</tabpanel> 
							</tabpanels>
						</tabbox>
					</form>
				</div>
			</div>
		</div>
		
		<div class="own-ip" style="display:none">
			<hbox align="end" pack="end"  style="display:none">
				<label value="${c:l('selfService.Conneted')} ${p_selfService.ambit}"/>
			</hbox>
		</div>
			
 		<window id="newPassword" closable="true" sclass="new-pass"
 			position="center, center" sizable="true"
 			title="${c:l('selfService.NewPassword')}" visible="false" width="31em"
 			onClose="onCancelPassword(); event.stopPropagation();">
			<zscript>
				<![CDATA[
					void onCancelPassword() {
						Window wnd = Path.getComponent("/newPassword");
						password.setValue("");
						wnd.setVisible(false);
					}
	
					void onSetPassword() {
						Window wnd = Path.getComponent("/newPassword");
						es.caib.seycon.ng.comu.Account account = wnd.getAttribute("acco");
						timepwd.getValue();
						es.caib.seycon.ng.EJBLocator.getSelfService().setHPAccountPassword(account,
								new Password(password.getValue()), timepwd.getValue(),
									checkpwd.isChecked());
						es.caib.zkib.zkiblaf.Missatgebox
								.confirmaOK(org.zkoss.util.resource.Labels
								.getLabel("accounts.setPassword.msg"));
						onCancelPassword();
						model.refresh();
					}
				]]>
			</zscript>
			<div width="100%">
		 		<div class="label" align="center">
					<label value="${c:l('accounts.setPassword.label')}"/>
					<space width="1em"/>
					<textbox id="password" type="password" width="18em" onOK="onSetPassword();"/>
				</div>
				<div class="label" align="center">
					<label id="lblpwd" value="${c:l('selfService.Valid')}"/>
					<space width="1em"/>
					<datebox id="timepwd" width="18em"
						format="${c:l('selfService.Format')}" constraint="no past,no empty"/>
				</div>
				<div class="label" align="center">
					<label id="lblcheckpwd" value="${c:l('selfService.Force')}"/>
					<checkbox id="checkpwd"/> 
				</div>
				<div align="center">
					<button label="${c:l('accounts.setPassword.OK')}"
						onClick="onSetPassword()" />
					<space width="1em" />
					<button label="${c:l('accounts.setPassword.Cancel')}"
						onClick="onCancelPassword()" />
				</div>
			</div>
		</window>
		<window id="showPassword" closable="true" sclass="show-pass"
			position="center, center" sizable="true"
			title="${c:l('selfService.QueryPasswords')}" visible="false" width="31em"
			onClose="onCancelPassword(); event.stopPropagation();">
			<zscript>
				<![CDATA[
					void onCancelPassword() {
						Window wnd = Path.getComponent("/showPassword");
						qpassword.setValue("");
						wnd.setVisible(false);
					}
				]]>
			</zscript>
			<popup id="toolPwd">
				<vbox>
					<label id="popupPwd" multiline="true"/>
				</vbox>
			</popup>
			<vbox width="100%" align="center">
				<space width="2em"/>
				<hbox align="center">
					<label id="labelPWDis" value="${c:l('selfService.ThePWDis')}"/>
					<label id="qpassword" tooltip="toolPwd"/>
				</hbox>
				<space width="2em"/>
				<hbox>
					<button label="${c:l('selfService.Close')}"
						onClick="onCancelPassword()" />
				</hbox>
				<space width="1em"/>
			</vbox>
		</window>
		<window id="newPasswordS" closable="true" sclass="new-pass"
			position="center, center" sizable="true"
			title="${c:l('selfService.NewPassword')}" visible="false" width="34em"
			onClose="onCancelPassword(); event.stopPropagation();">
			<zscript>
				<![CDATA[
					void onCancelPassword() {
						Window wnd = Path.getComponent("/newPasswordS");
						p1.setValue("");
						wnd.setVisible(false);
						model.refresh();
					}
					
					void onSetPassword() {
						Window wnd = Path.getComponent("/newPasswordS");
						Account account = wnd.getAttribute("acco");
						es.caib.seycon.ng.EJBLocator.getSelfService().setAccountPassword(account, new Password(p1.getValue()));
						model.refresh();
						es.caib.zkib.zkiblaf.Missatgebox.confirmaOK(org.zkoss.util.resource.Labels.getLabel("accounts.setPassword.msg"));
						onCancelPassword();
					}
				]]>
			</zscript>
			<vbox width="100%" align="center">
		 		<div align="center" class="label">
					<label value="${c:l('accounts.setPassword.label')}"/>
					<space width="1em"/>
					<textbox type="password" width="18em" id="p1" onOK="onSetPassword();"/>
				</div>
				
				<div align="center">
					<button label="${c:l('accounts.setPassword.OK')}"
						onClick="onSetPassword()" />
					<space width="1em"/>
					<button label="${c:l('accounts.setPassword.Cancel')}"
						onClick="onCancelPassword()" />
				</div>
			</vbox>
		</window>
		<window id="newDelegation" closable="true" sclass="new-pass"
			position="center, center" sizable="true"
			title="${c:l('selfService.NewDelegation')}" visible="false" width="34em"
			onClose="cancelDelegate(); event.stopPropagation();">
			<zscript>
				<![CDATA[
				]]>
			</zscript>
	 		<div style="margin-left: 2em">
				<label value="${c:l('usuaris.zul.Rol')} :" style="min-width: 8em; display: inline-block"/>
				<label id="roleName"/>
			</div>
	 		<div style="margin-left: 2em">
				<label value="${c:l('selfService.delegateTo')} :"  style="min-width: 8em; display: inline-block"/>
				<label id="userName"/>
			</div>
	 		<div style="margin-left: 2em">
				<label value="${c:l('selfService.delegateAccount')} :" style="min-width: 8em; display: inline-block"/>
				<listbox id="account" mold="select"/>
			</div>
	 		<div style="margin-left: 2em">
				<label value="${c:l('selfService.delegateSince')} :"  style="min-width: 8em; display: inline-block"/>
				<datebox id="since"  format="${c:l('usuaris.zul.dateFormat2')}"/>
			</div>
	 		<div style="margin-left: 2em">
				<label value="${c:l('selfService.delegateUntil')} :"  style="min-width: 8em; display: inline-block"/>
				<datebox id="until" format="${c:l('usuaris.zul.dateFormat2')}"/>
			</div>
				
			<div align="center">
				<button label="${c:l('accounts.setPassword.OK')}"
					onClick="acceptDelegate()" />
				<space width="1em"/>
				<button label="${c:l('accounts.setPassword.Cancel')}"
					onClick="cancelDelegate()" />
			</div>
		</window>
		<include src="finestres/editorHTML.zul" />
	</frame>
</zk>
