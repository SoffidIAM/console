<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?page id="passwordVault" ?>
<?taglib uri="/WEB-INF/tld/web/core.dsp.tld" prefix="c" ?>
<?component name="input_criteri" macro-uri="/comu/input_criteri.zul"?>
<?component name="input_dada" macro-uri="/comu/input_dada.zul"?>
<?component name="input_etiqueta" macro-uri="/comu/input_etiqueta.zul"?>
<?component name="folderWindow" macro-uri="/vault/folder.zul"?>
<?component name="accountWindow" macro-uri="/vault/account.zul"?>

<frame xmlns:h="http://www.w3.org/1999/xhtml" title="${c:l('vault.title')}" id="topframe" width="100%">
	<attribute name="onPerformQuery"><![CDATA[
		Tree treebox = esquema.getFellow("lista").getFellow("treebox");	                                          
		Treeitem firstRow = treebox.getTreechildren().getFirstChild();
		if (firstRow != null)
		{
			treebox.setSelectedItem(firstRow);
			es.caib.zkib.binder.BindContext ctx = XPathUtils.getComponentContext(firstRow);
			pageScope.put("currentContext", ctx);
			String path = ctx.getXPath();
			es.caib.seycon.ng.comu.AccountType t = XPathUtils.getValue(ctx, "/@type");
			if (t.equals (es.caib.seycon.ng.comu.AccountType.SHARED))
			{
				es.caib.seycon.ng.comu.AccountAccessLevelEnum level = XPathUtils.getValue(ctx, "/@accessLevel");
				if (level.equals(es.caib.seycon.ng.comu.AccountAccessLevelEnum.ACCESS_MANAGER) ||
						level.equals(es.caib.seycon.ng.comu.AccountAccessLevelEnum.ACCESS_OWNER))
					Events.sendEvent (new Event("onOpenAccount", accountWindow, path));
				model.getVariables().declareVariable("directFilter", false);
			}
			else
			{
				model.getVariables().declareVariable("directFilter", false);
				model.refresh();
			}
			
		}
	                                         
	]]>
	</attribute>
	<datamodel id="model" rootNode="root" src="descriptorVault.xml" />

	<zscript src="/comu/netejaCriteris.zul"/>
	<zscript src="/comu/checkTruncatedResults.zul"/>

	<zscript>
		<![CDATA[
			import es.caib.zkib.zkiblaf.Missatgebox;
			import es.caib.seycon.ng.utils.AutoritzacionsUsuari;
			import es.caib.zkib.datasource.XPathUtils;

			boolean canCreateRootFolders = es.caib.seycon.ng.utils.Security.isUserInRole("sso:createSharedFolders");
			try
			{
				es.caib.zkib.zkiblaf.Application.setTitle(org.zkoss.util.resource
					.Labels.getLabel("vault.title"));
			}
			catch (Exception ex){}
			
			model.getVariables().declareVariable("filter", "");
			String requestedAccount = Executions.getCurrent().getNativeRequest().getParameter("account");
			String requestedSystem = Executions.getCurrent().getNativeRequest().getParameter("system");
			model.getVariables().declareVariable("account", requestedAccount);
			model.getVariables().declareVariable("system", requestedSystem);
			if (requestedAccount != null && requestedSystem != null)
			{
				model.getVariables().declareVariable("directFilter", true);
				Events.postEvent(-100, "onPerformQuery", topframe, null);
			} else {
				model.getVariables().declareVariable("directFilter", false);
			}
		
			void select() 
			{
			}
			
			void addRootFolder () throws Exception
			{
				String path = XPathUtils.createPath(model, "/folder");
				Events.sendEvent (new Event("onNewFolder", folderWindow, path));
			}
			
			
			void detailsMenu (Component button)
			{
				Component item = button;
				while ( item != null && ! (item instanceof Treeitem ))
					item = item.getParent();
				treebox.setSelectedItem((Treeitem) item);
				pageScope.put("currentContext", XPathUtils.getComponentContext(button));
				es.caib.seycon.ng.comu.AccountAccessLevelEnum level = XPathUtils.getValue(button, "@accessLevel");
				if (level.equals (es.caib.seycon.ng.comu.AccountAccessLevelEnum.ACCESS_OWNER))
				{
					folderDetails.getChildren().get(0).setDisabled(false);
					folderDetails.getChildren().get(2).setDisabled(false);
					folderDetails.getChildren().get(3).setDisabled(false);
					folderDetails.open(button);
				}
			}
			
			void accountDetailsMenu (Component button)
			{
				Component item = button;
				while ( item != null && ! (item instanceof Treeitem ))
					item = item.getParent();
				treebox.setSelectedItem((Treeitem) item);
				pageScope.put("currentContext", XPathUtils.getComponentContext(button));
				es.caib.seycon.ng.comu.AccountAccessLevelEnum level = XPathUtils.getValue(button, "@accessLevel");
				if (level.equals (es.caib.seycon.ng.comu.AccountAccessLevelEnum.ACCESS_OWNER))
				{
					accountDetails.getChildren().get(1).setDisabled(false);
					accountDetails.open(button);
				}
				else if (level.equals (es.caib.seycon.ng.comu.AccountAccessLevelEnum.ACCESS_MANAGER))
				{
					accountDetails.getChildren().get(1).setDisabled(true);
					accountDetails.open(button);
				}
			}

			void openFolder ()
			{
				es.caib.zkib.binder.BindContext ctx = pageScope.get("currentContext");
				String path = ctx.getXPath();
				Events.sendEvent (new Event("onOpenFolder", folderWindow, path));
			}

			void openAccount ()
			{
				es.caib.zkib.binder.BindContext ctx = pageScope.get("currentContext");
				String path = ctx.getXPath();
				Events.sendEvent (new Event("onOpenAccount", accountWindow, path));
			}


			void addSubFolder () throws Exception
			{
				es.caib.zkib.binder.BindContext ctx = pageScope.get("currentContext");
				String path = ctx.getXPath();
				String path2 = XPathUtils.createPath(model, path+"/folder");
				XPathUtils.setValue(ctx.getDataSource(), path2+"/@parentId", XPathUtils.getValue(ctx, "@id"));
				XPathUtils.setValue(ctx.getDataSource(), path2+"/@parentFolder", XPathUtils.getValue(ctx, "@name"));
				XPathUtils.setValue(ctx.getDataSource(), path2+"/@personal", XPathUtils.getValue(ctx, "@personal"));
				Events.sendEvent (new Event("onNewFolder", folderWindow, path2));
			}
			
			void addAccount () throws Exception
			{
				es.caib.zkib.binder.BindContext ctx = pageScope.get("currentContext");
				String path = ctx.getXPath();
				String path2 = XPathUtils.createPath(model, path+"/account");
				XPathUtils.setValue(ctx.getDataSource(), path2+"/@vaultFolderId", XPathUtils.getValue(ctx, "@id"));
				XPathUtils.setValue(ctx.getDataSource(), path2+"/@vaultFolder", XPathUtils.getValue(ctx, "@name"));
				XPathUtils.setValue(ctx.getDataSource(), path2+"/@inheritNewPermissions", true);
				Events.sendEvent (new Event("onNewAccount", accountWindow, path2));
			}
			
			void removeAccount () 
			{
				es.caib.zkib.binder.BindContext ctx = pageScope.get("currentContext");
				String accountName = XPathUtils.getValue(ctx, "@description");
				Missatgebox.confirmaOK_CANCEL(
						org.zkoss.util.resource.Labels
								.getLabel("vault.account.remove", new Object[] { accountName }), 
						org.zkoss.util.resource.Labels.getLabel("vault.confirm"), 
						new EventListener() {
					public void onEvent(Event evt) {
						if ("onOK".equals(evt.getName())) {
							es.caib.zkib.binder.BindContext ctx = pageScope.get("currentContext");
							XPathUtils.removePath(ctx.getDataSource(), ctx.getXPath());
							model.commit();
						}
					}
				});

			}

			void removeFolder () 
			{
				es.caib.zkib.binder.BindContext ctx = pageScope.get("currentContext");
				String accountName = XPathUtils.getValue(ctx, "@name");
				Missatgebox.confirmaOK_CANCEL(
						org.zkoss.util.resource.Labels
								.getLabel("vault.folder.remove", new Object[] { accountName }), 
						org.zkoss.util.resource.Labels.getLabel("vault.confirm"), 
						new EventListener() {
					public void onEvent(Event evt) {
						if ("onOK".equals(evt.getName())) {
							es.caib.zkib.binder.BindContext ctx = pageScope.get("currentContext");
							XPathUtils.removePath(ctx.getDataSource(), ctx.getXPath());
							model.commit();
						}
					}
				});

			}
			
			void search ()
			{
				String value = queryWindow.getFellow("queryName").getFellow("textbox").getValue();
				if (value == null || value.trim().length() == 0)
					model.getVariables().declareVariable("filter", "");
				else
					model.getVariables().declareVariable("filter", value);
				
				model.refresh();
			}
	]]></zscript>
	<script type="text/javascript">
		function onMouseOverTree (event)
		{
			// event.target = tr => Locate tr/td/div/button
			var button = document.evaluate ("td/div/button", event.currentTarget, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null)
				.singleNodeValue;
			button.style.display="inline";
		}

		function onMouseLeaveTree (event)
		{
			// event.target = tr => Locate tr/td/div/button
			var button = document.evaluate ("td/div/button", event.currentTarget, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null)
				.singleNodeValue;
			button.style.display="none";
		}
		
	</script>
    <esquemavertical datamodel="/model" focusCriteri="queryName" id="esquema" onHideFormulari="">
		<criteris id="queryWindow" onOK="search()" width="100%" height="3em"> 
			<input_criteri id="queryName" etiqueta="${c:l('accounts.name')}" style="display: inline-block"/>
			<imageclic onClick="search()" src="~./img/fletxa_cerca.gif" />
			
		</criteris>
		
		<navegador id="lista" width="${amplaria}">
			<toolbar>
				<toolbarbutton label="New root folder" image="~./img/list-add.gif" 
					id="b_inserir" visible="${canCreateRootFolders}" onClick="addRootFolder()"/>
			</toolbar>
			<tree autocommit="false" dataPath="/model:/" fixedLayout="false" height="96%" id="treebox" onSelect="select()" pageSize="19" rows="${fileres}">
				<attribute name="onNewRow">
				<![CDATA[
				try {
				    Treeitem item = event.getData();
				    if (item == null)
				    	return ;
				    es.caib.zkib.datamodel.DataNode dn = XPathUtils.getValue(item, ".");
				    if (dn == null)
				    	return;
				    Object obj = dn.getInstance();
				    if (obj != null && obj instanceof es.caib.seycon.ng.comu.Account)
				    {
				    	if (!obj.getAccessLevel().equals (es.caib.seycon.ng.comu.AccountAccessLevelEnum.ACCESS_MANAGER)  &&
				    		!obj.getAccessLevel().equals (es.caib.seycon.ng.comu.AccountAccessLevelEnum.ACCESS_OWNER))
				    	{
				    		item.getTreerow().setAction("");
				    	}
				    }
				    if (obj != null && obj instanceof com.soffid.iam.api.VaultFolder)
				    {
				    	if (!obj.getAccessLevel().equals (es.caib.seycon.ng.comu.AccountAccessLevelEnum.ACCESS_OWNER))
				    	{
				    		item.getTreerow().setAction("");
				    	}
				    }
				} catch (Exception e) {}		
				]]>
				</attribute>
				<treeitemfinder bind="." open="false" path="/folder">
			 		<treerow  action="onMouseOver: onMouseOverTree (event); onMouseLeave: onMouseLeaveTree (event);">
						<treecell > 
							<image src="/img/root.gif" height="1em" style="margin-right: 1em"/>
							<label bind="@name" style="display: inline-block; padding-bottom: 5px; padding-top: 5px;"/>
							<button image="/img/menu-blue.png" class="small-button" label="${c:l('vault.details') }" style="display: none" 
								onClick="detailsMenu(self)"/>
 						</treecell>
					</treerow>
				</treeitemfinder>
				<treeitemfinder bind="." open="false" path="/account">
					<treerow action="onMouseOver: onMouseOverTree (event); onMouseLeave: onMouseLeaveTree (event);">
						<treecell> 
							<image src="/img/key.png" height="1em" style="margin-right: 1em"/>
							<label bind="@description" style="display: inline-block; padding-bottom: 5px; padding-top: 5px;"/>
							<imageclic src="/img/link.png" title="Open" style="margin-left: 1em; margin-right: 1em">
								<attribute name="onClick"><![CDATA[
									String url = XPathUtils.getValue(self, "/attributes[@name='SSO:URL']");
									if (url != null)
									{
					               		Executions.getCurrent().sendRedirect(url, "_blank");
									}
								]]></attribute>
							</imageclic>
							<button image="/img/menu-blue.png" class="small-button" label="${c:l('vault.details') }" style="display: none" 
								onClick="accountDetailsMenu(self)"/>
 						</treecell>
					</treerow>
				</treeitemfinder>
			</tree>
			<menupopup id="folderDetails" style="font-size: 12px"> 	
						<menuitem label="Open" value="open" onClick="openFolder()"/>
						<menuitem label="New Account" value="open" onClick="addAccount()"/>
						<menuitem label="New folder" value="open" onClick="addSubFolder()"/>
						<menuitem label="Remove" value="remove" onClick="removeFolder()"/>
			</menupopup>
			<menupopup id="accountDetails" style="font-size: 12px"> 	
				<menuitem label="Open" value="open" onClick="openAccount()"/>
				<menuitem label="Remove" value="remove" onClick="removeAccount()"/>
			</menupopup>
		</navegador>
		
	</esquemavertical>
	
	<folderWindow id="folderWindow"></folderWindow>
	<accountWindow id="accountWindow"/>
	<include src="customObjectsllista.zul" />
	<include src="usuarisllista.zul"/>
	<include src="grupsllista.zul"/>
	<include src="rolsllista.zul"/>
	<include src="/finestres/identity.zul"/>
	<style>
		.lruta {cursor: pointer; display: block;}
		.lruta:hover {text-decoration:underline;}
		td.menu1 {
			background-image: none;
			background-repeat: no-repeat;
			padding-right: 6px;
		}
	</style>
	
</frame>
