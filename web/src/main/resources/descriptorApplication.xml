<?xml version="1.0" encoding="UTF-8"?>

<zkib-model>

	<datanode name="applications">
		<finder name="application" type="application" >
			<ejb-finder jndi="java:/module/ApplicationService-v2" method="findApplicationByTextAndFilterAsync" 
				if = '${enableQuery != null &amp;&amp; ((queryText != null &amp;&amp; queryText != "") || (query != null &amp;&amp;query != ""))}'>
				<parameter value="${queryText}"/>
				<parameter value="${query}"/>
			</ejb-finder>
			<ejb-finder jndi="java:/module/ApplicationService-v2" method="findApplicationByTextAndFilterAsync" 
				if = '${enableQuery != null &amp;&amp; ( (queryText == "" || queryText == null) &amp;&amp; (query == null ||query == "") )}'>
				<parameter value=""/>
				<parameter value="not parent pr"/>
			</ejb-finder>
			<new-instance-bean className="com.soffid.iam.api.Application"></new-instance-bean>
		</finder>
		
		<finder name="role" type="role" >
			<ejb-finder jndi="java:/module/ApplicationService-v2" method="findRoleByTextAndFilterAsync" 
				if = "${queryText != null  || query != null}">
				<parameter value="${queryText}"/>
				<parameter value="${query}"/>
			</ejb-finder>
			<new-instance-bean className="com.soffid.iam.api.Role"></new-instance-bean>
		</finder>
		
	</datanode>

	<datanode name="application"
		idProperty="name" parentProperty="parent" childProperty="application">
		<ejb-parent-loader jndi="java:/module/ApplicationService-v2" 
			method="findApplicationByApplicationName">
			<parameter value="${instance.parent}"/>
		</ejb-parent-loader>
		<finder name="application" type="application">
			<ejb-finder jndi="java:/module/ApplicationService-v2" method="findApplicationChildren">  <!-- group:query -->
				<parameter value="${instance.name}" />
			</ejb-finder>
			<new-instance-bean className="com.soffid.iam.api.Application">
			</new-instance-bean>
		</finder>
		<finder name="domain" type="domain">
			<ejb-finder jndi="java:/module/DomainService-v2" method="findApplicationDomainsByApplicationName"> <!-- application:query -->
				<parameter value="${instance.name}" />
			</ejb-finder>
			<new-instance-bean className="com.soffid.iam.api.Domain">
			</new-instance-bean>
		</finder> 
		<finder name="role" type="role" refreshAfterCommit="true">  <!-- application:query -->
			<ejb-finder jndi="java:/module/ApplicationService-v2" method="findRolesByApplicationName">  <!-- group:query -->
				<parameter value="${instance.name}" />
			</ejb-finder>
			<new-instance-bean className="com.soffid.iam.api.Role">
			</new-instance-bean>
		</finder>
		<finder name="user" type="userRole">
			<ejb-finder jndi="java:/module/ApplicationService-v2" method="findUserRolesByInformationSystem">
				<parameter value="${instance.name}" />
			</ejb-finder>
		</finder>
		<finder name="managementRole" type="managementRole" >  <!-- application:query -->
			<ejb-finder jndi="java:/module/ApplicationService-v2"
				method="findApplicationManagementRoles">
			</ejb-finder>
		</finder>

		<finder name="effectiveuser" type="userRole">
			<ejb-finder jndi="java:/module/ApplicationService-v2" method="findEffectiveUserRolesByInformationSystem">
				<parameter value="${instance.name}" />
			</ejb-finder>
		</finder>
		<ejb-handler jndi="java:/module/ApplicationService-v2">
			<insert-method method="create" returnBean="true">
				<parameter value="${instance}" />
			</insert-method>
			<delete-method method="delete">
				<parameter value="${instance}" />
			</delete-method>
			<update-method method="update">
				<parameter value="${instance}" />
			</update-method>
		</ejb-handler>
		<validator>
			<attribute-validator expr="${instance.description}" notNull="true" friendlyName="groups.DescriptionValidation"/>
			<attribute-validator expr="${instance.relativeName}" notNull="true" friendlyName="groups.CodeValidation"/>
		</validator>
	</datanode>

	<datanode name="userRole" transient="true" />
	
	<datanode name="domain">
		<finder name="domainValue" type="domainValue">
			<ejb-finder jndi="java:/module/DomainService-v2" method="findDomainValuesByFilter">
				<parameter value="${instance}" />
				<parameter value="" />
				<parameter value="" />
				<parameter value="" />
			</ejb-finder>
			<new-instance-bean className="com.soffid.iam.api.DomainValue">
			</new-instance-bean>
		</finder>
		<ejb-handler jndi="java:/module/DomainService-v2">
			<insert-method method="create" returnBean="true">
				<parameter value="${instance}" />
			</insert-method>
			<update-method method="update" returnBean="true">
				<parameter value="${instance}" />
			</update-method>
			<delete-method method="delete">
				<parameter value="${instance}" />
			</delete-method>
		</ejb-handler>
		<script-handler>
			<update-script>null;</update-script>
		</script-handler>
		<validator>
			<attribute-validator expr="${instance.name}" notNull="true" friendlyName="applications.domainNameValidation"/>
		</validator>
	</datanode>

	<datanode name="domainValue">
		<ejb-handler jndi="java:/module/DomainService-v2">
			<insert-method method="create" returnBean="true">
				<parameter value="${instance}" />
			</insert-method>
			<update-method method="update" returnBean="true">
				<parameter value="${instance}" />
			</update-method>
			<delete-method method="delete">
				<parameter value="${instance}" />
			</delete-method>
		</ejb-handler>
	</datanode>

	<datanode name="rule" transient="true" />
	
	<datanode name="role">
		<finder name="grant" type="grant">
			<ejb-finder jndi="java:/module/ApplicationService-v2" method="findUserRolesByRoleNameAndRoleApplicationNameAndDispatcherName">
				<parameter value="${instance.name}" />
				<parameter value="${instance.informationSystemName}" />
				<parameter value="${instance.system}" />
			</ejb-finder>
			<new-instance-bean className="com.soffid.iam.api.RoleAccount">
			</new-instance-bean>
		</finder>
		<finder name="rule" type="rule" refreshAfterCommit="true">
			<ejb-finder jndi="java:/module/RulesService-v2" method="findRulesByRole">
				<parameter value="${instance.id}" />
			</ejb-finder>
		</finder>
		<ejb-handler jndi="java:/module/ApplicationService-v2">
			<insert-method method="create2" returnBean="true">
				<parameter value="${instance}" />
			</insert-method>
			<delete-method method="delete">
				<parameter value="${instance}" />
			</delete-method>
			<update-method method="update2">
				<parameter value="${instance}" />
			</update-method>
		</ejb-handler>
	</datanode>
	
	<datanode name="grant">
		<ejb-handler jndi="java:/module/ApplicationService-v2">
			<insert-method method="create" returnBean="true">
				<parameter value="${instance}" />
			</insert-method>
			<delete-method method="delete">
				<parameter value="${instance}" />
			</delete-method>
			<update-method method="update">
				<parameter value="${instance}" />
			</update-method>
		</ejb-handler>
	</datanode>

	<datanode name="managementRole">
		<finder name="manager" type="manager">
			<ejb-finder jndi="java:/module/ApplicationService-v2"
				method="findApplicationManagers">
				<parameter value="${parent.instance.name}" />
				<parameter value="${instance.name}" />
			</ejb-finder>
			<new-instance-bean className="com.soffid.iam.api.RoleAccount">
			</new-instance-bean>
		</finder>
	</datanode>
	
	<datanode name="manager">
		<ejb-handler jndi="java:/module/ApplicationService-v2">
			<insert-method method="create" returnBean="true">
				<parameter value="${instance}" />
			</insert-method>
			<delete-method method="delete">
				<parameter value="${instance}" />
			</delete-method>
			<update-method method="update">
				<parameter value="${instance}" />
			</update-method>
		</ejb-handler>
	</datanode>
	
</zkib-model>
