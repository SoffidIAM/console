<?xml version="1.0" encoding="UTF-8"?>

<zkib-model>

	<datanode name="groups">

		<finder name="group" type="group" >
			<ejb-finder jndi="java:/module/GroupService-v2" 
				method="findGroupByJsonQueryAsync"
				if = "${query != null &amp;&amp; query != '' &amp;&amp; synchro == null}">
				<parameter value="${query}"/>
			</ejb-finder>
			<ejb-finder jndi="java:/module/GroupService-v2" method="findGroupByJsonQuery" 
				if = "${query != null  &amp;&amp; synchro != null}">
				<parameter value="${query}"/>
			</ejb-finder>
			<ejb-finder jndi="java:/module/GroupService-v2" method="findGroupByTextAndFilterAsync" 
				if = "${queryText != null  &amp;&amp; queryText != '' &amp;&amp; synchro == null}">
				<parameter value="${queryText}"/>
				<parameter value="${query}"/>
			</ejb-finder>
			<ejb-finder jndi="java:/module/GroupService-v2" method="findGroupByTextAndFilterAsync" 
				if = "${queryText != null &amp;&amp; synchro != null}">
				<parameter value="${queryText}"/>
				<parameter value="${query}"/>
			</ejb-finder>
			<ejb-finder jndi="java:/module/GroupService-v2" method="findGroupByTextAndFilterAsync" 
				if = '${(queryText == null || queryText == "") &amp;&amp; (query == null || query == "") &amp;&amp; synchro == null}'>
				<parameter value=""/>
				<parameter value="not parent.name pr"/>
			</ejb-finder>
			<new-instance-bean className="com.soffid.iam.api.Group"></new-instance-bean>
		</finder>
	</datanode>

	<datanode name="group"
		idProperty="name" parentProperty="parentGroup" childProperty="group">
		<ejb-parent-loader jndi="java:/module/GroupService-v2" 
			method="findGroupByGroupName">
			<parameter value="${instance.parentGroup}"/>
		</ejb-parent-loader>
		<finder name="group" type="group">
			<ejb-finder jndi="java:/module/GroupService-v2" method="findSubgroupsByGroupName"
				if="canQueryGroup">  <!-- group:query -->
				<parameter value="${instance.name}" />
			</ejb-finder>
			<new-instance-bean className="com.soffid.iam.api.Group">
			</new-instance-bean>
		</finder>
		<finder name="grantedRoles" type="role">
			<ejb-finder jndi="java:/module/ApplicationService-v2" method="findRoleGrantsByGroup"
				if="canQueryGroupRoles"> <!-- group:role:query -->
				<parameter value="${instance}" />
			</ejb-finder>
			<new-instance-bean className="com.soffid.iam.api.Role">
			</new-instance-bean>
		</finder>
		<finder name="user" type="user">
			<ejb-finder jndi="java:/module/GroupService-v2" method="findUsersBelongtoGroupByGroupName"
				if="canQueryGroupUsers">  <!-- group:user:query -->
				<parameter value="${instance.name}" />
			</ejb-finder>
			<new-instance-bean className="com.soffid.iam.api.GroupUser">
			</new-instance-bean>
		</finder>

		<finder name="managementRole" type="managementRole" >  <!-- application:query -->
			<ejb-finder jndi="java:/module/ApplicationService-v2"
				method="findGroupManagementRoles">
			</ejb-finder>
		</finder>

		<finder name="usuarisRolGrup" type="usuarisRolGrup">
			<ejb-finder jndi="java:/module/GroupService-v2"
				method="findUsersRolesDomainTypeAndUserGroups" if="canQueryGroupRoles"> <!-- group:role:query -->
				<parameter value="${instance.name}" />
			</ejb-finder>
			<new-instance-bean className="com.soffid.iam.api.RoleAccount">
			</new-instance-bean>
		</finder>

		<ejb-handler jndi="java:/module/GroupService-v2">
			<insert-method method="create" returnBean="true">
				<parameter value="${instance}" />
			</insert-method>
			<delete-method method="delete">
				<parameter value="${instance}" />
			</delete-method>
			<update-method method="update">
				<parameter value="${instance}" />
			</update-method>
		</ejb-handler>
		<validator>
			<attribute-validator expr="${instance.description}" notNull="true" friendlyName="groups.DescriptionValidation"/>
			<attribute-validator expr="${instance.name}" notNull="true" friendlyName="groups.CodeValidation"/>
		</validator>
	</datanode>


	<datanode name="user">
		<ejb-handler jndi="java:/module/GroupService-v2">
			<insert-method method="create"  returnBean="true"> <!-- user:group:create -->
				<parameter value="${instance}" />
			</insert-method>
			<delete-method method="delete">
				<parameter value="${instance}" />
			</delete-method>
			<update-method method="update">
				<parameter value="${instance}" />
			</update-method>
		</ejb-handler>
	</datanode>

	<datanode name="role">
		<ejb-handler jndi="java:/module/ApplicationService-v2">
			<insert-method method="create" returnBean="true">
				<parameter value="${instance}" />
			</insert-method>
			<delete-method method="delete">
				<parameter value="${instance}" />
			</delete-method>
			<update-method method="update">
				<parameter value="${instance}" />
			</update-method>
		</ejb-handler>
	</datanode>

	<datanode name="usuarisRolGrup" />

	<datanode name="tipusUnitatOrganitzativa" />

	<datanode name="managementRole">
		<finder name="manager" type="manager">
			<ejb-finder jndi="java:/module/ApplicationService-v2"
				method="findGroupManagers">
				<parameter value="${parent.instance.name}" />
				<parameter value="${instance.name}" />
			</ejb-finder>
			<new-instance-bean className="com.soffid.iam.api.RoleAccount">
			</new-instance-bean>
		</finder>
	</datanode>
	
	<datanode name="manager">
		<ejb-handler jndi="java:/module/ApplicationService-v2">
			<insert-method method="create" returnBean="true">
				<parameter value="${instance}" />
			</insert-method>
			<delete-method method="delete">
				<parameter value="${instance}" />
			</delete-method>
			<update-method method="update">
				<parameter value="${instance}" />
			</update-method>
		</ejb-handler>
	</datanode>
	

</zkib-model>
