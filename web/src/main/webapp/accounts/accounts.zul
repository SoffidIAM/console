<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?page id="accounts"?>
<!-- <?taglib uri="WEB-INF/tld/web/core.dsp.tld" prefix="c" ?> -->
<?taglib 	uri="http://www.zkoss.org/dsp/web/core" prefix="c"?>
<?init class="es.caib.seycon.ng.web.CheckPermisos" arg0="accounts" ?>
<?component name="input_criteri" macro-uri="/comu/input_criteri.zul"?>
<?component name="input_dada" macro-uri="/comu/input_dada.zul"?>
<?component name="input_etiqueta" macro-uri="/comu/input_etiqueta.zul"?>
<?component name="account_acl" macro-uri="/accounts/accountAcl.zul"?>
<zk xmlns:h="http://www.w3.org/1999/xhtml">
	<style dynamic="true">
		<!-- Make Plain Grid -->
		.GridLayoutNoBorder tr.z-row td.z-row-inner, tr.z-row
		.z-cell,div.z-grid { border: none; overflow: hidden; zoom: 1;
		background: white; border-top: none; border-left: none;
		border-right: none; border-bottom: none; }
	</style>
	<frame id="p_accounts" saveContent="true"
		title="${c:l('accounts.lblTitle')}" width="99%">
		<attribute name="onCreate"><![CDATA[
			if (pageScope{"requestedAccount"} != null)
			{
				model.getJXPathContext().getVariables().declareVariable("synchro", "true");
				qw = esquema.getFellow("queryWindow");
				searchBox = qw.getFellow("searchBox");
				searchBox.addAttribute("system").setSearchFilter(pageScope{"requestedSystem"});
				searchBox.addAttribute("name").setSearchFilter(pageScope{"requestedAccount"});
				searchBox.addAttribute("type").setSearchFilter(null);
				searchBox.search();
				if (esquema.getFellow("lista").getFellow("listbox").getItems().size() == 1)
				{
					showDetall();
					esquema.removeCriteria();
					esquema.removeList();
					esquema.getFellow("lista").getFellow("listbox").setSelectedIndex(0);
				}
				else
				{
					model.getJXPathContext().getVariables().declareVariable("synchro", null);
				}

			}
		]]>
		</attribute>
		<style src="~./styles/estil.css" />
		<style src="/css/localSEU.css" />
		<style src="/css/devices.css"/>
		<style>
			span.etiqueta {white-space:nowrap !important;}
			.dataListcelldestacada div { background-color: #FF0000; }
			td.dataTreeCelldestacada div { border: 1px solid red; }
			td.dataTreeCelldestacada div
			.dateboxreadnoborderinp.text-disd { color: red !important; }
		</style>

		<zscript src="/comu/netejaCriteris.zul" />
		<zscript src="/comu/checkTruncatedResults.zul" />

		<datamodel id="model" rootNode="root" onCommit="updateFormFields()"
			src="accounts/descriptorAccounts.xml" />

		<zscript>
			<![CDATA[
				import es.caib.zkib.datasource.XPathUtils;
				import es.caib.seycon.ng.comu.*;
				
				statusEnabled = com.soffid.iam.api.AccountStatus.ACTIVE;
				statusDisabled = com.soffid.iam.api.AccountStatus.DISABLED;
				statusRemoved = com.soffid.iam.api.AccountStatus.REMOVED;

				model.getJXPathContext().getVariables().declareVariable("queryEnabled", false);

				String requestedAccount = Executions.getCurrent().getNativeRequest().getParameter("account");
				pageScope{"requestedAccount"} = requestedAccount;
			    String requestedSystem = Executions.getCurrent().getNativeRequest().getParameter("system");
				pageScope{"requestedSystem"} = requestedSystem;

				fileres = es.caib.seycon.ng.web.Custom.FILERES;
				fileresO = es.caib.seycon.ng.web.Custom.FILERES_OBRIR;
				try
				{
					es.caib.zkib.zkiblaf.Application.setTitle(org.zkoss.util.resource
							.Labels.getLabel("accounts.lblTitle"));
				}
				catch (Exception ex) {}
			
				queryWindowMin = "75px";
				queryWindowMax = "110px";
			
				view_altres = false;
			
				// Autoritzacions d'usuari;
				import es.caib.seycon.ng.utils.AutoritzacionsUsuari;
				canCreateAccounts = AutoritzacionsUsuari.hasCreateAccount();
				canDeleteAccounts = AutoritzacionsUsuari.hasDeleteAccount();
				canQueryAccounts = AutoritzacionsUsuari.hasQueryAccount();
				canModifyAccounts = AutoritzacionsUsuari.hasUpdateAccount();
				canCreateUserRole = AutoritzacionsUsuari.hasCreateUserRole();
				canDeleteUserRole = AutoritzacionsUsuari.hasDeleteUserRole();
				import es.caib.seycon.ng.comu.*;
				
				retrySearch = false;
				
				void select () {
							if (esquema.getFellow("lista").getFellow("listbox").selectedItem != null @and
								esquema.getFellow("lista").getFellow("listbox").selectedItem.value != null) {
								showDetall ();
							}
						}
				void updateFormFields() {
					if ((canCreateAccounts || canModifyAccounts)
							&& esquema.getFellow("lista").getFellow("listbox").selectedItem != null
							&& esquema.getFellow("lista").getFellow("listbox").selectedItem.value != null) {
			
						item = esquema.getFellow("lista").getFellow("listbox").selectedItem.value;
						form = page.getFellow("esquema").getFellow("dades");
						if (item.isNew()) {
							form.getFellow("lbAccountType").getItemAtIndex(0)
									.setVisible(false);
							form.getFellow("lbAccountType").getItemAtIndex(1)
									.setVisible(false);
							form.getFellow("txtAccountName").getFellow("dada")
									.setReadonly(false);
							form.getFellow("edit_codi_button").setVisible(false);
							form.getFellow("txtAccountDescription").getFellow("dada")
									.setReadonly(false);
							form.getFellow("lbAccountType").setDisabled(false);
							form.getFellow("lbAccountDisabled").setDisabled(false);
							for (String s: new String [] {"userAcl", "ownerAcl", "managerAcl"})
							{
								form.getFellow(s).getFellow("btnGrantUser").setDisabled(false);
//								form.getFellow(s).getFellow("btnGrantGroup").setDisabled(false);
//								form.getFellow(s).getFellow("btnGrantRole").setDisabled(false);
								form.getFellow(s).getFellow("b_esborrar").setDisabled(false);
							}
						} else if (item.instance.type == AccountType.USER) {
							form.getFellow("lbAccountType").getItemAtIndex(0)
									.setVisible(false);
							form.getFellow("lbAccountType").getItemAtIndex(1)
									.setVisible(true);
							form.getFellow("txtAccountName").getFellow("dada")
									.setReadonly(true);
							form.getFellow("edit_codi_button").setVisible(true);
							form.getFellow("txtAccountDescription").getFellow("dada")
									.setReadonly(true);
							form.getFellow("lbAccountType").setDisabled(false);
							form.getFellow("lbAccountDisabled").setDisabled(true);
							for (String s: new String [] {"userAcl", "ownerAcl", "managerAcl"})
							{
								form.getFellow(s).getFellow("btnGrantUser").setDisabled(true);
//								form.getFellow(s).getFellow("btnGrantGroup").setDisabled(true);
//								form.getFellow(s).getFellow("btnGrantRole").setDisabled(true);
								form.getFellow(s).getFellow("b_esborrar").setDisabled(true);
							}
						} else {
							form.getFellow("lbAccountType").getItemAtIndex(0)
									.setVisible(false);
							form.getFellow("lbAccountType").getItemAtIndex(1)
									.setVisible(true);
							form.getFellow("txtAccountName").getFellow("dada")
									.setReadonly(true);
							form.getFellow("edit_codi_button").setVisible(true);
							form.getFellow("txtAccountDescription").getFellow("dada")
									.setReadonly(false);
							form.getFellow("lbAccountType").setDisabled(false);
							form.getFellow("lbAccountDisabled").setDisabled(false);
							for (String s: new String [] {"userAcl", "ownerAcl", "managerAcl"})
							{
								form.getFellow(s).getFellow("btnGrantUser").setDisabled(false);
//								form.getFellow(s).getFellow("btnGrantGroup").setDisabled(false);
//								form.getFellow(s).getFellow("btnGrantRole").setDisabled(false);
								form.getFellow(s).getFellow("b_esborrar").setDisabled(false);
							}
						}
					} else {
						form = page.getFellow("esquema").getFellow("dades");
						for (String s: new String [] {"userAcl", "ownerAcl", "managerAcl"})
						{
							form.getFellow(s).getFellow("btnGrantUser").setDisabled(true);
//							form.getFellow(s).getFellow("btnGrantGroup").setDisabled(true);
//							form.getFellow(s).getFellow("btnGrantRole").setDisabled(true);
								form.getFellow(s).getFellow("b_esborrar").setDisabled(true);
						}
						form.getFellow("txtAccountName").getFellow("dada")
								.setReadonly(true);
						form.getFellow("edit_codi_button").setVisible(true);
						form.getFellow("txtAccountDescription").getFellow("dada")
								.setReadonly(true);
						form.getFellow("lbAccountType").setDisabled(true);
						form.getFellow("lbAccountDisabled").setDisabled(true);
					}
					checkIsUpdatePending();
				}
				void showLista() {
					esquema.getFellow("lista").getFellow("listbox").clearSelection();
					esquema.getFellow("lista").getFellow("listbox").setRows(fileresO);
				}
				void showDetall() {
					esquema.getFellow("lista").getFellow("listbox").setRows(5);
					esquema.showFormulari();
				}
				
				void setPassword ()
				{
					try{
						newPassword.setVisible(true);
						newPassword.setMode("highlighted");
					} catch ( InterruptedException e) {}
				}
				
				void checkIsUpdatePending() {
					try {
						es.caib.zkib.component.Form form = Path.getComponent("/esquema/dades/form");
						es.caib.zkib.jxpath.JXPathContext xpathCtx = form.getJXPathContext();
						es.caib.zkib.binder.BindContext ctx = XPathUtils.getComponentContext(form);
						es.caib.zkib.datamodel.DataNode dn = xpathCtx.getValue(".");
						if (dn != null)
						{
							Account acc = dn.getInstance();
							if (acc != null)
								
							{
								es.caib.seycon.ng.servei.AccountService accountService = es.caib.seycon.ng.ServiceLocator.instance().getAccountService();
								form.getFellow("updateIndicator").setVisible ( accountService.isUpdatePending(acc));
								es.caib.zkib.datasource.DataSource ds = ctx.getDataSource();
								
								String prefix = ctx.getXPath();
								ds.sendEvent(new es.caib.zkib.events.XPathRerunEvent(ds, XPathUtils.concat(prefix,"/@lastLogin")));
								ds.sendEvent(new es.caib.zkib.events.XPathRerunEvent(ds, XPathUtils.concat(prefix,"/@lastUpdated")));
								ds.sendEvent(new es.caib.zkib.events.XPathRerunEvent(ds, XPathUtils.concat(prefix,"/@lastPasswordSet")));
								ds.sendEvent(new es.caib.zkib.events.XPathRerunEvent(ds, XPathUtils.concat(prefix,"/@passwordExpiration")));
							}
						}
					} catch (Exception e) {
						// Ignore error when no account is selected
					}
				}
				
				void confirmDelete ()
				{
					es.caib.zkib.component.DataListbox lb = (es.caib.zkib.component.DataListbox) 
							esquema.getFellow("lista").getFellow("listbox");
					es.caib.zkib.binder.BindContext ctx =
							XPathUtils.getComponentContext(esquema.getFellow("dades").getFellow("form"));
					String name = XPathUtils.getValue(ctx, "name");
					String dispatcher = XPathUtils.getValue(ctx, "dispatcher");
					es.caib.zkib.zkiblaf.Missatgebox.confirmaOK_CANCEL(
							org.zkoss.util.resource.Labels.getLabel("accounts.deleteConfirm", new String [] { name, dispatcher}),
							new org.zkoss.zk.ui.event.EventListener() {
								public void onEvent(Event evt) {
									if ("onOK".equals(evt.getName())) {
										lb.delete();
									}
								}
							}
							);
				}
				
				void onChangeDispatcher()
				{
					Path.getComponent("/esquema/dades/attributesEmbed/attributes").updateMetadata();
				}
				void selectParent() {
					es.caib.zkib.component.DataTree tree = selectFolderWnd
							.getFellow("folderTree");
					tree.setSelectedItem(null);
					selectFolderWnd.doHighlighted();
				}
				
				void selectedParentFolder() {
					es.caib.zkib.component.DataTree tree = selectFolderWnd
							.getFellow("folderTree");
					Treeitem item = tree.getSelectedItem();
					if (item != null) {
						es.caib.zkib.binder.BindContext ctx1 = es.caib.zkib.datasource.XPathUtils
								.getComponentContext(item);
						es.caib.zkib.binder.BindContext ctx2 = es.caib.zkib.datasource.XPathUtils
								.getComponentContext(esquema.getFellow("dades").getFellow("form"));
						es.caib.zkib.datasource.XPathUtils.setValue(ctx2, "@vaultFolder",
								es.caib.zkib.datasource.XPathUtils.getValue(ctx1, "@name"));
						es.caib.zkib.datasource.XPathUtils.setValue(ctx2, "@vaultFolderId",
								es.caib.zkib.datasource.XPathUtils.getValue(ctx1, "@id"));

					} else {
						es.caib.zkib.binder.BindContext ctx2 = es.caib.zkib.datasource.XPathUtils
								.getComponentContext(esquema.getFellow("dades").getFellow("form"));
						es.caib.zkib.datasource.XPathUtils.setValue(ctx2, "@vaultFolder", null);
						es.caib.zkib.datasource.XPathUtils.setValue(ctx2, "@vaultFolderId", null);
					}
					selectFolderWnd.setVisible(false);
				}
			]]>
		</zscript>
 		<esquemavertical datamodel="/model" focusCriteri="queryName"
			id="esquema" onHideFormulari="showLista()" hideSearchToolbar="true">

			<criteris id="queryWindow" style="margin-bottom:1em;" width="100%" height="">
				<attribute name="onCreate"><![CDATA[
					s = new HashSet();
					s.add("P");
					s.add("S");
					s.add("I");
					searchBox.addAttribute("type").setSelectedValues(s);
				]]></attribute>
				<searchbox auto="true" id="searchBox"
					jsonObject="com.soffid.iam.api.Account"
					defaultAttributes="system,name,description,type" dataPath="/model:/account"
					variableName="query">
				</searchbox>
			</criteris>

			<navegador id="lista" width="${amplaria}">
				<toolbar>
					<toolbarbutton use="com.soffid.iam.web.HideColumnsComponent" listbox="listbox" preferenceName="acc"/>
					<insertbutton acces="${canCreateAccounts}"
						listbox="/esquema/lista/listbox" onClick="showDetall()" />
					<deletebutton acces="${canDeleteAccounts}"
						listbox="/esquema/lista/listbox"
						onClick="confirmDelete(); event.stopPropagation();"/>
					<commitbutton datamodel="/model" />
					<undobutton datamodel="/model"
						listbox="/esquema/lista/listbox" />
					<listexporttoolbarbutton acces="${canQueryAccounts}"
						listbox="/esquema/lista/listbox" />
				</toolbar>
				<listbox id="listbox" autocommit="false" dataPath="/model:/account"
					fixedLayout="true" height="96%" onClick="showDetall()"
					onSelect="select()" rows="${fileres}" onCreate="checkTruncatedList(self)">
					<listhead>
						<listheader label="${c:l('accounts.name')}" sort="auto" />
						<listheader label="${c:l('accounts.dispatcher')}" sort="auto" />
						<listheader label="${c:l('accounts.description')}" sort="auto" />
						<listheader label="${c:l('accounts.type')}" sort="auto"  visible="false"/>
						<listheader label="${c:l('accounts.policy')}" sort="auto"  visible="false"/>
						<listheader label="${c:l('accounts.lastUpdated')}" sort="auto"  visible="false"/>
						<listheader label="${c:l('accounts.lastLogin')}" sort="auto"  visible="false"/>
						<listheader label="${c:l('accounts.lastPasswordSet')}" sort="auto"  visible="false"/>
						<listheader label="${c:l('accounts.passwordExpiration')}" sort="auto"  visible="false"/>
						<listheader label="${c:l('accounts.status')}" sort="auto" visible="false"/>
					</listhead>
					<listfoot>
						<listfooter span="3">
							<label id="listboxFoot" style="margin-left: 10px;" />
						</listfooter>
					</listfoot>
					<dataitem bind=".">
						<listcell bind="@name" />
						<listcell bind="@dispatcher" />
						<listcell bind="@description" />
						<listcell >
												<listbox bind="@type" mold="label"
													dataPath="/model:/type" onSelect="alert('A');invalidate();">
													<dataitem bind="@value">
														<listcell bind="@literal" />
													</dataitem>
												</listbox>
						</listcell>
						<listcell>
													<listbox bind="@passwordPolicy" mold="label"
														dataPath="/model:/tipusUsuari">
														<dataitem bind="@codi">
															<listcell bind="@descripcio" />
														</dataitem>
													</listbox>
													
						</listcell>
						<listcell ><datebox readonly="true" sclass="dateboxreadnoborder" buttonVisible="false" bind="@lastUpdated" format="${c:l('usuaris.zul.dateFormat')}" /></listcell>
						<listcell ><datebox readonly="true" sclass="dateboxreadnoborder" buttonVisible="false" bind="@lastLogin" format="${c:l('usuaris.zul.dateFormat')}" /></listcell>
						<listcell ><datebox readonly="true" sclass="dateboxreadnoborder" buttonVisible="false" bind="@lastPasswordSet"  format="${c:l('usuaris.zul.dateFormat')}"/></listcell>
						<listcell ><datebox readonly="true" sclass="dateboxreadnoborder" buttonVisible="false" bind="@passwordExpiration"  format="${c:l('usuaris.zul.dateFormat')}"/></listcell>
						<listcell>
												<listbox bind="@status" disabled="true"
													mold="label">
													<listitem value="${statusEnabled}">
														<listcell label="${c:l('accounts.Enabled')}" />
													</listitem>
													<listitem value="${statusDisabled}">
														<listcell label="${c:l('accounts.Disabled')}" />
													</listitem>
													<listitem value="${statusRemoved}">
														<listcell label="${c:l('accounts.Removed')}" />
													</listitem>
												</listbox>
						</listcell>
					</dataitem>
				</listbox>
			</navegador>

			<detalls id="dades" width="100%" style="border: none">
				<toolbar height="22px" if="${requestedAccount != null}">
					<commitbutton datamodel="/model" />
				</toolbar>
				<form dataPath="/esquema/lista/listbox:/" id="form"  width="100%"
					onChangeXPath="updateFormFields()">
					<timer delay="10000" repeats="true" onTimer="checkIsUpdatePending();"/>
					<tabbox id="panels" class="thicktabbox"  width="100%">
						<tabs>
							<tab label="${c:l('usuaris.zul.Informaciabasica')}" />
							<tab label="${c:l('usuaris.zul.Rols')}" />
							<tab label="${c:l('accounts.RolsHeredats')}" />
							<tab label="${c:l('accounts.attribute') }"/>
						</tabs>

						<tabpanels >
							<tabpanel id="basica">
								<hbox width="100%" widths="50%,1px,45%,*">
									<grid>
										<rows>
											<row>
												<input_etiqueta value="${c:l('accounts.name')}:" />
												<hbox width="97%" widths="*, 1em, 16px">
													<input_dada id="txtAccountName" bind="@name"
														lectura="${!canModifyAccounts}" maxlength="10"
														multiline_custom="false" width_custom="100%" />
													<imageclic src='/img/pencil.png' onClick='self.previousSibling.getFellow("dada").readonly = false; self.visible = false; '
														id ="edit_codi_button" visible="${canModifyAccounts}"/>
													<label value="*" />
													<image src="~./img/exclamacio.gif"
														id="updateIndicator" visible="false" width="16px"
														height="16px">
													</image>
												</hbox>
											</row>
											<row>
												<input_etiqueta style="white-space:nowrap;"
													value="${c:l('accounts.dispatcher')}:" />
												<hbox>
													<listbox bind="@dispatcher" id="lbAccountDispatcher"
														onSelect="onChangeDispatcher()"
														mold="select" dataPath="/model:/dispatcher">
														<dataitem bind="@codi">
															<listcell bind="@codi" />
														</dataitem>
													</listbox>
													
													<label value="*" />
												</hbox>
											</row>
											<row>
												<input_etiqueta style="white-space:nowrap;"
													value="${c:l('accounts.type')}:" />
												<listbox bind="@type" id="lbAccountType" mold="select"
													dataPath="/model:/type">
													<dataitem bind="@value">
														<listcell bind="@literal" />
													</dataitem>
												</listbox>
											</row>
											<row>
												<input_etiqueta style="white-space:nowrap;"
													value="${c:l('accounts.policy')}:" />
													
												<hbox>
													<listbox bind="@passwordPolicy" id="lbPolicy" mold="select"
														dataPath="/model:/tipusUsuari">
														<dataitem bind="@codi">
															<listcell bind="@descripcio" />
														</dataitem>
													</listbox>
													
													<label value="*" />
												</hbox>
											</row>
											<row>
												<input_etiqueta
													value="${c:l('accounts.description')}:" />
												<input_dada id="txtAccountDescription"
													bind="@description" lectura="${!canModifyAccounts}"
													maxlength="50" multiline_custom="false"
													width_custom="97%" />
											</row>
											<row>
												<input_etiqueta
													value="${c:l('accounts.lastUpdated')}:" />
												<datebox readonly="true" disabled="true" buttonVisible="false"
													bind="@lastUpdated" width="10em" 
													format="${c:l('usuaris.zul.dateFormat')}" />
											</row>
											<row>
												<input_etiqueta
													value="${c:l('accounts.lastLogin')}:" />
												<datebox readonly="true" disabled="true" buttonVisible="false"
													bind="@lastLogin" width="10em" 
													format="${c:l('usuaris.zul.dateFormat')}" />
											</row>
											<row>
												<input_etiqueta
													value="${c:l('accounts.lastPasswordSet')}:" />
												<hbox>
													<datebox readonly="true" disabled="true" buttonVisible="false"
														bind="@lastPasswordSet" width="10em" 
														format="${c:l('usuaris.zul.dateFormat')}" />
													<button label="${c:l('accounts.setPassword')}"
														onClick="setPassword()" />
												</hbox>
											</row>
											<row>
												<input_etiqueta
													value="${c:l('accounts.passwordExpiration')}:" />
												<datebox readonly="true" disabled="true" buttonVisible="false"
													bind="@passwordExpiration" width="10em" 
													format="${c:l('usuaris.zul.dateFormat')}" />
											</row>
											<row>
												<input_etiqueta value="${c:l('accounts.status')}:" />
												<listbox bind="@status" id="lbAccountDisabled"
													mold="select">
													<listitem value="${statusEnabled}">
														<listcell label="${c:l('accounts.Enabled')}" />
													</listitem>
													<listitem value="${statusDisabled}">
														<listcell label="${c:l('accounts.Disabled')}" />
													</listitem>
													<listitem value="${statusRemoved}">
														<listcell label="${c:l('accounts.Removed')}" />
													</listitem>
												</listbox>
											</row>
											<row>
												<input_etiqueta value="${c:l('vault.account.folder')}:" />
												<div>
													<label bind="@vaultFolder" />
													<imageclic src="/img/root.gif" id="changeFolderButton" width="16px" height="16px" onClick="selectParent()">
													</imageclic>
												</div>
											</row>
										</rows>
									</grid>
									<separator />
									<vbox>
										<label value="${c:l('accounts.owner')}" />
										<account_acl id="ownerAcl" userList="ownerUsers" groupList="ownerGroups" roleList="ownerRoles"/>
										<label value="${c:l('accounts.manager')}" />
										<account_acl id="managerAcl" userList="managerUsers" groupList="managerGroups" roleList="managerRoles"/>
										<label value="${c:l('accounts.userAccess')}" />
										<account_acl id="userAcl" userList="grantedUsers" groupList="grantedGroups" roleList="grantedRoles"/>
										<checkbox id="inheritNewPermissionsCheckbox" bind="@inheritNewPermissions" label="${c:l('vault.account.inheritPermissions')}"></checkbox>
									</vbox>
								</hbox>
							</tabpanel>

							<tabpanel id="rols">
								<vbox width="100%">
									<listbox id="gridRols" dataPath="/esquema/lista/listbox:/rol"
										fixedLayout="true" sclass="likeagrid">
										<attribute name="onNewRow"><![CDATA[
											ctx = XPathUtils.getComponentContext(event.data);
											if (ctx == null)
												return;
											Listcell cellImage = event.data.getChildren().get(0);
											Image image = cellImage.getChildren().get(0);
											es.caib.seycon.ng.comu.SoDRisk risk = XPathUtils.getValue (ctx, "@sodRisk");
											if (risk != null)
											{
												image.setSrc("/img/risk-" + risk.getValue()+".png");
												image.setVisible(true);
											}
											// Disable domain value
											if ( XPathUtils.getValue (ctx, "valorDomini") == null ||
												XPathUtils.getValue (ctx, "valorDomini/@valor") == null )
											{
												event.data.getChildren().get(1).getChildren().get(1).visible = false;
											}
											startbox = event.data.getChildren().get(4).getChildren().get(0);
											endbox = event.data.getChildren().get(5).getChildren().get(0);
											if (XPathUtils.getValue(ctx,"id") != null)
											{
												startbox.disabled = endbox.disabled = true;
												Date d1 = XPathUtils.getValue(ctx,"@startDate");
												Date d2 = XPathUtils.getValue(ctx,"@endDate");
												Date now = new Date();
												if (d1 != null && now.before(d1) )
												{
													for (c: event.data.getChildren())
													{
														c.style = "background-color: #ffffc0;";
													}
												}
												else if (d2 != null && d2.before(now)) 
												{
													for (c: event.data.getChildren())
													{
														c.style = "text-decoration: line-through;";
													}
												} else {
													event.data.style = event.data.style + "; background-color: transparent;";
												}
											}
											// Show sand clock when waiting for approval
											approvalPending = XPathUtils.getValue(ctx,"@approvalPending");
											if (approvalPending != null && approvalPending)
											{
												image.setVisible(false);
												Image image2 = cellImage.getChildren().get(1);
												image2.setVisible(true);
												for (c: event.data.getChildren())
												{
													c.style = "background-color: #ffffc0;";
												}
											}
											// Show sand clock when waiting for approval
											removalPending = XPathUtils.getValue(ctx,"@removalPending");
											if (removalPending != null && removalPending && 
													!cellImage.getChildren().isEmpty())
											{
												Image image = cellImage.getChildren().get(0);
												image.setVisible(false);
												Image image2 = cellImage.getChildren().get(1);
												image2.setVisible(true);
												for (c: event.data.getChildren())
												{
													c.style = "background-color: #ffffc0;text-decoration: line-through;";
												}
											}
										]]></attribute>
										<attribute name="onActualitza">
											<![CDATA[
												dada = (String) (event.getData()[0]);
												modelProxy = (es.caib.zkib.binder.list.FullModelProxy) gridRols.getModel();
											
												ds = gridRols.getDataSource();
												es.caib.zkib.jxpath.JXPathContext xpathCtx = ds.getJXPathContext();
												if (event.getData()[3] != null) {
													valorDomini = (event.getData()[3])[0];
													bbdd = (String) (event.getData()[5]);
													xpath = gridRols.getXPath() + "[@nomRol = '" + dada
															+ "' and @baseDeDades = '" + bbdd
															+ "'and valorDomini/@valor = '" + valorDomini + "']";
												} else {
													valorDomini = "";
													bbdd = (String) (event.getData()[5]);
													xpath = gridRols.getXPath() + "[@nomRol = '" + dada
															+ "' and @baseDeDades = '" + bbdd + "']";
												}
												boolean jaExisteix = true;
												try {
													valor = xpathCtx.getValue(xpath);
												} catch (Exception e) {
													jaExisteix = false;
												}
												
												if (jaExisteix) {
													Missatgebox.info(String.format(
															org.zkoss.util.resource.Labels.getLabel("usuaris.RolAssignat"),
															new Object[] { dada, bbdd, valorDomini }),
															org.zkoss.util.resource.Labels.getLabel("usuaris.ErrorRol"));
												} else {
													position = modelProxy.newInstance();
													ds = gridRols.getDataSource();
													xpathCtx = ds.getJXPathContext();
													xpath = gridRols.getXPath() + modelProxy.getBind(position);
													pointer = xpathCtx.createPath(xpath);
													xpathCtx2 = xpathCtx.getRelativeContext(pointer);
													
													homeCtx = XPathUtils.getComponentContext(form);
													
													xpathCtx2.setValue("@codiUsuari", null);
													xpathCtx2.setValue("@accountId", XPathUtils.getValue(homeCtx, "@id"));
													xpathCtx2.setValue("@accountName", XPathUtils.getValue(homeCtx, "@name"));
													xpathCtx2.setValue("@accountDispatcher",
															XPathUtils.getValue(homeCtx, "@dispatcher"));
													xpathCtx2.setValue("@nomRol", event.getData()[0]);
													xpathCtx2.setValue("@baseDeDades", event.getData()[5]);
													xpathCtx2.setValue("@codiAplicacio", event.getData()[1]);
													xpathCtx2.setValue("@descripcioRol", event.getData()[2]);
													xpathCtx2.setValue("@nomComplertUsuari",
															XPathUtils.getValue(homeCtx, "@description"));
													
													if (event.getData()[3] != null) {
														es.caib.seycon.ng.comu.ValorDomini valor = new es.caib.seycon.ng.comu.ValorDomini();
														valor.setValor((event.getData()[3])[0]);
														valor.setDescripcio((event.getData()[3])[1]);
														valor.setNomDomini(event.getData()[4]);
														valor.setCodiExternDomini(event.getData()[1]);
														xpathCtx2.setValue("/valorDomini", valor);
													}
											
													pointer.invalidate();
												}
											]]>
										</attribute>
										<listhead>
											<listheader label="Risk" sort="auto"
												width="30px" />
											<listheader label="${c:l('usuaris.zul.Rol')}" sort="auto"
												width="30%" />
											<listheader label="${c:l('usuaris.zul.Bbdd')}" sort="auto"
												width="10%" />
											<listheader label="${c:l('usuaris.zul.Aplicacia')}"
												sort="auto" width="20%" />
											<listheader
												label="${c:l('usuaris.zul.startDate')}" width="10%" />
											<listheader
												label="${c:l('usuaris.zul.endDate')}" width="10%" />
											<listheader label="${c:l('usuaris.zul.')}"
												visible="${canDeleteUserRole}" width="30px" />
											<listheader label="${c:l('usuaris.zul.')}"
												visible="${canDeleteUserRole}" width="30px" />
										</listhead>
										<dataitem bind=".">
											<listcell>
												<imageclic align="right" visible="false">
													<attribute name="onClick">
													<![CDATA[
													ctx = XPathUtils.getComponentContext(self);
													Collection rules = XPathUtils.getValue(ctx, "@sodRules");
													StringBuffer sb = new StringBuffer ();
													for (es.caib.seycon.ng.comu.SoDRule rule: rules)
													{
														sb.append ("- ").
															append (rule.getName()).
															append ("\n");
															
													}
													Missatgebox.info(
														String.format("Affected by rules:\n %s",
															new Object[] { sb.toString() }));
]]></attribute>
												</imageclic>
												<imageclic align="right" visible="false" width="24px" height="24px" src="/img/hourglass.gif">
													<attribute name="onClick">
													<![CDATA[
	ctx = XPathUtils.getComponentContext(self);
	proc = XPathUtils.getValue(ctx, "/@approvalProcess");
	if (idProces != null) {
		es.caib.zkib.zkiblaf.Application.call("wf/process.zul?id=" + proc);
	}
]]></attribute>
												</imageclic>
											</listcell>
											<listcell >
												<label  bind="@nomRol" tooltip="rolsTooltip"></label>
												<div style="display:inline" tooltip="domainTooltip">
													<label value = "/"></label>
													<label  bind="valorDomini/@valor"/>
												</div>
											</listcell>
											<listcell bind="@baseDeDades" />
											<listcell bind="@codiAplicacio" />
											<listcell >
												<datebox format="${c:l('usuaris.zul.dateFormat2')}" disabled="${!canCreateUserRole}" buttonVisible="false" bind="@startDate"></datebox>
											</listcell>
											<listcell >
												<datebox format="${c:l('usuaris.zul.dateFormat2')}" disabled="${!canCreateUserRole}" buttonVisible="false" bind="@endDate"></datebox>
											</listcell>
											<listcell>
												<imageclic align="right" src="~./img/list-remove.gif">
													<attribute name="onClick">
														<![CDATA[
															// Controlem que si és gestionableWF='S' no es puga esborrar
															listCell = self.getParent();
															dlistbox = listCell.getListbox();
															modelo = dlistbox.getModel();
															listItem = listCell.getParent();
															posicio = listItem.getIndex();
															elemPos = modelo.getElementAt(posicio);
															xpath = elemPos.getDataContext().getXPath();
															dataSource = gridRols.getDataSource();
															context = dataSource.getJXPathContext();
															dada = context.getValue(xpath + "/@nomRol");
															/*gestionableWF =
															context.getValue(xpath+"/@gestionableWF");
															nomRol =
															context.getValue(xpath+"/@nomRol");
															if
															("S".equals(gestionableWF)) {
															Missatgebox.avis(String.format(org.zkoss.util.resource.Labels.getLabel("usuaris.RolBorrar"),
															new Object [] {nomRol}));
															}*/
															if (canDeleteUserRole) {
														
																Missatgebox.confirmaOK_CANCEL(String.format(
																		org.zkoss.util.resource.Labels
																				.getLabel("usuaris.SegurRolBorrar"),
																		new Object[] { dada }), org.zkoss.util.resource.Labels
																		.getLabel("usuaris.Esborra"), new EventListener() {
																	public void onEvent(Event evt) {
																		if ("onOK".equals(evt.getName())) {
																			context.removePath(xpath);
																		}
																	}
																});
															}
														]]>
													</attribute>
												</imageclic>
											</listcell>
											<listcell>
												<checkbox>
													<!--attribute name="onCheck"> listCell = self.getParent(); dlistbox 
														= listCell.getListbox(); modelo = dlistbox.getModel(); listItem = listCell.getParent(); 
														posicio = listItem.getIndex(); elemPos = modelo.getElementAt(posicio); xpath 
														= elemPos.getDataContext().getXPath(); dataSource = gridRols.getDataSource(); 
														context = dataSource.getJXPathContext(); gestionableWF = context.getValue(xpath+"/@gestionableWF"); 
														nomRol = context.getValue(xpath+"/@nomRol"); if ("S".equals(gestionableWF)) 
														{ Missatgebox.avis("No es pot esborrar el rol '"+nomRol+"', és un rol gestionable 
														per Workflows"); self.setChecked(false); } </attribute -->
												</checkbox>
											</listcell>
										</dataitem>
									</listbox>
									<popup id="rolsTooltip" width="200px">
										<attribute name="onOpen">
											<![CDATA[
												if (event.getReference() instanceof DataListcell) {
													listCell = event.getReference();
													dlistbox = listCell.getListbox();
													modelo = dlistbox.getModel();
													listItem = listCell.getParent();
													posicio = listItem.getIndex();
													elemPos = modelo.getElementAt(posicio);
													xpath = elemPos.getDataContext().getXPath();
													dataSource = gridRols.getDataSource();
													context = dataSource.getJXPathContext();
													dada = context.getValue(xpath + "/@nomRol");
													desc = context.getValue(xpath + "/@descripcioRol");
													rolsTooltipLabel.value = dada + (desc != null ? ("\n" + desc) : "");
												}
											]]>
										</attribute>
										<label id="rolsTooltipLabel" multiline="true" value="" />
										</popup>
										<popup id="domainTooltip" width="200px">
											<attribute name="onOpen">
											    label = event.getReference();
											    if (label != null)
											    {
													listCell = label.parent;
													if (listCell instanceof DataListcell) {
														dlistbox = listCell.getListbox();
														modelo = dlistbox.getModel();
														listItem = listCell.getParent();
														posicio = listItem.getIndex();
														elemPos = modelo.getElementAt(posicio);
														xpath = elemPos.getDataContext().getXPath();
														dataSource = gridRols.getDataSource();
														context = dataSource.getJXPathContext();
														dada = context.getValue(xpath + "/valorDomini/@nomDomini");
														desc = context.getValue(xpath + "/valorDomini/@descripcio");
														domainTooltipLabel.value = dada + (desc != null ? ("\n" + desc) : "");
													}
												}
											</attribute>
											<label id="domainTooltipLabel" multiline="true" value="" />
										</popup>
								</vbox>
								<hbox width="100%" widths="50%,50%">
									<hbox>
										<button image="~./img/list-add.gif"
											label="${c:l('usuaris.zul.Afegeixnou')}"
											visible="${canCreateUserRole}">
											<attribute name="onClick">
												<![CDATA[
													es.caib.zkib.binder.BindContext ctx = XPathUtils.getComponentContext(self);
													String dispatcher = XPathUtils.getValue(ctx, "@dispatcher");
													desktop.getPage("rolsLlista").setAttribute("tipus", "wizard");
													desktop.getPage("rolsLlista").setAttribute("mostraGestionableWF", "true");
													desktop.getPage("rolsLlista").setAttribute("usuari", null);
													desktop.getPage("rolsLlista").setAttribute("rol_bbdd", dispatcher);
													Events.postEvent("onInicia",
															desktop.getPage("rolsLlista").getFellow("esquemaLlista"), gridRols);
												]]>
											</attribute>
										</button>
										<button image="~./img/list-remove.gif"
											label="${c:l('usuaris.zul.Esborrarolsseleccion')}"
											visible="${canCreateUserRole}">
											<attribute name="onClick">
												<![CDATA[
													String nomRolsBorrar = "";
													ArrayList rolsBorrar = new ArrayList();
													Collection items = gridRols.getItems();
													for (Iterator it = items.iterator(); it.hasNext();) {
														Listitem item = (Listitem) it.next();
														Collection cells = item.getChildren();
														int pos = 0;
														String nomRol = "";
														Checkbox cbox = null;
														Listcell celdaBorrar = null;
														for (Iterator itcell = cells.iterator(); itcell.hasNext();) {
															Listcell cell = (Listcell) itcell.next();
															if (pos == 1) {
																nomRol = cell.getLabel();
																celdaBorrar = cell;
															} else if (pos == 7) {
																Iterator itcb = cell.getChildren().iterator();
																if (itcb.hasNext())
																	cbox = (Checkbox) itcb.next();
															}
															pos++;
														}
														if (cbox != null && cbox.isChecked()) {
															nomRolsBorrar += nomRol + ", ";
															rolsBorrar.add(celdaBorrar);
														}
													}
													if (!"".equals(nomRolsBorrar)) {
														nomRolsBorrar = nomRolsBorrar.substring(0, nomRolsBorrar.length() - 2);
														Missatgebox.confirmaOK_CANCEL(String.format(
																org.zkoss.util.resource.Labels
																		.getLabel("usuaris.SegurRolsBorrar"),
																new Object[] { nomRolsBorrar }), org.zkoss.util.resource.Labels
																.getLabel("usuaris.Esborra"), new EventListener() {
															public void onEvent(Event evt) {
																if ("onOK".equals(evt.getName())) {
																	for (i = 0; i < rolsBorrar.size(); i++) {
																		listCell = rolsBorrar.get(i);
																		dlistbox = listCell.getListbox();
																		modelo = dlistbox.getModel();
																		listItem = listCell.getParent();
																		posicio = listItem.getIndex();
																		elemPos = modelo.getElementAt(posicio);
																		xpath = elemPos.getDataContext().getXPath();
																		dataSource = gridRols.getDataSource();
																		context = dataSource.getJXPathContext();
																		context.removePath(xpath);
																	}
																}
															}
														});
													}
												]]>
											</attribute>
										</button>
									</hbox>
									<hbox style="float:right">
										<listexportbutton
											acces="${canQueryUser}" listbox="gridRols" />
									</hbox>
								</hbox>
							</tabpanel>

							<tabpanel id="rolsHeredats">
								<vbox width="100%">
									<listbox autocommit="false"
										dataPath="/esquema/lista/listbox:/rolsheredats"
										fixedLayout="true" height="400px" id="gridRolsHeredats"
										sclass="likeagrid">
										<listhead>
											<listheader
												label="${c:l('accounts.role')}" sort="auto" width="450px" />
											<listheader
												label="${c:l('accounts.dispatcher')}" sort="auto" />
											<listheader
												label="${c:l('accounts.scope')}" sort="auto" />
											<listheader
												label="${c:l('accounts.origin')}" sort="auto" />
										</listhead>
										<dataitem bind=".">
											<listcell bind="@rolName" />
											<listcell
												bind="@dispatcher" />
											<listcell
												bind="@domainValue" />
											<listcell bind="@origin" />
										</dataitem>
									</listbox>
									<hbox style="float:right">
										<listexportbutton
											acces="${canQueryUser}" listbox="gridRolsHeredats" />
									</hbox>
								</vbox>
							</tabpanel>
							<tabpanel id="attributes" width="100%">
								<embed src="/accounts/attributes.zul" width="100%" id="attributesEmbed"/>
							</tabpanel>
						</tabpanels>
					</tabbox>
				</form>
			</detalls>
		</esquemavertical>
		
		<window closable="true" id="newPassword" position="center, center"
			sizable="true" title="${c:l('accounts.setPassword.title')}"
			visible="false" width="34em"
			onClose="onCancelPassword(); event.stopPropagation();">
			<zscript>
				<![CDATA[
					void onCancelPassword()
					{
						Window wnd = Path.getComponent("/newPassword");
						password.setValue("");
						wnd.setVisible(false);
					}
					
					void onSetPassword()
					{
						es.caib.seycon.ng.servei.ejb.AccountService service = es.caib.seycon.ng.EJBLocator.getAccountService();
						Listbox lb = Path.getComponent("/esquema/lista/listbox");
						Account account = lb.getSelectedItem().getValue().getInstance();
				
						model.commit();
				
						service.setAccountPassword(account, new Password(password.getValue()));
						es.caib.zkib.zkiblaf.Missatgebox
								.confirmaOK(org.zkoss.util.resource.Labels
										.getLabel("accounts.setPassword.msg"));
						onCancelPassword();
					}
				]]>
			</zscript>
			<vbox width="30em" heights="1em,4em, 3em" align="center">
				<div>
					<textbox id="antipasswordsave" disabled="true" style="border: none; color: white;  background-color: white"/>
				</div>
				<hbox align="center" height="4em" >
					<hbox width="8em" align="center" pack="end">
						<label 
							value="${c:l('accounts.setPassword.label')}">
						</label>
					</hbox>
					<space width="2em"></space>
					<hbox width="18em" align="center" pack="start">
						<h:form style="display:inline">
							<textbox type="password" width="18em" id="password"
								onOK="onSetPassword();">
							</textbox>
						</h:form>
					</hbox>
				</hbox>
				<hbox align="center" pack="end" width="30em">
					<button label="${c:l('accounts.setPassword.OK')}"
						onClick="onSetPassword()" />
					<button
						label="${c:l('accounts.setPassword.Cancel')}"
						onClick="onCancelPassword()" />
				</hbox>
			</vbox>
		</window>
		<window id="selectFolderWnd" visible="false" sizable="true"
			position="center,center" width="50%"
			title="${c:l('vault.folder.SelectParentFolder')}">
			<tree autocommit="false" dataPath="/model:/" fixedLayout="false"
				width="100%" rows="10" id="folderTree">
				<treeitemfinder bind="." open="false" path="/folder">
					<treerow
						onDoubleClick="if (folderTree.getSelectedCount() > 0) selectedParentFolder();">
						<treecell>
							<image src="/img/root.gif" height="1em" />
							<label bind="@name"
								style="display: inline-block; padding-bottom: 5px; padding-top: 5px;" />
						</treecell>
					</treerow>
				</treeitemfinder>
			</tree>
			<div style="height: 5em;">
				<label value=" "></label>
				<div style="float:right; margin-top: 2em; height:3em;">
					<button label="${c:l('accounts.setPassword.Cancel')}"
						onClick="selectFolderWnd.setVisible(false);" />
					<button id="selectButton"
						label="${c:l('accounts.setPassword.OK')}"
						onClick="selectedParentFolder()" />
				</div>
			</div>
		</window>
		
	</frame>
	<include src="customObjectsllista.zul" />
	<include src="usuarisllista.zul" />
	<include src="grupsllista.zul" />
	<include src="rolsllista.zul" />
	<include src="finestres/canviPassword.zul" />
	<include src="finestres/identity.zul" />
	<include src="finestres/editorHTML.zul" />
</zk>
