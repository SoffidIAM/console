<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?init class="es.caib.seycon.ng.web.CheckPermisos" arg0="autoritzacions" ?>
<?taglib uri="/WEB-INF/tld/web/core.dsp.tld" prefix="c" ?>
<?component name="input_criteri" macro-uri="comu/input_criteri.zul"?>
<?component name="input_dada" macro-uri="comu/input_dada.zul"?>
<?component name="input_etiqueta" macro-uri="comu/input_etiqueta.zul"?>
<?page title="Gestió d'autoritzacions" ?>
<zk xmlns:h="http://www.w3.org/1999/xhtml">
	<style src="~./styles/estil.css"/>
	<xmldatasource id="autoritzacions" src="/es/caib/seycon/autoritzacions.xml"/>
	
	<datamodel id="model" rootNode="autoritzacions"
		src="descriptorAutoritzacions.xml"/>
	
	<zscript src="comu/netejaCriteris.zul"/>
	
	<zscript>
		<![CDATA[
			int fileres = es.caib.seycon.ng.web.Custom.FILERES;
			int fileresO = es.caib.seycon.ng.web.Custom.FILERES_OBRIR;
			try
			{
				es.caib.zkib.zkiblaf.Application.setTitle(org.zkoss.util.resource
					.Labels.getLabel("autoritzacions.lblGestioAutoritzacions"));
			}
			catch (Exception ex){}
			
			String queryWindowMin = "32px";
			String queryWindowMax = "70px";
			
			String mode = "query"; 
			boolean view_altres = false;
			model.getVariables().declareVariable("queryEnabled", true); //Canviat Rosa a true
			
			import es.caib.seycon.ng.utils.AutoritzacionsUsuari;
			import es.caib.seycon.ng.utils.AutoritzacioSEU;
			
			// Autoritzacions
			boolean canQueryAuthorization = AutoritzacionsUsuari.hasQueryAuthorization();
			boolean canCreateRolAutoritzacion = AutoritzacionsUsuari.hasCreateAuthorizationRol();
			boolean canDeleteRolAutoritzacion = AutoritzacionsUsuari.hasDeleteAuthorizationRol();
			
			model.getVariables().declareVariable("canQueryAuthorization",
					canQueryAuthorization);
			model.getVariables().declareVariable("canCreateRolAutoritzacion",
					canCreateRolAutoritzacion);
			model.getVariables().declareVariable("canDeleteRolAutoritzacion",
					canDeleteRolAutoritzacion);
			
			void populateDetails ()
			{
				mode = "query";
			}
			
			void search ()
			{ 
				String ambit = new String();
				if(esquema.getFellow("queryWindow").getFellow("ambitList").getSelectedItem() != null)
					ambit = esquema.getFellow("queryWindow").getFellow("ambitList").getSelectedItem().getValue().getInstance();
				
				String desc = esquema.getFellow("queryWindow").getFellow("description").getValue();
				String code = esquema.getFellow("queryWindow").getFellow("codi").getValue();
								
				es.caib.zkib.jxpath.JXPathContext ctx = model.getJXPathContext();
				ctx.getVariables().declareVariable("ambitList", ambit);
				ctx.getVariables().declareVariable("description", desc);
				ctx.getVariables().declareVariable("codi", code);
				
				model.getJXPathContext().getValue("/autoritzacio").refresh();
			}
		
			void showAltres () {}
			
			void select() 
			{
				if (esquema.getFellow("lista").getFellow("listbox").selectedItem != null && 
					esquema.getFellow("lista").getFellow("listbox").selectedItem.value != null)
					{
						String codiSeleccionatAbans = model.getVariables().getVariable("descripcioSeleccionat");
						String message = String.format(org.zkoss.util.resource.Labels.getLabel("autoritzacions.VolConfirmar"),
								new Object[]{codiSeleccionatAbans});
						
						// Verifiquem si n'hi ha canvis pendents:
						if (model.isCommitPending()) {
							if (es.caib.zkib.zkiblaf.Missatgebox.confirmaYES_NO(message,
										org.zkoss.util.resource.Labels.getLabel("autoritzacions.ConfirmaCanvis")))
							{
								Events.sendEvent	(boto_commit, new MouseEvent (Events.ON_CLICK,boto_commit));
							} else {
								Events.sendEvent	(boto_undo, new MouseEvent (Events.ON_CLICK,boto_undo));
							}
						} 
						// Fem la selecció
						if(esquema.getFellow("lista").getFellow("listbox").selectedItem != null){
							String codiSeleccionat = esquema.getFellow("lista").getFellow("listbox").selectedItem.getChildren().get(2).getLabel();
							String descripcioSeleccionat = esquema.getFellow("lista").getFellow("listbox").selectedItem.getChildren().get(1).getLabel();
							String tipusDominiSeleccionat = esquema.getFellow("lista").getFellow("listbox").selectedItem.getChildren().get(3).getLabel();
							String scopeSeleccionat = esquema.getFellow("lista").getFellow("listbox").selectedItem.getChildren().get(4).getLabel();
							String heretaSeleccionat = esquema.getFellow("lista").getFellow("listbox").selectedItem.getChildren().get(5).getLabel();
						
							model.getVariables().declareVariable("queryEnabled", true);
						
							model.getVariables().declareVariable("codiAutoritzacio", codiSeleccionat);
							model.getVariables().declareVariable("descripcioSeleccionat", descripcioSeleccionat);
							model.getVariables().declareVariable("tipusDominiSeleccionat", tipusDominiSeleccionat);
							model.getVariables().declareVariable("scopeSeleccionat", scopeSeleccionat);
							model.getVariables().declareVariable("heretaSeleccionat", heretaSeleccionat);
						
//						model.getJXPathContext().getValue("/autoritzacio").refresh();
						// gridAutoritzacions.dataPath = "/esquema/lista/listbox:/autoritzacioRol";
						
						// Posem etiqueta descriptiva
							esquema.getFellow("dades").getFellow("form").getFellow("auto_seleccionada").getFellow("label").setValue(org.zkoss.util.resource.Labels.getLabel("autoritzacions.Poder")+" "+descripcioSeleccionat);
						// i el tipus de domini
							tipusDominiSeleccionat = "".equals(tipusDominiSeleccionat.trim())?"":", "+tipusDominiSeleccionat;
							String s_tipusDominiSeleccionat = org.zkoss.util.resource.Labels.getLabel("autoritzacions.TipusDomini")+tipusDominiSeleccionat;
							model.getVariables().declareVariable("s_tipusDominiSeleccionat", s_tipusDominiSeleccionat);
							esquema.getFellow("dades").getFellow("form").getFellow("tipusDomini_seleccionada").getFellow("label").setValue(s_tipusDominiSeleccionat);
							if (!"".equals(scopeSeleccionat.trim())) {
							// Contruim l'etiqueta informativa
								if ("children".equals(scopeSeleccionat)) scopeSeleccionat=org.zkoss.util.resource.Labels.getLabel("autoritzacions.GrupFills");
								else if ("parents".equals(scopeSeleccionat)) scopeSeleccionat=org.zkoss.util.resource.Labels.getLabel("autoritzacions.GrupPares");
								else if ("both".equals(scopeSeleccionat)) scopeSeleccionat=org.zkoss.util.resource.Labels.getLabel("autoritzacions.GrupFillsPares");
								else  scopeSeleccionat=org.zkoss.util.resource.Labels.getLabel("autoritzacions.Grup"); //per defecte
								scopeSeleccionat = org.zkoss.util.resource.Labels.getLabel("autoritzacions.AmbitGrup")+scopeSeleccionat; 
							} else scopeSeleccionat="";
							esquema.getFellow("dades").getFellow("form").getFellow("scope_seleccionada").getFellow("label").setValue(scopeSeleccionat);
		
							populateDetails ();
							showDetall ();
						}
					}
			}
			
			void showLista ()  
			{
				esquema.getFellow("lista").getFellow("listbox").clearSelection();
			}
			
			void showDetall () 
			{
				esquema.showFormulari();
			}
			
			HashMap autoDescripcions = null;
			void carregaDescripcionsXML()
			{
				listbox = esquema.getFellow("lista").getFellow("listbox");
				if (autoDescripcions == null)
				{
					autoDescripcions = new HashMap();
					if (listbox.getItemCount() == 0)
					{
						return;
					}
					listbox.renderAll(); // Los cargamos todos (puede que no
					// estén cargados)
					StringBuffer sb = new StringBuffer();
					Collection items = listbox.getItems();
					for (Iterator it = items.iterator(); it.hasNext();)
					{
						Listitem item = (Listitem) it.next();
						List cells = item.getChildren();
		
						String codi = "";
						String desc = "";
						int pos = 0;
		
						for (Iterator itcell = cells.iterator(); itcell.hasNext();)
						{
							String v="";
							Listcell cell = (Listcell) itcell.next();
							if (cell.getChildren().size() != 0)
							{
								try
								{
									// Cogemos el hijo de la celda (si tiene
									// componente DataDatebox)
									Object fillcell = cell.getChildren().get(0);
									if (fillcell instanceof Datebox)
									{
										Datebox datebox = (Datebox) fillcell;
										v = datebox.getText();
									}
								}
								catch (Exception ex)
								{
									v = cell.getLabel();
								}
							}
							else
								// Añadimos el contenido
								v = cell.getLabel();
							
							pos++;
							/*if (pos == 1)
								codi = v!=null?v.trim():"";
							else if (pos == 3)
								desc = v!=null?v.trim():"";*/
							if(pos == 2)
								desc = v!=null?v.trim():"";
							else if(pos == 3)
								codi = v!=null?v.trim():"";	
						}
						autoDescripcions.put(codi, desc);
					}
				}
			}
			
			
		]]>
	</zscript>
	
	<esquema id="esquema" ample="${amplaria}" datamodel="/autoritzacions"
		onHideFormulari="showLista()">
		<attribute name="onCreate">
			carregaDescripcionsXML();
		</attribute> 
		<criteris id="queryWindow" onOK="search()"
			width="${amplaria}">
			<vbox width="100%">
				<separator/>
				<hbox width="100%" widths="1%, 2%, 10%, 1%, 2%, 10%, 1%, 2%, 10%, 1%, *">
					<separator/>
					<label value="${c:l('autoritzacions.zul.Ambit2')}"/>
					<listbox id="ambitList"  mold="select" fixedLayout="true" dataPath="/model:/scope">
						<dataitem bind=".">
							<listcell bind="value"/>
						</dataitem>
					</listbox>
					<separator/>
					<label value="${c:l('autoritzacions.zul.Descripcia')}"/>
					<textbox id="description"/>
					<separator/>
					<label value="${c:l('autoritzacions.zul.Codi')}"/>
					<textbox id="codi"/>
					<separator/>
					<imageclic onClick="search()" src="~./img/fletxa_cerca.gif"/>
				</hbox>
			</vbox>
		</criteris>
		<navegador id="lista" width="${amplaria}">
			<toolbar>
				<commitbutton datamodel="/model" id="boto_commit"/>
				<undobutton datamodel="/model" id="boto_undo" listbox="/esquema/dades/gridAutoritzacions"/>
				<listexporttoolbarbutton acces="${canQueryAuthorization}" listbox="/esquema/lista/listbox"/>
			</toolbar>
			<listbox id="listbox" dataPath="/model:/autoritzacio"
				fixedLayout="true" height="320px" mold="paging" onSelect="select()"
				pageSize="18">
				<listhead>
					<!--atenció: si es canvia l'orde de les columnes: canviar select() i carregaDescripcions()-->
					<listheader label="${c:l('autoritzacions.zul.Ambit')}" sort="auto"
						width="150px"/>
					<listheader label="${c:l('autoritzacions.zul.Autoritzacia')}"
						sort="auto" width="300px"/>
					<listheader label="${c:l('autoritzacions.zul.codi')}" sort="auto" 
						width="*"/>
					<listheader label="${c:l('autoritzacions.zul.Tipusdomini')}"
						visible="false"/>
					<listheader label="${c:l('autoritzacions.zul.scope')}"
						visible="false"/>
					<listheader label="${c:l('autoritzacions.zul.hereta')}"
						visible="false"/>
				</listhead>
				<dataitem bind=".">
					<listcell bind="ambit"/>
					<listcell bind="descripcio"/>
					<listcell bind="codi"/>
					<listcell bind="tipusDomini"/>
					<listcell bind="scope"/>
					<listcell bind="hereta"/>
				</dataitem>
			</listbox>
			<input_etiqueta value="${c:l('autoritzacions.zul.NOTAperquaelscanvist')}"/>
		</navegador>
		<detalls id="dades">
			<zscript>
			<![CDATA[
				void onChangeDades() {}
				]]>
			</zscript>
			<form id="form" dataPath="/esquema/lista/listbox:/"
				onChangeXPath="onChangeDades()" width="99%">
				<attribute name="onActualitza">
				</attribute>
				
				<vbox width="100%">
					<input_etiqueta id="auto_seleccionada" value=""/>
					<hbox width="100%">
						<button label="${c:l('autoritzacions.zul.Consultarelaciaambal')}" style="float:left;">
							<attribute name="onClick">
							<![CDATA[
								// Les carreguem si encara no les tenim:
								carregaDescripcionsXML();
								String s_heretaSeleccionat = (String) model.getVariables().getVariable("heretaSeleccionat");
								String s_descripcioSeleccionat = (String) model.getVariables().getVariable("descripcioSeleccionat");
								String s_tipusDominiSeleccionat = (String) model.getVariables().getVariable("s_tipusDominiSeleccionat");
								String texteHereta = "";
								String texteSocHeretada = "";
			
								String sHereta = "";
								if (s_heretaSeleccionat != null && !"".equals(s_heretaSeleccionat.trim())) {
									String [] autosHereta = s_heretaSeleccionat.trim().split(",");
									for (int i=0; i < autosHereta.length; i++) {
										if (autosHereta[i]!=null) {
											if ("*".equals(autosHereta[i].trim())) {
												sHereta+= "\t- "+org.zkoss.util.resource.Labels.getLabel("autoritzacions.Totes")+"\n";
											}
											else{
												sHereta+= "\t- "+(String) autoDescripcions.get(autosHereta[i].trim())+"\n";
											}
										}
									}
								}
								if ("".equals(sHereta))
									texteHereta = String.format(org.zkoss.util.resource.Labels.getLabel("autoritzacions.Autoritzacio"),
																new Object[] {s_descripcioSeleccionat});
								else  
									texteHereta =  String.format(org.zkoss.util.resource.Labels.getLabel("autoritzacions.TenirAutoritzacio"),
																new Object [] {s_descripcioSeleccionat, sHereta, s_tipusDominiSeleccionat});
								
								// Sóc heretada
								String s_codiAutoH = (String) model.getVariables().getVariable("codiAutoritzacio");
								
								Listbox llistaxml = esquema.getFellow("lista").getFellow("listbox");
								
								// Recorrem el listbox xml
								/*List*/ allAuto = llistaxml.getItems();
								
								HashMap socHeretat = new HashMap();
								
								if (allAuto!=null) {
									int pos =0;
									for (Iterator it = allAuto.iterator(); it.hasNext(); ){
										elem = it.next().getChildren();
										if (elem.size()>=5) {
											heretaElem = elem.get(5).getLabel();
											if (heretaElem!=null && heretaElem.indexOf(s_codiAutoH)!=-1) {
												int pos = heretaElem.indexOf(s_codiAutoH);
												// correcció de autoritzacions que acaben igual
												if (pos>0 && heretaElem.charAt(pos-1)!=':' || pos==0) {
													codiElem = elem.get(2).getLabel();//Hi havia un get(0)
													descripcioElem = elem.get(1).getLabel();//Hi havia un get(2)
													socHeretat.put(codiElem,descripcioElem);
												}
											}
										}
									}
								}
								
								if (socHeretat.size()==0) {
									texteSocHeretada = String.format(
										org.zkoss.util.resource.Labels.getLabel("autoritzacions.NOExisteix"),
										new Object [] {s_descripcioSeleccionat});
								}
								else {
									descSocHeretada = "";
									for (Iterator it = socHeretat.values().iterator(); it.hasNext(); ) {
										descSocHeretada += "\t- "+(String) it.next()+"\n";
									}
									texteSocHeretada = String.format(org.zkoss.util.resource.Labels.getLabel("autoritzacions.SiAutoritzacions"),
										new Object [] { descSocHeretada, s_descripcioSeleccionat} ) ;
								}						
									
								Missatgebox.info (texteHereta+"\n\n"+texteSocHeretada+"\n\n"+org.zkoss.util.resource.Labels.getLabel("autoritzacions.Transitiva"),org.zkoss.util.resource.Labels.getLabel("autoritzacions.Relacions"));
								]]>
								</attribute>
						</button>
					</hbox>
					<hbox style="float:right;">
						<input_etiqueta id="tipusDomini_seleccionada" value=""/>
						<input_etiqueta id="scope_seleccionada" value=""/>
					</hbox>
					<input_etiqueta style="float:right"
						value="${c:l('autoritzacions.zul.NOTAElsrolsSENSEDOMI')}"/>
					<listbox id="gridAutoritzacions" dataPath="/autoritzacioRol"
						fixedLayout="true" height="252px" sclass="likeagrid" width="100%">
						<attribute name="onActualitza">
							<![CDATA[
								// Obtenim el codi de l'autorització actual:
								codiAuto = model.getVariables().getVariable("codiAutoritzacio");
								
								Object[] dades = (Object[]) event.getData();
								//Obtenim les dades del rol
								//{nom, aplicacio, descripcio, valorDomini, domini, bbdd, idrol}
								//Missatgebox.info ("tipus domini "+dades[4]);
								
								// Comprovem el tipus de domini del rol
								tipusDominiRol = dades[4]!=null ? dades[4].trim() :"";
								tipusDominiAuto = model.getVariables().getVariable("tipusDominiSeleccionat");
								
								if (tipusDominiAuto!=null && (!"".equals(tipusDominiAuto.trim())) 
									&& !es.caib.seycon.util.TipusDomini.SENSE_DOMINI.equals(tipusDominiRol)) {
									String [] td = tipusDominiAuto.split(",");
									boolean trobat = false;
									if (td!=null) for (int i=0;!trobat && i<td.length; i++) {
										if (tipusDominiRol.equals(td[i].trim()))
											trobat = true;
									}
									if (!trobat) {
										o = !"".equals(tipusDominiAuto.trim())?", ":"";
										Missatgebox.error(String.format (org.zkoss.util.resource.Labels.getLabel("autoritzacions.Restriccio"), new Object[]{o,tipusDominiAuto}),
											org.zkoss.util.resource.Labels.getLabel("autoritzacions.ErrorDomini"));
										return;
									}
								}
								
								String nomRol = (String) dades[0];
								String codiAplicacio = (String) dades[1];
								String descripcio = (String) dades[2];
								/* // no tenim valor domini ni domini
									// Valor domini té dos valors: valor, descripció
									String valorDomini = null;
									if (dades[3] instanceof String) {
										valorDomini = (String) dades[3];
									} else if (dades[3] instanceof String[]) {
										valorDomini = (String) dades[3][0];
									}
								*/
								String domini = (String) dades[4]; //tipus domini
								String bbdd = (String) dades[5];
								String idrol = (String) dades[6];
								
								//Missatgebox.info ("rol = "+nomRol+"#"+codiAplicacio+"#"+descripcio+"#"+domini+"#"+bbdd+"#"+idrol);
								modelProxy = gridAutoritzacions.getModel();
								
								ds = gridAutoritzacions.getDataSource(); 
								ctx =  ds.getJXPathContext();
								/*if (false @and event.getData()[3] != null) {
									valorDomini = (event.getData()[3])[0];
									bbdd = (String)(event.getData()[5]);
									xpath = gridAutoritzacions.getXPath() + 
										"[@rol/nom = '" + nomRol + "' and @rol/baseDeDades = '" + bbdd + "' and rol/valorDomini/@valor = '" + valorDomini + "']";
								} else {*/
									valorDomini = "";
									bbdd = (String)(event.getData()[5]);		
									xpath = gridAutoritzacions.getXPath() + 
										"[@rol/nom = '" + nomRol + "' and @rol/baseDeDades = '" + bbdd + "']";
								//}
								boolean jaExisteix = true;
								try {
									valor = ctx.getValue(xpath);
								} catch(Exception e){
									jaExisteix = false;
								}
								// Verificamos si el rol es SC_REPONSABLE que no está asignado ya a la misma aplicación
								if(jaExisteix) {
									Missatgebox.info(String.format(org.zkoss.util.resource.Labels.getLabel("autoritzacions.JaExisteix"), 
																	new Object[]{nomRol, bbdd}),
													 org.zkoss.util.resource.Labels.getLabel("autoritzacions.ErrorRol"));
								} else {
									position = modelProxy.newInstance();
									ds = gridAutoritzacions.getDataSource(); 
									ctx =  ds.getJXPathContext(); 
									xpath = gridAutoritzacions.getXPath() + modelProxy.getBind(position); 
									pointer =ctx.createPath (xpath);
									ctx2 = ctx.getRelativeContext(pointer);
									
									// obtenim el rol
									es.caib.seycon.ng.comu.Rol rolnou = null;
									try {
										javax.naming.Context context = new javax.naming.InitialContext();		
										aplicacioHome = context.lookup(es.caib.seycon.ng.servei.ejb.AplicacioServiceHome.JNDI_NAME);
										aplicacioService = aplicacioHome.create();
										rolnou = aplicacioService.findRolById(new Long(idrol));
									} catch (Throwable th) {
										Missatgebox.error (String.format(org.zkoss.util.resource.Labels.getLabel("autoritzacions.ErrorRol2"),new Object[] {nomRol, bbdd, codiAplicacio}));
									}
									
									ctx2.setValue("@autoritzacio", codiAuto);
									ctx2.setValue("@rol", rolnou);
									
									pointer.invalidate ();
								}
							]]>
						</attribute>
						<listhead>	
							<listheader label="${c:l('autoritzacions.zul.Rol')}" sort="auto" width="40%"/>
							<listheader label="${c:l('autoritzacions.zul.Bbdd')}" sort="auto" width="15%"/>
							<listheader label="${c:l('autoritzacions.zul.Aplicacia')}" sort="auto" width="25%"/>
							<listheader label="${c:l('autoritzacions.zul.Domini')}" sort="auto" width="19%"/>
							<listheader label="${c:l('autoritzacions.zul.')}" visible="${canDeleteRolAutoritzacion}" width="30px"/>
						</listhead>
						<dataitem bind=".">
							<listcell bind="rol/@nom" tooltip="rolsTooltip"/>
							<listcell bind="rol/@baseDeDades"/>
							<listcell bind="rol/codiAplicacio"/>
							<listcell bind="rol/domini/@nom"/>
							<listcell>
								<imageclic align="right" src="~./img/list-remove.gif">
									<attribute name="onClick">
										<![CDATA[
											if (canDeleteRolAutoritzacion)
											{
												listCell = self.getParent(); 
												dlistbox = listCell.getListbox(); 
												modelo = dlistbox.getModel();
												listItem = listCell.getParent(); 
												posicio = listItem.getIndex(); 
												elemPos = modelo.getElementAt(posicio); 
												xpath = elemPos.getDataContext().getXPath(); 
												dataSource = gridAutoritzacions.getDataSource(); 
												context = dataSource.getJXPathContext();  
												dada = context.getValue(xpath+"/@rol/nom");
												Missatgebox.confirmaOK_CANCEL(String.format(org.zkoss.util
														.resource.Labels.getLabel("autoritzacions.ConfirmaOK"),
													new Object[] {dada}),
													org.zkoss.util.resource
														.Labels.getLabel("autoritzacions.Esborra"),
													new EventListener()
													{
														public void onEvent(Event evt)
														{
															if ("onOK".equals(evt.getName()))
															{
																context.removePath(xpath);
															}
														}
													}
												);
											}
										]]>
									</attribute>
								</imageclic>
							</listcell>
						</dataitem>
					</listbox>
					<hbox width="100%" widths="100px,*">
					<button if="${canCreateRolAutoritzacion}" image="~./img/list-add.gif"
						label="${c:l('autoritzacions.zul.Afegeixrol')}" style="float:left;">
						<attribute name="onClick">
							<![CDATA[
								desktop.getPage("rolsLlista").setAttribute("tipus", "cap");
								desktop.getPage("rolsLlista")
									.setAttribute("mostraGestionableWF", "true");//perquè mostre rols gestionableWF	
								desktop.getPage("rolsLlista").setAttribute("usuari", ""); //??
								es.caib.seycon.ng.servei.PasswordService ps =
									es.caib.seycon.ng.ServiceLocator.instance().getPasswordService();
								//desktop.getPage("rolsLlista").setAttribute("rol_bbdd", ps.getDefaultDispatcher());
								Events.postEvent ("onInicia", desktop.getPage("rolsLlista")
										.getFellow("esquemaLlista"), gridAutoritzacions);
							]]>
						</attribute>
					</button>
					<label style="float:right"
						value="${c:l('autoritzacions.zul.NOTAAbansdafegirunr')}"/>
					</hbox>
				</vbox>
			</form>
		</detalls>
	</esquema>
	
	<include src="rolsllista.zul"/>
</zk>