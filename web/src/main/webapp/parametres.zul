<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?page id="parametres" title="Gestió dels Paràmetres de configuració"?>
<?taglib uri="/WEB-INF/tld/web/core.dsp.tld" prefix="c" ?>
<?init class="es.caib.seycon.ng.web.CheckPermisos" arg0="parametres" ?>
<?component name="input_criteri" macro-uri="comu/input_criteri.zul"?>
<?component name="input_dada" macro-uri="comu/input_dada.zul"?>
<?component name="input_etiqueta" macro-uri="comu/input_etiqueta.zul"?>
<?component name="input_password" macro-uri="comu/input_password.zul"?>

<zk xmlns:h="http://www.w3.org/1999/xhtml"> 

	<datamodel id="model" rootNode="parametres" src="descriptorParametre.xml"/>
	<datamodel id="samlmodel" class="com.soffid.web.saml.SamlDataModel"/>
	
	<zscript src="comu/netejaCriteris.zul"/>
	<zscript src="comu/checkTruncatedResults.zul"/>

	<zscript>
		<![CDATA[
			import es.caib.seycon.ng.utils.*;
			
			boolean masterTenant = Security.isMasterTenant();

			int fileres = es.caib.seycon.ng.web.Custom.FILERES_ESQUEMA;
			try
			{
				es.caib.zkib.zkiblaf.Application.setTitle(org.zkoss.util.resource
					.Labels.getLabel("parametres.Titol"));
			}
			catch (Exception ex){}
			
			String queryWindowMin = "50px";
			String queryWindowMax = "110px";
			
			String mode = "query"; 
			boolean view_altres = false;
			
			boolean canCreateParameter = AutoritzacionsUsuari.hasCreateParameter();
			boolean canUpdateParameter = AutoritzacionsUsuari.hasUpdateParameter();
			boolean canDeleteParameter = AutoritzacionsUsuari.hasDeleteParameter();
			boolean canQueryParameter = AutoritzacionsUsuari.hasQueryParameter();
			boolean canModifyParameter = canCreateParameter || canUpdateParameter;
			
			model.getVariables().declareVariable("queryEnabled", canQueryParameter);
			model.getVariables().declareVariable("codi", "%");
			
			boolean queryEnabled = false;
			boolean retrySearch = false;
			
			void populateDetails ()
			{
				String mode = "query";
			}
	
			// Method to obtain the parameters to search process
			java.util.Map getSearchParameters()
			{
				java.util.Map searchValues = new java.util.HashMap();
				
				Textbox codi = esquema.getFellow("queryWindow").getFellow("queryCodi")
						.getFellow("textbox");
				Textbox valor = esquema.getFellow("queryWindow").getFellow("queryValor")
						.getFellow("textbox");
				Textbox descripcio = esquema.getFellow("queryWindow")
						.getFellow("queryDescripcio").getFellow("textbox");
				Textbox xarxa = esquema.getFellow("queryWindow").getFellow("queryXarxa")
						.getFellow("textbox");
				
				// Check enable query
				if ((codi.value.trim().length() == 0) &&
						(valor.value.trim().length() == 0) &&
						(descripcio.value.trim().length() == 0) &&
						(xarxa.value.trim().length() == 0))
				{
					queryEnabled = false;
				}
				
				else
				{
					queryEnabled = true;
				}
				
				// Add parameters to search
				searchValues.put("codi", codi.value);
				searchValues.put("valor", valor.value);
				searchValues.put("descripcio", descripcio.value);
				searchValues.put("xarxa", xarxa.value);
				
				return searchValues;
			}
			
			void search()
			{
				java.util.Map lista = new java.util.HashMap();

				if (esquema.isCommitPending())
				{
					Missatgebox.avis (org.zkoss.util.resource
							.Labels.getLabel("parametres.AbansConfirmar"),
						org.zkoss.util.resource
							.Labels.getLabel("parametres.CanvisPendents"));
					return;
				}
				
				if (!retrySearch)
				{
					lista = es.caib.seycon.ng.web.utils.
						Autowildcards.replaceAsteriskChar(getSearchParameters());
				}
				
				else
				{
					lista = es.caib.seycon.ng.web.utils.
							Autowildcards.addPercentChar(getSearchParameters());
				}
				
				for (String key : lista.keySet())
				{
					model.getVariables().declareVariable(key, lista.get(key));
				} 

				model.getVariables().declareVariable("queryEnabled", queryEnabled);
				
				listbox =	esquema.getFellow("lista").getFellow("listbox");
				if (queryEnabled)
				{
					model.getJXPathContext().getValue("/parametre").refresh();
					listbox.dataPath = "/model:/parametre"; 
				}
				
				if (listbox.getModel().getSize() == 1)
				{
					listbox.renderAll();
					Listitem elem = listbox.getItemAtIndex(0); 
				
					if (elem!=null)
					{
						listbox.setSelectedItem(elem);
					}
					
					select();
					retrySearch = false;
				}
				
				else
				{
					if ((listbox.getModel().getSize() == 0) && !retrySearch)
					{
						retrySearch = true;
						search();
					}
					
					else
					{
						esquema.hideFormulari(); //amaguem dades..
						retrySearch = false;
					}
				}
				
				checkTruncatedList(listbox);
			}
			
			void showAltres () 
			{
				if (view_altres == false)
				{
					esquema.getFellow("queryWindow").setHeight(queryWindowMax); 
					esquema.getFellow("queryWindow").getFellow("queryWindowAltres").setVisible(true);
					esquema.getFellow("queryWindow").getFellow("img_altres").setSrc("~./img/fletxa-baix.gif");
					view_altres = true;
				}
				else
				{
					esquema.getFellow("queryWindow").setHeight(queryWindowMin); 
					esquema.getFellow("queryWindow").getFellow("queryWindowAltres").setVisible(false);
					esquema.getFellow("queryWindow").getFellow("img_altres").setSrc("~./img/fletxa.gif");
					view_altres = false;
				}
			}
			
			void select () 
			{
				if (esquema.getFellow("lista").getFellow("listbox").selectedItem != null @and 
					esquema.getFellow("lista").getFellow("listbox").selectedItem.value != null)
					{
						populateDetails ();
						showDetall ();
					}
			}
			
			void showLista ()  
			{
				  esquema.getFellow("lista").getFellow("listbox").clearSelection();
			}
			
			void showDetall () 
			{
				esquema.showFormulari();
			}
			
			void refreshTaskEngine () {
				String mode = com.soffid.iam.utils.ConfigurationCache.getProperty("soffid.task.mode");
				if (mode == null) mode = "auto";
				for ( item: taskMode.getItems()) 
					if (item.getValue().equals (mode)) taskMode.setSelectedItem(item);
				String max = com.soffid.iam.utils.ConfigurationCache.getProperty("soffid.task.limit");
				taskLimit.setText(max);
			}

			void refreshCacheEngine () {
				String mode = com.soffid.iam.utils.ConfigurationCache.getProperty("soffid.cache.enable");
				if (mode == null) mode = "false";
				for ( item: cacheMode.getItems()) 
					if (item.getValue().equals (mode)) cacheMode.setSelectedItem(item);

				byte[] c = com.soffid.iam.EJBLocator.getConfigurationService().getBlob("soffid.cache.config");
				cacheProperties.setValue(c == null? "" : new String (c, "UTF-8"));
			}

			void updateCacheEngine () {
				String mode = cacheMode.getSelectedItem().getValue();
				
				updateAttribute("soffid.cache.enable", mode, "Hibernate cache mode");

				String p = cacheProperties.getValue();
				
				if (p.trim().isEmpty())
					com.soffid.iam.EJBLocator.getConfigurationService().deleteBlob("soffid.cache.config");
				else
					com.soffid.iam.EJBLocator.getConfigurationService().updateBlob("soffid.cache.config", p.getBytes("UTF-8")); 

				es.caib.zkib.zkiblaf.Missatgebox.avis( org.zkoss.util.resource.Labels.getLabel("parametres.zul.restartNeeded") );
			}

  			void updateAttribute (String param, String value, String desc)
   			{
  				com.soffid.iam.service.ejb.ConfigurationService svc = com.soffid.iam.EJBLocator.getConfigurationService();
  				com.soffid.iam.api.Configuration cfg = svc.findParameterByNameAndNetworkName(param, null);
  				if ( value == null || value.trim().isEmpty())
  				{
  					if (cfg != null)
  						svc.delete(cfg);
  				}
  				else if (cfg == null )
  				{
  					cfg = new com.soffid.iam.api.Configuration();
  					cfg.setCode(param);
  					cfg.setValue(value);
  					cfg.setDescription(desc);
  					svc.create(cfg);
  				}
  				else
  				{
  					cfg.setValue(value);
  					svc.update(cfg);
  				}
				com.soffid.iam.utils.ConfigurationCache.setProperty(param, value);
				tabbox.setSelectedIndex(0);
				search();
  				
   			}
			void updateTaskEngine () {
				
				updateAttribute("soffid.task.mode", taskMode.getSelectedItem().getValue(), "Task operation mode");
				updateAttribute("soffid.task.limit", taskLimit.getText(), "Maximum number of tasks per transaction");
			}
			
		]]>
	</zscript>
	
	<tabbox onCreate="refreshTaskEngine();" id="tabbox">
		<tabs>
			<tab label="${c:l('parametres.zul.Advanced')}"></tab>
			<tab label="${c:l('parametres.zul.authentication')}"></tab>
			<tab label="${c:l('parametres.zul.taskEngine')}" onSelect="refreshTaskEngine()"></tab>
			<tab label="${c:l('parametres.zul.cache')}" onSelect="refreshCacheEngine()" if="${masterTenant }"></tab>
		</tabs>
		<tabpanels>
			<tabpanel>
				<esquema id="esquema" datamodel="/model"
		 focusCriteri="queryCodi" onHideFormulari="showLista()">
	
		<criteris id="queryWindow" height="${queryWindowMin}" 
			onOK="search()">
			<hbox>
				<input_criteri  id="queryCodi"
					etiqueta="${c:l('parametres.zul.Parametre')}"/>
				<input_criteri id="queryValor"
					etiqueta="${c:l('parametres.zul.Valor')}" />
				<imageclic onClick="search()" src="~./img/fletxa_cerca.gif"/>
			</hbox>
			<hbox> 
				<input_criteri id="queryDescripcio"
					etiqueta="${c:l('parametres.zul.Descripcia')}"/>
				<input_criteri id="queryXarxa"
					etiqueta="${c:l('parametres.zul.Xarxa')}"/>
			</hbox>
		</criteris>
		
		<navegador id="lista" >
			<toolbar>
				<insertbutton acces="${canCreateParameter}"
					listbox="/esquema/lista/listbox" onClick="showDetall()"/>
				<deletebutton acces="${canDeleteParameter}"
					listbox="/esquema/lista/listbox"/>
				<commitbutton datamodel="/model"/>
				<undobutton datamodel="/model" listbox="/esquema/lista/listbox"/>
			</toolbar>
			<listbox id="listbox" autocommit="false" dataPath="/model:/parametre"
				fixedLayout="true" height="340px" onClick="showDetall()"
				onSelect="select()" rows="${fileres}" onCreate="checkTruncatedList(self)" >
				<listhead>
					<listheader label="${c:l('parametres.zul.Parametre-2')}" sort="auto"
						width="20%"/>
					<listheader label="${c:l('parametres.zul.Valor-2')}" sort="auto"/>
					<listheader label="${c:l('parametres.zul.Xarxa-2')}" sort="auto"
						width="10%"/>
					<listheader label="${c:l('parametres.zul.Descripcia-2')}" sort="auto"
						width="30%"/>
				</listhead>
				<listfoot>
					<listfooter span="3">
						<label id="listboxFoot" style="margin-left: 10px;" />
					</listfooter>
				</listfoot>
				<dataitem bind=".">
					<listcell bind="@codi"/>
					<listcell bind="@valor"/>
					<listcell bind="@codiXarxa"/>
					<listcell bind="@descripcio"/>
				</dataitem>
			</listbox>
		</navegador>
	
		<detalls id="dades">
			<zscript>
			<![CDATA[
				void onChangeDades()
				{
					try {
						ds = form.getDataSource(); 
						ctx =  ds.getJXPathContext(); 
						registre = ctx.getValue("/");
						form.getFellow("detall_par").getFellow("dada").setDisabled(!registre.isNew());
					} catch (Exception e) {
						form.getFellow("detall_par").getFellow("dada").setDisabled(true);
					}
				}
			]]></zscript>
			
			<form id="form" onChangeXPath="onChangeDades()"
				dataPath="/esquema/lista/listbox:/." width="100%">
				<attribute name="onActualitza">
					dada = (String)event.getData();
					camp = (DataTextbox) form.getFellow(idActualitza).getFellow("dada");
					camp.setValue(dada);
				</attribute>
				<grid>
					<rows>
						<row>
							<input_etiqueta value="${c:l('parametres.zul.Parametre-2')}"/>
							
							<hbox>
								<input_dada bind="@codi" id="detall_par" maxim="50"
									width_custom="${amplediv2_98-100}px" mascara="no empty"/>
									
								<label value="*" />
							</hbox>
						</row>
						
						<row>
							<input_etiqueta value="${c:l('parametres.zul.Xarxa-2')}"/>
							<hbox width="100%" widths="*,40px">
								<input_dada id="detall_xarxa" bind="@codiXarxa"
									lectura="${!canModifyParameter}"
									width_custom="${amplediv2_98-100}px"/>
								<imageclic align="right" src="~./img/xarxa.gif">
									<attribute name="onClick">
										if (canModifyParameter) {
											idActualitza ="detall_xarxa";
											Events.postEvent	("onInicia",desktop.getPage("xarxesLlista").getFellow("esquemaLlista"),form);
										}
									</attribute>
								</imageclic>
								<separator width="5px"/>
							</hbox>
						</row>
						
						<row>
							<input_etiqueta value="${c:l('parametres.zul.Valor-2')}"/>
							
							<hbox>
								<input_dada id="detall_valor" bind="@valor" 
									lectura="${!canModifyParameter}" maxim="250"
									width_custom="${amplediv2_98-100}px" mascara="no empty"/>
									
								<label value="*" />
							</hbox>
						</row>
						
						<row>
							<input_etiqueta value="${c:l('parametres.zul.Descripcia-2')}"/>
							<input_dada id="detall_descripcio" bind="@descripcio"
								lectura="${!canModifyParameter}" maxim="255"
								width_custom="${amplediv2_98-100}px"/>
						</row>
					</rows>
				</grid>
			</form>
		</detalls>
	</esquema>
			</tabpanel>
			<tabpanel >
				<form dataPath="/samlmodel:/conf" id="samlform">
					<zscript><![CDATA[
					                  
					void refreshIDP ()
					{
						String md = es.caib.zkib.datasource.XPathUtils.getValue(samlform, "metadata");
						samlmodel.getVariables().declareVariable("metadata", md);
						samlmodel.getValue("/idps").refresh();
						idpselect.setSelectedIndex(0);
					}
					
					
					void downloadMetadata()
					{
						String hostName = Executions.getCurrent().getNativeRequest().getHeader("Host");
						String md = com.soffid.iam.EJBLocator.getSamlService().generateMetadata(hostName);
						Filedownload.save (md, "text/plain", "soffid-metadata.xml");
					}
					]]>
					</zscript>
					<grid sclass="noBorderGrid">
						<rows>
							<row>
								<label value="${c:l('parametres.zul.classicMethod')}"/>
								<label/>
							</row>
							<row>
								<label/>
								<div width="100%">
									<checkbox bind="classicMethod" label="${c:l('deploy.lblEnable')}"
										style="display: block"></checkbox>
									<checkbox bind="trustedAuthentication" 
										label="${c:l('parametres.zul.trustedAuthentication')}"
										style="display: block"></checkbox>
								</div>
							</row>
							<row>
								<label value="${c:l('parametres.zul.samlMethod')}"/>
								<label/>
							</row>
							<row>
								<label/>
								<div  width="100%">
									<div>
										<checkbox bind="samlMethod" label="${c:l('deploy.lblEnable') }" 
											style="display:block"/> 
										<div>
											<label value="${c:l('parametres.zul.hostName')}: "/>
											<textbox bind="hostName" width="30em"/>
										</div>
										<div>
											<label value="${c:l('parametres.zul.metadataURL')}: "/>
											<textbox bind="metadata" width="30em"
												onChange="refreshIDP()"
												onOK=""/>
										</div>
										<div>
											<label value="${c:l('parametres.zul.cacheLimit')}: "/>
											<intbox bind="cache"/>
										</div>
										<div>
											<label value="${c:l('parametres.zul.IDP')}: "/>
											<listbox mold="select" bind="idp" id="idpselect"
												dataPath="/samlmodel:/idps">
												<dataitem bind="/value">
													<listcell bind="/value"/>
												</dataitem>
											</listbox>
										</div>
									</div>
								</div>
							</row>
							<row>
								<label value="${c:l('parametres.zul.linotpIntegration')}"/>
								<label/>
							</row>
							<row>
								<label/>
								<div  width="100%">
									<div>
										<checkbox bind="enableLinotp" label="${c:l('deploy.lblEnable') }" 
											style="display:block"/> 
										<div>
											<label value="${c:l('parametres.zul.linotpServer')}: "/>
											<textbox bind="linotpServer" width="30em"/>
										</div>
										<div>
											<label value="${c:l('parametres.zul.linotpUser')}: "/>
											<textbox bind="linotpUser" width="30em"
												onOK=""/>
										</div>
										<div>
											<label value="${c:l('parametres.zul.linotpPassord')}: "/>
											<input_password width_custom="30em" bind="linotpPassword"/>
										</div>
										<div>
											<label value="${c:l('parametres.zul.linotpUserDomain')}: "/>
											<listbox mold="select" bind="linotpUserDomain"
												dataPath="/samlmodel:/userDomain">
												<dataitem bind="/code">
													<listcell bind="/description"/>
												</dataitem>
											</listbox>
										</div>
									</div>
								</div>
							</row>
							<row>
								<label value="${c:l('parametres.zul.otpUsage')}"/>
								<label/>
							</row>
							<row>
								<label/>
								<div  width="100%">
									<div>
										<div>
											<label value="${c:l('parametres.zul.otpOptional')}: "/>
											<textbox bind="optionalToken" width="100%" multiline="true" rows="5" maxlength="500"/>
										</div>
										<div>
											<label value="${c:l('parametres.zul.otpRequired')}: "/>
											<textbox bind="requireToken" width="100%" multiline="true" rows="5" maxlength="500"/>
										</div>
										<div>
											<label value="${c:l('parametres.zul.otpTimeout')}: "/>
											<intbox bind="tokenTimeout" width="30" maxlength="500"/>
											<label value="${c:l('parametres.zul.otpTimeout2')}: "/>
											
										</div>
									</div>
								</div>
							</row>
							<row>
								<label/>
								<div style="margin-top: 2em">
									<button label="${c:l('parametres.zul.downloadMetadata') }" onClick="downloadMetadata()"/>
									<button label="${c:l('task.filter.lblConfirmaCambios') }" onClick="samlmodel.commit();tabbox.setSelectedIndex(0);search();"
										style="text-align:right"/>
								</div>
						
							</row>
						</rows>
					</grid>
				</form>				
			</tabpanel>
			<tabpanel >
				<grid sclass="noBorderGrid">
					<rows>
						<row>
							<label value="${c:l('parametres.zul.taskMode')}"/>
							<listbox mold="select" id="taskMode">
								<listitem value="readonly" label="${c:l('parametres.zul.mode.readonly') }"></listitem>
								<listitem value="manual" label="${c:l('parametres.zul.mode.manual') }"></listitem>
								<listitem value="auto" label="${c:l('parametres.zul.mode.auto') }"></listitem>
							</listbox>
						</row>
						<row>
							<label value="${c:l('parametres.zul.limit')}"/>
							<div width="100%">
								<intbox id="taskLimit"/>
								<label value="${c:l('parametres.zul.limit2')}"/>
							</div>
						</row>
						<row>
							<label/>
							<div style="margin-top: 2em">
								<button label="${c:l('rolsllista.zul.Cancel·la') }" onClick="refreshTaskEngine()"/>
								<button label="${c:l('task.filter.lblConfirmaCambios') }" onClick="updateTaskEngine()"
									style="text-align:right"/>
							</div>
						</row>
					</rows>
				</grid>
			</tabpanel>
			<tabpanel  if="${masterTenant }">
				<grid sclass="noBorderGrid">
					<rows>
						<row>
							<label value="${c:l('parametres.zul.cacheMode')}"/>
							<listbox mold="select" id="cacheMode">
								<listitem value="false" label="${c:l('parametres.zul.cacheMode.disable') }"></listitem>
								<listitem value="true" label="${c:l('parametres.zul.cacheMode.enable') }"></listitem>
								<listitem value="full" label="${c:l('parametres.zul.cacheMode.complete') }"></listitem>
							</listbox>
						</row>
						<row>
							<label value="${c:l('parametres.zul.cache.properties')}"/>
							<textbox rows="20" id="cacheProperties" width="100%"></textbox>
						</row>
						<row>
							<label></label>
							<div style="margin-top: 2em">
								<button label="${c:l('rolsllista.zul.Cancel·la') }" onClick="refreshCacheEngine()"/>
								<button label="${c:l('task.filter.lblConfirmaCambios') }" onClick="updateCacheEngine()"
									style="text-align:right"/>
							</div>
						</row>
					</rows>
				</grid>
			</tabpanel>
		</tabpanels>
	</tabbox>

	<include src="xarxesllista.zul"/>
</zk>
