<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?init class="es.caib.seycon.ng.web.CheckPermisos" arg0="seyconserver" ?>
<?taglib uri="/WEB-INF/tld/web/core.dsp.tld" prefix="c" ?>
<?component name="input_criteri" macro-uri="comu/input_criteri.zul"?>
<?component name="input_dada" macro-uri="comu/input_dada.zul"?>
<?component name="input_etiqueta" macro-uri="comu/input_etiqueta.zul"?>
<?page title="Monitorització del Sistema" ?>
<zk xmlns:h="http://www.w3.org/1999/xhtml">
<frame id="p_seyconserver" saveContent="true" title="${c:l('seyconserver.Titol')}" width="99%">
	
	<datamodel id="model" rootNode="servers" src="descriptorSeyconServer.xml"/>

	<style>
		table.listbox-btable tr.seld td div {font-weight: bold;}
		table.listbox-btable tr.seld td div span {font-weight: bold;}
		div.nosel table.listbox-btable tr.seld td {background-color: #EEEEEE !important;}
		div.nosel table.listbox-btable tr.seld td div, 
		div.nosel table.listbox-btable tr.seld td div span {font-weight:normal;}
		.st0 {margin:0 0 5px 0;cursor:pointer !important;}
		div.doscolors tr td { vertical-align:top;}
		div.doscolors tr.odd td {background-color: #FFFFFF;}
		div.doscolors tr.seld td {background-color: #DBDBDB;}
		.st { color: blue !important; }
		.st:hover {text-decoration:underline;color:blue !important;}		
		.agentcss:hover {text-decoration:underline; color:blue !important; cursor: pointer;}
		.taulaagents td, .taulaagents td div {vertical-align:middle; padding: 0px;}
		.taulaagents .urlagent span {font-size: 13px;}
		.taulaagents .urlagent span:first-child {font-weight:bold;font-size: 15px;color:#8A4700;}
	</style>

	<zscript>
		<![CDATA[
			fileres = es.caib.seycon.ng.web.Custom.FILERES;
			fileresO = es.caib.seycon.ng.web.Custom.FILERES_OBRIR;
			int refreshPageTime = 5000; 
			boolean refreshPage = true;
			
			try {
				es.caib.zkib.zkiblaf.Application.setTitle(org.zkoss.util.resource.Labels.getLabel("seyconserver.Titol"));
			} catch (Exception ex) {
			}
		
			// Autoritzacions
			import es.caib.seycon.ng.utils.AutoritzacionsUsuari;
			canQueryServerList = AutoritzacionsUsuari.hasQueryServerListBase();
			canQueryAgentList = AutoritzacionsUsuari.hasQueryAgentListBase();
			canRestartAgent = AutoritzacionsUsuari.hasRestartAgentBase();
			canQueryServerLog = AutoritzacionsUsuari.hasQueryLogBase();
		
			model.getVariables().declareVariable("queryEnabled", canQueryServerList);
			model.getVariables().declareVariable("queryAgentsEnabled", false);
			model.getVariables().declareVariable("queryTasquesEnabled", false);
			model.getVariables().declareVariable("queryServerResetEnabled", false);
			
			iconasSemafor = new String[][] { { "OK", "img/semafor-verd.png" },
					{ "ERROR", "img/semafor-vermell.png" },
					{ "Qualque Agent desconnectat", "img/semafor-ambar.png" },
					{ "STARTING", "img/semafor-ambar.png" },
					{ "PLANNING", "img/semafor-ambar.png" } };
			iconasAgent = new String[][] { { "Sleeping", "img/semafor-verd.png" },
					{ "Disconnected", "img/semafor-vermell.png" } };
			import es.caib.seycon.ng.servei.ejb.SeyconServerService;
			
			SeyconServerService  seyconServerService = null;
			
			java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("dd/MM/yyyy kk:mm:ss");
				
			getSeyconServerService() {
			
				if (seyconServerService == null) {
					seyconServerService = es.caib.seycon.ng.EJBLocator.getSeyconServerService();
				}
				return seyconServerService;
			}
			
			mostraPanel (quin) {
				if ("agents".equals(quin)) {
					t_tasques.setVisible(false);
					t_tasquesagent.setVisible(false);
					t_seyconInfo.setVisible(false);
					t_dbpool.setVisible(false);
					t_agents.setVisible(true);
					t_agents.setSelected(true);
					titoltasques.setVisible(true);
					panels.setWidth("100%");
					panels.setVisible(true);
				} else if ("tasques".equals(quin)) {
					t_agents.setVisible(false);
					t_tasquesagent.setVisible(false);
					t_seyconInfo.setVisible(false);
					t_dbpool.setVisible(false);
					t_tasques.setVisible(true);
					t_tasques.setSelected(true);
					titoltasques.setVisible(true);
					panels.setVisible(true);
				} else if ("tasquesAgent".equals(quin)) {
					t_tasques.setVisible(false);
					t_seyconInfo.setVisible(false);
					t_tasquesagent.setVisible(true);
					t_dbpool.setVisible(false);
					t_agents.setVisible(true);
					t_tasquesagent.setSelected(true);
					titoltasques.setVisible(true);
					panels.setWidth("100%");
					panels.setVisible(true);
				} else if ("tasquesAgentDesDeTasques".equals(quin)) {
					t_seyconInfo.setVisible(false);
					t_tasques.setVisible(true);
					t_tasquesagent.setVisible(true);
					t_agents.setVisible(false);
					t_dbpool.setVisible(false);
					t_tasquesagent.setSelected(true);
					titoltasques.setVisible(true);
					panels.setWidth("100%");
					panels.setVisible(true);
				} else if ("serverInfo".equals(quin)) {
					t_tasques.setVisible(false);
					t_tasquesagent.setVisible(false);
					t_agents.setVisible(false);
					t_dbpool.setVisible(false);
					t_seyconInfo.setVisible(true);
					t_seyconInfo.setSelected(true);
					titoltasques.setVisible(true);
					panels.setWidth("100%");
					panels.setVisible(true);
				} else if ("unscheduled".equals(quin)) {
					t_tasques.setVisible(false);
					t_tasquesagent.setVisible(false);
					t_agents.setVisible(false);
					t_dbpool.setVisible(false);
					t_seyconInfo.setVisible(false);
					t_unscheduled.setVisible(true);
					t_unscheduled.setSelected(true);
					titoltasques.setVisible(true);
					panels.setWidth("100%");
					panels.setVisible(true);
				} else if ("serverReset".equals(quin)) {
					t_tasques.setVisible(false);
					t_tasquesagent.setVisible(false);
					t_agents.setVisible(false);
					t_seyconInfo.setVisible(false);
					t_dbpool.setVisible(false);
					titoltasques.setVisible(true);
					panels.setWidth("100%");
					panels.setVisible(true);
				} else if ("dbpool".equals(quin)) {
					t_tasques.setVisible(false);
					t_tasquesagent.setVisible(false);
					t_agents.setVisible(false);
					t_seyconInfo.setVisible(true);
					t_dbpool.setVisible(true);
					t_dbpool.setSelected(true);
					titoltasques.setVisible(true);
					panels.setWidth("100%");
					panels.setVisible(true);
				} else { // ALTRES...
					panels.setVisible(false);
					t_tasques.setVisible(false);
					t_tasquesagent.setVisible(false);
					t_agents.setVisible(false);
					titoltasques.setVisible(false);
					t_dbpool.setVisible(false);
				}
			}
			
			com.soffid.iam.ui.SeyconTaskComposer tasquesSeycon =
					new com.soffid.iam.ui.SeyconTaskComposer();
			// Li afegim un event al header del listbox
			org.zkoss.zk.ui.event.EventListener ssevent = new org.zkoss.zk.ui.event.EventListener()
			{
				public void onEvent(Event e)
				{
					if (e.getTarget() instanceof Listheader)
					{
						Listheader lh_agent = (Listheader) e.getTarget();
						
						if (org.zkoss.util.resource.Labels
								.getLabel("seyconserver.zul.Tasca").equals(lh_agent.getLabel()))
							return;
 
						urlS = model.getVariables().getVariable("urlserver");
						veureTasquesAgent(lh_agent.getLabel(), urlS);
						mostraPanel("tasquesAgentDesDeTasques");
					}
				}
			};
			tasquesSeycon.setEventListenerHeader(ssevent);
			
			// Functionality to refresh syncserver status info
			void refreshServers()
			{
				gridServidors.dataPath = "/model:/server";
				model.getJXPathContext().getValue("/server").refresh();
				gridServidors.dataPath = "/model:/server";
				model.getJXPathContext().getValue("/tasquespendents").refresh();
				gridTasquesPendents.dataPath = "/model:/tasquespendents";
			}
			
			void refrescaServidors()
			{
				// Amaguem els panels
				mostraPanel("cap");
				
				// Refresh syncserver status info
				refreshServers();
			}
			
			void veureTasquesAgent(codiAgent, url)
			{
				//si pot veure agents també les tasques
				if (canQueryAgentList)
				{
					model.getVariables().declareVariable("queryTasquesEnabled", true);
					// urlserver ja és establerta (!!)
					//model.getVariables().declareVariable("urlserver", dada);
					// hem de posar el label abans
					model.getVariables().declareVariable("codiAgent", codiAgent);
					model.getJXPathContext().getValue("/tasquesagentserver").refresh();
					listboxTasquesAgent.dataPath = "/model:/tasquesagentserver";
					l_tasquesAgent.setValue(codiAgent);
					l_tasquesAgentURL.setValue(url);
				}
				
				else
				{
					mostraPanel("cap");
				}
			}
			
			// Functionality to refresh active elements
			void refreshPage()
			{
				try {
					// Check agents info active
					if (t_agents.isVisible() && !t_tasquesagent.isVisible())
					{
	//					viewAgents(p_seyconserver.getFellow("buttonViewAgents"));
					}
					
					// Check server tasks info active
					if (t_tasques.isVisible())
					{
						agentsTasks = (t_tasquesagent.isVisible() && t_tasquesagent.isSelected());
					}
					
					// Check server additional info active
					if (t_seyconInfo.isVisible() && !t_dbpool.isVisible() && serverInfoComponent != null)
					{
						viewServerAdditionalInfo(serverInfoComponent);
					}
					
					// Check agent tasks info active
					if (t_tasquesagent.isVisible())
					{
					}
					
					// Check server DB queries active
					if (t_dbpool.isVisible())
					{
						viewDBQueries();
					}
					
					// Refresh syncserver info
					refreshServers();
				} catch (Exception e) { }
			}
			
			// Functionality to get server URL
			String getURLServer(Component data)
			{
				es.caib.zkib.binder.BindContext ctx = es.caib.zkib.datasource.XPathUtils.getComponentContext(data);
				
				return es.caib.zkib.datasource.XPathUtils.getValue(ctx, "@url");
			}
			
			// Functionality to show agents info
			void viewAgents(self)
			{
				if(canQueryAgentList)
				{
					try
					{
						// Get server URL
						dada = getURLServer(self);
						es.caib.zkib.binder.BindContext ctx = es.caib.zkib.datasource.XPathUtils.getComponentContext(self);
						String path = ctx.getXPath();
						// Refresh servers
						refrescaServidors();
						model.getVariables().declareVariable("queryAgentsEnabled", true);
						model.getVariables().declareVariable("urlserver", dada);
						urlservidor.setValue(dada); //mostrem url
						model.getJXPathContext().getValue("/agentsserver").refresh();
						es.caib.zkib.datamodel.DataNodeCollection dm = model.getJXPathContext().getValue("/agentsserver");
						gridAgents.setDataPath("/model:/agentsserver");
						mostraPanel("agents");
					}
					
					catch (Throwable th)
					{
						mostraPanel("cap");
						Missatgebox.error (String.format(org.zkoss.util.resource
								.Labels.getLabel("seyconServer.Error"),
							new Object [] {th.getMessage()}));
					}
				}
				
				else
				{
					mostraPanel("cap");
				}
			}
			
			// Functionality to show server tasks info
			void viewTasks(self, agentsTasks)
			{
				if (canQueryAgentList)
				{
					// Get server URL
					String dada = getURLServer(self);
					
					// Refresquem els servidors
					refreshServers();
					
					List resultat = getSeyconServerService().getServerTasks(dada);
					
					model.getVariables().declareVariable("urlserver", dada);
					tasquesSeycon.setTasques(resultat.get(0), resultat.get(1),
							"100%", dada);
					// Ajustem amplària del tabbox (only if needed)
					ampleNou = tasquesSeycon.getDataRenderer().getAmpleMinimListbox();
					if (ampleNou != 0)
					{
						ampleActual = panels.getWidth();
						try { //only when I dream..
//							ampleI = ampleActual.replaceAll("px", "").replaceAll("%", "");
//							int ami = Integer.parseInt(ampleI);
//							if ((ampleNou + 40) > ami)
//								panels.setWidth((ampleNou+40) + "px");
						}
						
						catch (Throwable th) {}
					}
					
					urlservidor.setValue(dada); //mostrem url
					
					if (!agentsTasks)
					{
						// L'obtenim mitjançant EJB
						mostraPanel("tasques");
					}
				}
				
				else
				{
					mostraPanel("cap");
				}
			}
			
			// Functionality to show server tasks info
			void viewUnscheduledTasks()
			{
				if (canQueryAgentList)
				{
					model.getVariables().declareVariable("queryUnscheduledEnabled", true);
					model.getJXPathContext().getValue("/unscheduled").refresh();
					l_tasquesAgent.setValue(org.zkoss.util.resource.Labels.getLabel("seyconserver.zul.Unscheduled"));
					l_tasquesAgentURL.setValue("");
					mostraPanel("unscheduled");
				}
				
				else
				{
					mostraPanel("cap");
				}
			}

			Component serverInfoComponent = null;
			// Functionality to view server additional info
			void viewServerAdditionalInfo(self)
			{
				serverInfoComponent = self;
				// Get server URL
				dadaurl = getURLServer(self);
				
				try
				{
					infoServer = getSeyconServerService().getSeyconServerInfo(dadaurl,
							"serverinfo", new String[]{});
				}
				
				catch (Throwable th)
				{
					mostraPanel("cap");
					Missatgebox.error (String.format(org.zkoss.util.resource
							.Labels.getLabel("seyconServer.Error"),
						new Object [] {th.getMessage()}));
					return;
				}
				
				urlservidor.setValue(dadaurl); //mostrem url del server
				
				if ((infoServer != null) @and (infoServer.size() > 0))
				{
					com.soffid.iam.api.SyncServerInfo info = infoServer.get(0);
					//dadaserverurl = context.getValue(xpath+"/@serverAgentHostsURL");
					
					// Posem info del server
					ss_versio.setValue(info.getVersion());
					cadMain = info.getExpirationMainCertificate();
					cadRoot = info.getExpirationRootCertificate();
					dataAct= info.getCurrentServerDate();
					
					// Per tindre la url del servidor actual
					urlServerInfo.setValue(dadaurl);
					
					try
					{
						cadRoot = ((cadRoot != null) ? sdf.format(cadRoot.getTime()) : ""); 
						ss_cad_root.setValue(cadRoot);
						dataAct = ((dataAct != null) ? sdf.format(dataAct.getTime()) : "");
						ss_data_server.setValue(dataAct);
						cadMain = ((cadMain != null) ? sdf.format(cadMain.getTime()) : "");
						ss_cad_main.setValue(cadMain);
					}
					
					catch (Throwable th) {}
					
					ss_jetty.setValue(info.getJetty());
					ss_sso.setValue(info.getSso());
					ss_ssodaemon.setValue(info.getSsoDaemon());
					ss_taskgenerator.setValue(info.getTaskGenerator());
					ss_database_connections.setValue(info.getDatabaseConnections());
				}
				
				mostraPanel("serverInfo");
			}
			
			// Functionality to restart servers
			void restartServer(self)
			{
				if (canRestartAgent)
				{
					try
					{
						// Get server URL
						dadaurl = getURLServer(self);
						
						es.caib.seycon.ng.remote.URLManager m = new es.caib.seycon.ng
								.remote.URLManager(dadaurl);
						url = m.getServerURL();
					
						if (es.caib.zkib.zkiblaf.Missatgebox.
								confirmaOK_CANCEL(String.format(org.zkoss.util.resource
										.Labels.getLabel("seyconServer.DesitjaReiniciar"),
								new Object [] {url})))
						{
							com.soffid.iam.EJBLocator.getSyncServerService().resetSyncServer(
										url.toString(), null);
							
							if (Missatgebox.confirmaOK (
									String.format(org.zkoss.util.resource
											.Labels.getLabel("seyconServer.Restarting"), 
									new Object [] {url})))
							{
								refrescaServidors(); //refresquem estat
							}
							
							else
							{
								mostraPanel("cap");//amaguem estat 
							}
						}
					}
					
					catch (Throwable th)
					{
						String fmt = org.zkoss.util.resource
								.Labels.getLabel("seyconServer.ErrorReinici");
						Missatgebox.error (String.format(fmt, new Object []
								{
									(th.getCause()!=null ? th.getCause() : th.toString())
								}
						));
						
						mostraPanel("cap");
						return;
					}
				}
			}
			
			// Functionality to obtain the server log
			void getServerLog(self)
			{
			// LOG
				if (canQueryServerLog)
				{
					try
					{
						// Get URL server  
						dada = getURLServer(self);
						
						java.net.URL urls = new java.net.URL(dada);
						host = urls.getHost();
						// Funciona amb url relativa??
						String url = "/SEU/serverlog?urlserver="+host;
						logwindow.setSrc(url);
						logwindow.invalidate();
					}
					
					catch (Throwable th)
					{
						Missatgebox.error (org.zkoss.util.resource.Labels
								.getLabel("seyconServer.ErrorLog"));
					}
				}
			}
			
			// Functionality to show agent tasks
			void viewAgentTasks(self)
			{
				listCell = self.getParent();
				dlistbox = listCell.getListbox();
				modelo = dlistbox.getModel();
				listItem = listCell.getParent();
				posicio = listItem.getIndex();
				elemPos = modelo.getElementAt(posicio);
				xpathActual = elemPos.getXPath();
				ds = dlistbox.getDataSource();
				ctx = ds.getJXPathContext();
				url = ctx.getValue(xpathActual + "/@url");
				veureTasquesAgent(self.value, url);
				mostraPanel("tasquesAgent");
			}
			
			// Functionality to restart agent
			void restartAgent(self)
			{
				// Get URL server
				listCell = self.getParent().getParent();
				dadaurl = listCell.label;
				
				try
				{
					es.caib.seycon.ng.remote.URLManager m = new es.caib.seycon.ng.remote
							.URLManager(dadaurl);
					
					// Obtenim la url del seycon-server
					urlserver= model.getVariables().getVariable("urlserver");
					url = m.getServerURL().getHost();
				
					if (es.caib.zkib.zkiblaf.Missatgebox
							.confirmaOK_CANCEL(String.format(org.zkoss.util.resource
									.Labels.getLabel("seyconServer.VolReiniciar"),
							new Object [] {url})))
					{
						com.soffid.iam.EJBLocator.getSyncServerService().
								resetSyncServer(urlserver, url);
						Missatgebox.info ( 
							String.format(org.zkoss.util.resource
									.Labels.getLabel("seyconServer.Restarting"),
							new Object [] {url}));
					}
				}
				
				catch (Throwable th)
				{
					th.printStackTrace();
					Missatgebox.error (String.format(org.zkoss.util.resource
							.Labels.getLabel("seyconServer.ErrorReinici"),
						new Object [] {th.getMessage()}));
				}
			}
			
			// Functionality to view actual DB queries
			void viewDBQueries()
			{
				s_dbpool.setValue("");//netegem
				
				try
				{
					estatDB = getSeyconServerService()
							.getSeyconServerInfo(urlServerInfo.getValue(),
									"dbpool", new String[]{});
					s_dbpool.setValue((estatDB != null) && (estatDB.size() > 0) ?
							estatDB.get(0) : "");
					mostraPanel("dbpool");
				}
				
				catch (Throwable th) {}
			}
			
			// Functionality to show task erros in agent tasks grid
			void showTaskErrors(Component c)
			{
				String t = es.caib.zkib.datasource.XPathUtils.getValue(c, "@stackTrace");
				//pareMsg = fillDiv.parent.parent.parent;
				pareMsg = c.parent;
				while(!(pareMsg instanceof Listcell))
					pareMsg = pareMsg.parent;
				
				Missatgebox.info(pareMsg.getLabel() + "\n" + t, 600);
			}
			
			void checkRefreshPage()
			{
				String numAgents = model.getJXPathContext().getValue("/server[1]/@numAgents");
				
				try
				{
					int agents = Integer.parseInt(numAgents);
					
					if (agents >= 10)
					{
						refreshPage = false;
						refresh_button(false);
					}
				}
				
				catch (Exception e){}
			}
			
			void refresh_button(boolean refresh)
			{
					refreshPage = refresh;
					
					on_button.setVisible(refresh);
					off_button.setVisible(!refresh);
					
					if (refresh)
						timer.start();
					
					else
						timer.stop();
			}
		]]>
	</zscript>

	<div sclass="titolpagina" width="100%">
		${c:l('seyconserver.zul.Estatdelsservidorsde')}
		
		<h:span style="display: inline-block; margin-right: 33px; float: right">
			<label value="${c:l('seyconserver.zul.AutomaticRefresh')}"
				style="margin-right:5px; vertical-align: top; font-family: Arial;
					font-size: 12px; font-weight: bold; color: #0E5462;"/>
			<imageclic id="on_button" src="/images/on_button.png"
				onClick="refresh_button(false)"/>
			<imageclic id="off_button" src="/images/off_button.png" visible="false"
				onClick="refresh_button(true)"/>
		</h:span>
	</div>
	<separator height="5px"/>

	<timer id="timer" delay="${refreshPageTime}" repeats="true" 
		onTimer="refreshPage()" />
	
	<hbox width="900px%" widths="800px,50px">
		<vbox width="100%">
		<listbox dataPath="/model:/server" fixedLayout="false" id="gridServidors" width="100%"
			noSizable="true" sclass="likeagrid headcentrat nosel"
			onCreate="checkRefreshPage()">
			<listhead><!--  NOTA: si es canvia, canviar també el dee de tasques pendents -->
				<listheader label="${c:l('seyconserver.zul.URL')}" width="20em"/>
				<listheader label="${c:l('seyconserver.zul.Status')}" width="50px"/>
				<listheader label="${c:l('seyconserver.zul.Agents')}" width="26%"/>
				<listheader label="${c:l('seyconserver.zul.Tasques')}" width="22%"/>
				<listheader label="${c:l('seyconserver.zul.Estat')}" width="80px"/>
			</listhead>
			<dataitem bind=".">
				<listcell bind="@url"/>
				<listcell>
					<div align="center">
						<imagebinding align="middle" bind="@estat" srcBinding="${iconasSemafor}" enableTooltip="false"/>
					</div>
				</listcell>
				<listcell>
					<hbox width="100%" widths="*,85px">
						<label bind="@numAgents"
							tooltiptext="${c:l('seyconserver.zul.TotalAgentsConnectats')}"/>
						<button if="${canQueryAgentList}"
							label="${c:l('seyconserver.zul.VeureAgents')}" width="100%">
							<attribute name="onClick">
								viewAgents(self);
							</attribute>
						</button>
					</hbox>
				</listcell>
				<listcell>
					<hbox width="99%" widths="*,85px">
						<label bind="@numTasquesPendents"
							tooltiptext="${c:l('seyconserver.zul.TotalTasquesPendents')}"/>
						<button if="${canQueryAgentList}"
							label="${c:l('seyconserver.zul.VeureTasques')}" width="100%">
							<attribute name="onClick">
								viewTasks(self, false);
							</attribute>
						</button>
					</hbox>
				</listcell>
				<listcell>
					<div align="center">
						<imageclic align="middle" src="img/info.png"
							style="margin-right:10px;" tooltiptext="${c:l('seyconserver.Informacio')}">
							<attribute name="onClick">
								viewServerAdditionalInfo(self);
							</attribute>
						</imageclic>
						<imageclic align="middle" if="${canRestartAgent}"
							src="img/refresca.png" style="margin-right:10px;"
							tooltiptext="${c:l('seyconserver.Reiniciar')}">
							<attribute name="onClick">
								restartServer(self);
							</attribute>
						</imageclic>
						<imageclic align="middle" if="${canQueryServerLog}" src="img/log.png"
							tooltiptext="${c:l('seyconserver.Log')}">
							<attribute name="onClick">
								getServerLog(self);
							</attribute>
						</imageclic>
					</div>
				</listcell>
			</dataitem>
		</listbox>
		<iframe height="0" id="logwindow" visible="false" width="0"/>
		<listbox id="gridTasquesPendents" dataPath="/model:/tasquespendents"
			fixedLayout="false" sclass="likeagrid headcentrat nosel" width="100%">
			<listhead>
				<listheader label="${c:l('seyconserver.zul.URL')}" width="20em"/>
				<listheader label="${c:l('seyconserver.zul.Estat')}" width="50px"/>
				<listheader label="${c:l('seyconserver.zul.Agents')}" width="26%"/>
				<listheader label="${c:l('seyconserver.zul.Tasques')}" width="22%"/>
				<listheader label="${c:l('seyconserver.zul.')}" width="80px"/>
			</listhead>
			<dataitem bind=".">
				<listcell bind="@url"/>
				<listcell>
					<div align="center">
						<imagebinding align="middle" bind="@estat"
							srcBinding="${iconasSemafor}" enableTooltip="false"/>
					</div>
				</listcell>
				<listcell>
					<label bind="@numAgents"/>
				</listcell>
				<listcell>
					<hbox width="100%" widths="*, 85px">
						<label bind="@numTasquesPendents"/>
						<button if="${canQueryAgentList}"
							label="${c:l('seyconserver.zul.VeureTasques')}" width="100%">
							<attribute name="onClick">
								viewUnscheduledTasks();
							</attribute>
						</button>
					</hbox>
				</listcell>
				<listcell/>
			</dataitem>
		</listbox>
		</vbox>
		
		<vbox>
			<image onClick="refrescaServidors()" sclass="reloadtasks"
				src="/images/reload-petit.png"
				tooltiptext="${c:l('seyconserver.Refresca')}"/>
		</vbox>
	</hbox>

	<separator height="20px"/>
	
	<div id="titoltasques" sclass="titolpagina" visible="false">
		${c:l('seyconserver.zul.Servidor')}
		
		<label id="urlservidor" style="color:#00000;" value=""/>
	</div>

	<tabbox id="panels" visible="false" width="100%" >
	<tabs>
		<tab id="t_agents" label="${c:l('seyconserver.zul.Agents')}" visible="false"/>
		<tab id="t_tasques" label="${c:l('seyconserver.zul.Tasques')}" visible="false"/>
		<tab id="t_tasquesagent" label="${c:l('seyconserver.zul.TasquesAgent')}" visible="false"/>
		<tab id="t_seyconInfo" label="${c:l('seyconserver.zul.Informacia')}" visible="false"/>
		<tab id="t_dbpool" label="${c:l('seyconserver.zul.ConsultesSQL')}" visible="false"/>
		<tab id="t_unscheduled" label="${c:l('seyconserver.zul.TasquesAgent')}" visible="false"/>
	</tabs>
	<tabpanels width="100%">
		<tabpanel id="tagents" width="100%">
			<listbox id="gridAgents" dataPath="/model:/agentsserver"
				fixedLayout="true" sclass="likeagrid headcentrat doscolors" width="100%">
				<listhead>
					<listheader label="${c:l('seyconserver.zul.Agent')}" sort="auto" width="140px"/>
					<listheader label="${c:l('seyconserver.zul.Tasques')}" sort="auto" width="80px"/>
					<listheader label="${c:l('seyconserver.zul.Estat')}" sort="auto" width="80px"/>
					<listheader label="${c:l('seyconserver.zul.Tipus')}" sort="auto" width="*"/>
					<listheader if="${canRestartAgent}" label="${c:l('seyconserver.zul.')}" sort="auto" width="120px"/>
				</listhead>
				<dataitem bind=".">
					<listcellnolabel bind="@nomAgent">
						<label bind="@nomAgent" sclass="word-wrap agentcss">
							<attribute name="onClick">
								viewAgentTasks(self);
							</attribute>
						</label>
					</listcellnolabel>
					<listcell bind="@tasquesPendents" style="text-align:center;font-weight:bold;"/>
					<listcellnolabel bind="@estat" sclass="word-wrap">
						<divVisible bind="@estat" valorVisible="Disconnected">
							<label bind="@estat" sclass="word-wrap" style="color: #e00000;"/>
						</divVisible>
						<divVisible bind="@estat" valorNoVisible="Disconnected">
							<label bind="@estat" sclass="word-wrap"/>
						</divVisible>
					</listcellnolabel>
					<listcell>
						<vbox>
							<label bind="@nomClasse" sclass="word-wrap"/>
							<hbox>
								<label value=" ${c:l('seyconserver.zul.Version')}" />
								<label bind="@version" sclass="word-wrap"/>
							</hbox>
							<divVisible bind="@msgEstat" sclass="st0"
								style="font-weight:normal !important;" valorNoVisible="NULL">
								<div>
									<label sclass="st" style="font-weight:normal !important;"
										value="${c:l('seyconserver.zul.mostraerrors')}">
										<attribute name="onClick">
											showTaskErrors(self);
										</attribute>
									</label>
								</div>
							</divVisible>
						</vbox>
					</listcell>
					<listcellnolabel bind="@url" if="${canRestartAgent}">
						<divVisible bind="@url" tooltip="tt_url" valorNoVisible="local">
							<button label="${c:l('seyconserver.zul.Reinicia')}" width="100%">
								<attribute name="onClick">
									restartAgent(self);
								</attribute>
							</button>
						</divVisible>
						<divVisible align="center" bind="@url" valorVisible="local">
							<label bind="@url"/>
						</divVisible>
					</listcellnolabel>
				</dataitem>
			</listbox>
			<popup id="tt_url">
				<attribute name="onOpen">
					if (event.getReference() instanceof es.caib.zkib.component.DataDivVisible) {
						listCell = event.getReference().getParent();
						if (listCell!=null @and listCell.label!=null) { 
							lb_url.value = listCell.label;
						} else  {
							lb_url.value ="";
						}
					}
				</attribute>
				<label id="lb_url" value=""/>
			</popup>
		</tabpanel>
		
		<tabpanel id="tSeyconTasks" width="100%">
			<window id="wSeyconTasks" apply="${tasquesSeycon}" border="normal" width="auto">
				<div width="100%">
					<listbox id="listboxTasques" fixedLayout="true" mold="paging"
						noSizable="true" pageSize="15" sclass="likeagrid"/>
				</div>
			</window>
		</tabpanel>
		
		<tabpanel id="ttasquesagent" width="100%">
			<vbox width="100%">
			<hbox sclass="taulaagents" width="99%">
				<hbox>
					<div sclass="titolpagina">
						${c:l('seyconserver.zul.Agent-2')}
						
						<label id="l_tasquesAgent" value=""/>
					</div>
					<separator width="20px"/>
					
					<div sclass="urlagent">
						${c:l('seyconserver.zul.URL-2')}
						
						<label id="l_tasquesAgentURL" value=""/>
					</div>
				</hbox>
				
				<div style="float:right">
					<image sclass="reloadtasks" src="/images/reload-petit.png"
						tooltiptext="${c:l('seyconserver.RefrescaAgent')}">
						<attribute name="onClick">
							// REFRESCA
							// obtenim les dades de les etiquetes...
							veureTasquesAgent(l_tasquesAgent.getValue(),
								l_tasquesAgentURL.getValue());
						</attribute>
					</image>
				</div>
			</hbox>
			<listbox dataPath="/model:/tasquesagentserver" fixedLayout="true"
				id="listboxTasquesAgent" mold="paging" pageSize="20"
				sclass="likeagrid doscolors" width="99%">
				<attribute name="onNewRow"><![CDATA[
				    Listitem item = event.getData();
  					if ( es.caib.zkib.datasource.XPathUtils.getValue(item, "@dataProximaExecucio") == null)
  					{
  						item.getChildren().get(5).getChildren().get(0).setParent(null);
  					}
				
				]]></attribute>
				<listhead>
					<listheader label="${c:l('seyconserver.zul.Tasca')}" sort="auto" width="28%"/>
					<listheader label="${c:l('seyconserver.zul.Priority')}" sort="auto" width="55px"/>
					<listheader label="${c:l('seyconserver.zul.Executions')}" sort="auto" width="65px"/>
					<listheader label="${c:l('seyconserver.zul.Executiontime')}" sort="auto" width="120px"/>
					<listheader label="${c:l('seyconserver.zul.Message')}" sort="auto" width="*"/>
					<listheader label="${c:l('seyconserver.zul.Scheduled')}" sort="auto" width="140px"/>
				</listhead>
				<dataitem bind=".">
					<listcell bind="@descripcioTasca">
						<imageclic src="/img/stop.png" title="Cancel task" style="width: 16px; float:right;">
						<attribute name="onClick"><![CDATA[
							String t = es.caib.zkib.datasource.XPathUtils.getValue(event.getTarget(), "@descripcioTasca");
							Long tid = es.caib.zkib.datasource.XPathUtils.getValue(event.getTarget(), "@idTasca");
							Listitem item = event.getTarget().getParent().getParent();
              				Missatgebox.confirmaOK_CANCEL(String.format("Do you really want to cancel task %s?", new Object[]{t}),
                  						"Cancel task",
                  						new EventListener() {
                  							public void onEvent(Event event) throws Exception {
                  								if (event.getData().equals( Missatgebox.OK) )
                  								{
                  									es.caib.seycon.ng.EJBLocator.getSeyconServerService()
                  										.cancelTask(tid);
                  									item.setParent(null);
                  								}
                  							}
                  						});
						]]></attribute>
						</imageclic>
					</listcell>
					<listcell bind="@prioritat" style="text-align:center;"/>
					<listcell bind="@numExecucions" style="text-align:center;"/>
					<listcell bind="@dataDarreraExecucio" dateFormat="dd/MM/yyyy kk:mm:ss"
						style="text-align:center;"/>
					<listcell bind="@missatge">
						<divVisible bind="@stackTrace" sclass="st0" valorNoVisible="NULL">
							<div>
								<label sclass="st" style="font-weight:normal !important;"
									value="${c:l('seyconserver.zul.mostrastacktrace')}">
									<attribute name="onClick">
										showTaskErrors(self);
									</attribute>
								</label>
							</div>
						</divVisible>
						
					</listcell>
					<listcell bind="@dataProximaExecucio" dateFormat="dd/MM/yyyy kk:mm:ss">
						<imageclic src="/img/refresca.png" title="Reschedule" style="margin-left: 4px">
						<attribute name="onClick"><![CDATA[
							String t = es.caib.zkib.datasource.XPathUtils.getValue(event.getTarget(), "@descripcioTasca");
							Long tid = es.caib.zkib.datasource.XPathUtils.getValue(event.getTarget(), "@idTasca");
							Listitem item = event.getTarget().getParent().getParent();
              				Missatgebox.confirmaOK_CANCEL(String.format("Do you want to reschedule task %s?", new Object[]{t}),
                  						"Cancel task",
                  						new EventListener() {
                  							public void onEvent(Event event) throws Exception {
                  								if (event.getData().equals( Missatgebox.OK) )
                  								{
                  									es.caib.seycon.ng.EJBLocator.getSeyconServerService()
                  										.boostTask(tid);
                  									es.caib.zkib.datasource.XPathUtils.setValue(item,
                  											"/@dataProximaExecucio",
                  											java.util.Calendar.getInstance()
                  											);
                  								}
                  							}
                  						});
						]]></attribute>
						</imageclic>
					</listcell>
				</dataitem>
			</listbox>
			<listexportbutton acces="${canQueryAgentList}" listbox="listboxTasquesAgent"/>
			</vbox>
		</tabpanel>
		
		<tabpanel id="tSeyconInfo" width="100%">
			<vbox>
				<grid>
					<columns visible="false">
						<column width="200px"/>
						<column width="400px"/>
					</columns>
					
					<rows>
						<row>
							<input_etiqueta value="${c:l('seyconserver.zul.Versia')}"/>
							<label id="ss_versio"/>
						</row>
						<row>
							<input_etiqueta value="${c:l('seyconserver.zul.SSO')}"/>
							<label id="ss_sso"/>
						</row>
						<row>
							<input_etiqueta value="${c:l('seyconserver.zul.Jetty')}"/>
							<label id="ss_jetty"/>
						</row>
						<row>
							<input_etiqueta value="${c:l('seyconserver.zul.SSODaemon')}"/>
							<label id="ss_ssodaemon"/>
						</row>
						<row>
							<input_etiqueta value="${c:l('seyconserver.zul.TaskGenerator')}"/>
							<label id="ss_taskgenerator"/>
						</row>
						<row>
							<input_etiqueta value="${c:l('seyconserver.zul.Caducitatcertificatr')}"/>
							<label id="ss_cad_root"/>
						</row>
						<row>
							<input_etiqueta value="${c:l('seyconserver.zul.Caducitatcertificatm')}"/>
							<label id="ss_cad_main"/>
						</row>
						<row>
							<input_etiqueta value="${c:l('seyconserver.zul.Datadelservidor')}"/>
							<label id="ss_data_server"/>
						</row>
						<row>
							<input_etiqueta value="${c:l('seyconserver.zul.Connexionsdebbdd')}"/>
							<vbox>
								<label id="ss_database_connections"/>
								<label id="urlServerInfo" visible="false"/>
								<button label="${c:l('seyconserver.zul.VeureconsultesSQLact')}">
									<attribute name="onClick">
										viewDBQueries();
									</attribute>
								</button>
							</vbox>
						</row>
					</rows>
				</grid>
			</vbox>
		</tabpanel>
		
		<tabpanel id="tb_dbpool" width="100%">
			<div height="300px" style="overflow:auto;border:1px solid #606E72;padding:5px;margin-bottom:5px;">
				<label id="s_dbpool" multiline="true"/>
			</div>
			<button label="${c:l('seyconserver.zul.Refresca')}">
				<attribute name="onClick">
					viewDBQueries()
				</attribute>
			</button>
		</tabpanel>

		<tabpanel id="tunscheduled" width="100%">
			<vbox width="100%">
			<hbox sclass="taulaagents" width="99%">
				<hbox>
					<div sclass="titolpagina">
						${c:l('seyconserver.zul.Unscheduled')}
					</div>
				</hbox>
				
				<div style="float:right">
					<image sclass="reloadtasks" src="/images/reload-petit.png"
						tooltiptext="${c:l('seyconserver.RefrescaAgent')}">
						<attribute name="onClick">
							model.getValue("/unscheduled").refresh();
						</attribute>
					</image>
				</div>
			</hbox>
			<listbox dataPath="/model:/unscheduled" fixedLayout="true"
				id="listboxUnscheduled" mold="paging" pageSize="20"
				sclass="likeagrid doscolors" width="99%">
				<attribute name="onNewRow"><![CDATA[
				    Listitem item = event.getData();
					String status = es.caib.zkib.datasource.XPathUtils.getValue(item, "@status");
					if (! status.equals("HELD"))
						item.getChildren().get(1).getChildren().get(0).setVisible(false);
				]]></attribute>
				<listhead>
					<listheader label="${c:l('seyconserver.zul.Tasca')}" sort="auto" />
					<listheader label="${c:l('seyconserver.zul.Estat')}" sort="auto" />
					<listheader sort="auto" width="24px"/>
				</listhead>
				<dataitem bind=".">
					<listcell bind="@descripcioTasca">
					</listcell>
					<listcell bind="@status" style="text-align:center;">
						<imageclic src="/img/play.png" title="${c:l('seyconserver.zul.ReleaseAll') }" style="margin-left:32px; width: 16px;">
						<attribute name="onClick"><![CDATA[
							Long tid = es.caib.zkib.datasource.XPathUtils.getValue(event.getTarget(), "@id");
							es.caib.seycon.ng.EJBLocator.getSeyconServerService().releaseTask(tid);
							es.caib.zkib.datasource.XPathUtils.setValue(event.getTarget(), "@status", "PENDING");
							self.setVisible(false);
						]]></attribute>
						</imageclic>
					</listcell>
					<listcell>
						<imageclic src="/img/stop.png" title="Cancel task" style="width: 16px; float:right;">
						<attribute name="onClick"><![CDATA[
							String t = es.caib.zkib.datasource.XPathUtils.getValue(event.getTarget(), "@descripcioTasca");
							Long tid = es.caib.zkib.datasource.XPathUtils.getValue(event.getTarget(), "@id");
							Listitem item = event.getTarget().getParent().getParent();
              				Missatgebox.confirmaOK_CANCEL(String.format("Do you really want to cancel task %s?", new Object[]{t}),
                  						"Cancel task",
                  						new EventListener() {
                  							public void onEvent(Event event) throws Exception {
                  								if (event.getData().equals( Missatgebox.OK) )
                  								{
                  									es.caib.seycon.ng.EJBLocator.getSeyconServerService()
                  										.cancelTask(tid);
                  									item.setParent(null);
                  								}
                  							}
                  						});
						]]></attribute>
						</imageclic>
					</listcell>
				</dataitem>
			</listbox>
			<div>
				<listexportbutton acces="${canQueryAgentList}" listbox="listboxUnscheduled"/>
				<button image="/img/play.png" label="${c:l('seyconserver.zul.ReleaseAll') }">
						<attribute name="onClick"><![CDATA[
							es.caib.seycon.ng.EJBLocator.getSeyconServerService().releaseAllTasks();
							model.getJXPathContext().getValue("/unscheduled").refresh();
						]]></attribute>
				</button>
				<button image="/img/stop.png" label="${c:l('seyconserver.zul.CancelAll') }">
						<attribute name="onClick"><![CDATA[
							es.caib.seycon.ng.EJBLocator.getSeyconServerService().cancelUnscheduledTasks();
							model.getJXPathContext().getValue("/unscheduled").refresh();
						]]></attribute>
				</button>
			</div>
			</vbox>
		</tabpanel>

	</tabpanels>
	</tabbox>
</frame>
</zk>
