<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?page id="usuaris" title="GestiÃ³ d'usuaris"?>
<?taglib uri="/WEB-INF/tld/web/core.dsp.tld" prefix="c" ?>
<?init class="es.caib.seycon.ng.web.CheckPermisos" arg0="usuaris" ?>
<?component name="input_criteri" macro-uri="comu/input_criteri.zul"?>
<?component name="input_dada" macro-uri="comu/input_dada.zul"?>
<?component name="input_etiqueta" macro-uri="comu/input_etiqueta.zul"?>
<?component name="input_criteri_data" macro-uri="comu/input_criteri_data.zul"?>

<zk xmlns:h="http://www.w3.org/1999/xhtml">
	<frame id="p_usuaris" saveContent="true"
		title="${c:l('usuaris.lblGestionUsuarios1')}" width="99%">
		<style src="~.s/tyles/estil.css" />
		<style>
			span.etiqueta {white-space:nowrap !important;}
			.dataListcelldestacada div { background-color: #FF0000; }
			td.dataTreeCelldestacada div { border: 1px solid red; }
			td.dataTreeCelldestacada div
			.dateboxreadnoborderinp.text-disd { color: red !important; }
		</style>

		<zscript src="comu/netejaCriteris.zul"/>
		<zscript src="comu/checkTruncatedResults.zul" />

		<datamodel id="model" rootNode="usuaris" src="descriptorUsuari.xml" />

		<zscript>
			<![CDATA[
				String requestedUser = Executions.getCurrent().getNativeRequest().getParameter("user");
				boolean readOnly = requestedUser != null;
				boolean showHolderGroup = false;
				boolean enforceHolderGroup = false;
				
				String ghp = System.getProperty("soffid.entitlement.group.holder");
				if ("always".equals(ghp))
					showHolderGroup = enforceHolderGroup = true;
				else if ("optional".equals(ghp))
					showHolderGroup = true;
				
				fileres = es.caib.seycon.ng.web.Custom.FILERES;
				fileresO = es.caib.seycon.ng.web.Custom.FILERES_OBRIR;
				refreshPageTime = 10000;
				
				try
				{
					es.caib.zkib.zkiblaf.Application
							.setTitle(org.zkoss.util.resource.Labels
									.getLabel("usuaris.lblGestionUsuarios1"));
				}
				catch (Exception ex) {}
			
				queryWindowMin = "75px";
				queryWindowMax = "130px";
			
				mode = "query";
				boolean view_altres = false;
				model.getVariables().declareVariable("queryEnabled", false);
				model.getVariables().declareVariable("restringeixCerca", true);
			
				// Autoritzacions d'usuari;
				import es.caib.seycon.ng.utils.AutoritzacionsUsuari;
				import es.caib.zkib.datasource.XPathUtils;
				canCreateUser = !readOnly && AutoritzacionsUsuari.hasCreateUser();
				canUpdateUser = !readOnly && AutoritzacionsUsuari.hasUpdateUser();
				canUpdateCustomUser = !readOnly && AutoritzacionsUsuari.hasUpdateCustomUser();
				canUpdateUserPassword = AutoritzacionsUsuari.hasUpdateUserPassword();
				canQueryUser = AutoritzacionsUsuari.hasQueryUser();
				canRefreshUser = AutoritzacionsUsuari.hasRefreshUser();
				canQueryUserRole = AutoritzacionsUsuari.hasQueryUserRole();
				canQueryUserSession = AutoritzacionsUsuari.hasQueryUserSession();
				//canQueryUserGroup = AutoritzacionsUsuari.canQueryUserGroup();
				//canQueryUserPrinter = AutoritzacionsUsuari.canQueryUserPrinter();
				//canCreateUserMetadata = AutoritzacionsUsuari.canCreateUserMetadata();
				canUpdateUserMetadata = !readOnly && AutoritzacionsUsuari.hasUpdateUserMetadata();
				canCreateUserRole = !readOnly && AutoritzacionsUsuari.hasCreateUserRole();
				canDeleteUserRole = !readOnly && AutoritzacionsUsuari.hasDeleteUserRole();
				canCreateUserGroup = !readOnly && AutoritzacionsUsuari.hasCreateUserGroup();
				canDeleteUserGroup = !readOnly && AutoritzacionsUsuari.hasDeleteUserGroup();
				canCreateUserPrinter = !readOnly && AutoritzacionsUsuari.hasCreateUserPrinter();
				canDeleteUserPrinter = !readOnly && AutoritzacionsUsuari.hasDeleteUserPrinter();
				canViewRegistresAccesUsuari = AutoritzacionsUsuari
						.hasQueryUserAccessRegister();
				canViewMazingerUsuari = AutoritzacionsUsuari.hasQueryUserMazinger();
				
				// Permisos per consultar (botons)
				canQueryGroup = AutoritzacionsUsuari.hasQueryGroup();
			
				model.getVariables().declareVariable("canQueryUser", canQueryUser);
				model.getVariables().declareVariable("canRefreshUser", canRefreshUser);
				model.getVariables().declareVariable("canQueryUserRole", canQueryUserRole);
				model.getVariables().declareVariable("canQueryUserSession",
						canQueryUserSession);
				model.getVariables().declareVariable("canViewRegistresAccesUsuari",
						canViewRegistresAccesUsuari);
			
				//model.getVariables().declareVariable("canQueryUserGroup", canQueryUserGroup);
				//model.getVariables().declareVariable("canQueryUserPrinter", canQueryUserPrinter);
			
				// D'altres permisos
				canQueryCustomAudit = AutoritzacionsUsuari.hasQueryCustomAuditoria();
				canModifyUser = canCreateUser || canUpdateUser;
				import es.caib.zkib.datamodel.xml.XmlDataNode;
				import es.caib.seycon.ng.comu.*;
				
				boolean queryEnabled = false;
				boolean retrySearch = false;
				
				void populateDetails()
				{
					String mode = "query";
				}
				
				// Method to obtain the parameters to search process
				java.util.Map getSearchParameters()
				{
					java.util.Map searchValues = new java.util.HashMap();
					
					codi = esquema.getFellow("queryWindow").getFellow("queryCodi")
							.getFellow("textbox");
					DNI = esquema.getFellow("queryWindow").getFellow("queryDNI")
							.getFellow("textbox");
					nom = esquema.getFellow("queryWindow").getFellow("queryNom")
							.getFellow("textbox");
					primerLlinatge = esquema.getFellow("queryWindow")
							.getFellow("queryPrimerLlinatge").getFellow("textbox");
					segonLlinatge = esquema.getFellow("queryWindow")
							.getFellow("querySegonLlinatge").getFellow("textbox");
					grupPrimari = esquema.getFellow("queryWindow")
							.getFellow("queryGrupPrimari").getFellow("textbox");
					
					dominiCorreu = esquema.getFellow("queryWindow")
							.getFellow("queryWindowAltres").getFellow("queryDominiCorreu")
							.getFellow("textbox");
					tipusUsuari = esquema.getFellow("queryWindow")
							.getFellow("queryWindowAltres").getFellow("queryTipusUsuari")
							.getSelectedItem();
					
					actiu = esquema.getFellow("queryWindow").getFellow("queryWindowAltres")
							.getFellow("queryActiu").getSelectedItem();
					grupSecundari = esquema.getFellow("queryWindow")
							.getFellow("queryWindowAltres").getFellow("queryGrupSecundari")
							.getFellow("textbox");
					nomCurt = esquema.getFellow("queryWindow")
							.getFellow("queryWindowAltres").getFellow("queryNomCurt")
							.getFellow("textbox");
					accountName = esquema.getFellow("queryWindow")
							.getFellow("queryWindowAltres").getFellow("queryAccountName")
							.getFellow("textbox");
					accountSystem = esquema.getFellow("queryWindow")
							.getFellow("queryWindowAltres").getFellow("queryAccountSystem")
							.getFellow("textbox");
					roleName = esquema.getFellow("queryWindow")
							.getFellow("queryWindowAltres").getFellow("queryRoleName")
							.getFellow("textbox");
					roleSystem = esquema.getFellow("queryWindow")
							.getFellow("queryWindowAltres").getFellow("queryRoleSystem")
							.getFellow("textbox");
					attName = esquema.getFellow("queryWindow")
							.getFellow("queryWindowAltres").getFellow("queryAttributeName")
							.getSelectedItem();
					attValue = esquema.getFellow("queryWindow")
							.getFellow("queryWindowAltres").getFellow("queryAttributeValue")
							.getFellow("textbox");
					
					// Check enable query
					if ((codi.value.trim().length() == 0) &&
							(DNI.value.trim().length() == 0) &&
							((nom == null) || (nom.value == null) ||
							(nom.value.trim().length() == 0)) &&
							(primerLlinatge.value.trim().length() == 0) &&
							(segonLlinatge.value.trim().length() == 0) &&
							(grupPrimari.value.trim().length() == 0) &&
							(dominiCorreu.value.trim().length() == 0) &&
							((tipusUsuari == null) || (tipusUsuari.getValue() == null)) &&
							((actiu == null) || (actiu.getValue() == null)) &&
							(grupSecundari.value.trim().length() == 0) &&
							(nomCurt.value.trim().length() == 0) &&
							(accountName.value.trim().length() == 0) &&
							(accountSystem.value.trim().length() == 0) &&
							(roleName.value.trim().length() == 0) &&
							(roleSystem.value.trim().length() == 0) &&
							(attName == null || attName.value == null || attName.value.trim().length() == 0) &&
							(attValue.value.trim().length() == 0))
					{
						queryEnabled = false;
					}
					
					else
					{
						queryEnabled = true;
					}
					
					// Add parameters to search
					searchValues.put("codi", codi.value);
					searchValues.put("DNI", DNI.value);
					searchValues.put("nom", nom.value);
					searchValues.put("primerLlinatge", primerLlinatge.value);
					searchValues.put("segonLlinatge", segonLlinatge.value);
					searchValues.put("grupPrimari", grupPrimari.value);
					searchValues.put("dominiCorreu", dominiCorreu.value);
					searchValues.put("accountName", accountName.value);
					searchValues.put("accountSystem", accountSystem.value);
					searchValues.put("roleName", roleName.value);
					searchValues.put("roleSystem", roleSystem.value);
					searchValues.put("attributeValue", attValue.value);
					if (attName != null)
						searchValues.put("attributeName", attName.value);
					
					if ((tipusUsuari == null) || (tipusUsuari.getValue() == null))
						searchValues.put("tipusUsuari", "");
					
					else
						searchValues.put("tipusUsuari", tipusUsuari.getValue());
					
					if ((actiu == null) || (actiu.getValue() == null))
						searchValues.put("actiu", "");
					
					else
						searchValues.put("actiu", actiu.getValue());
					
					searchValues.put("grupSecundari", grupSecundari.value);
					searchValues.put("nomCurt", nomCurt.value);
					
					return searchValues;
				}
				
				void search()
				{
					java.util.Map lista = new java.util.HashMap();
					
					if (esquema.isCommitPending()) {
						Missatgebox.avis(org.zkoss.util.resource.Labels
									.getLabel("usuaris.Confirmar"),
								org.zkoss.util.resource.Labels
									.getLabel("usuaris.CanvisPendents"));
						return;
					}
					
					if (!retrySearch)
					{
						lista = es.caib.seycon.ng.web.utils.
							Autowildcards.replaceAsteriskChar(getSearchParameters());
					}
					
					else
					{
						lista = es.caib.seycon.ng.web.utils.
								Autowildcards.addPercentChar(getSearchParameters());
					}
					
					UsuariCriteria criteria = new UsuariCriteria();
					criteria.setCodi(lista.get("codi"));
					criteria.setNIF(lista.get("DNI"));
					criteria.setNom(lista.get("nom"));
					criteria.setPrimerLlinatge(lista.get("primerLlinatge"));
					criteria.setSegonLlinatge(lista.get("segonLlinatge"));
					criteria.setCodiGrupPrimari(lista.get("grupPrimari"));
					criteria.setDominiCorreu(lista.get("dominiCorreu"));
					criteria.setTipusUsuari(lista.get("tipusUsuari"));
					if (lista.get("actiu") != null && ! "%".equals(lista.get("actiu")) && ! "".equals(lista.get("actiu")))
						criteria.setActiu(lista.get("actiu").equals("S"));
					criteria.setSecondaryGroup(lista.get("grupSecundari"));
					criteria.setNomCurt(lista.get("nomCurt"));
					criteria.setAccountName(lista.get("accountName"));
					criteria.setAccountSystem(lista.get("accountSystem"));
					criteria.setRolName(lista.get("roleName"));
					criteria.setRolSystem(lista.get("roleSystem"));
					criteria.setAttributeName(lista.get("attributeName"));
					criteria.setAttributeValue(lista.get("attributeValue"));
					
					model.getVariables().declareVariable("criteria", criteria);
					
					model.getVariables().declareVariable("restringeixCerca", true);
					
					// Check search restrictions
					if (!lista.get("dominiCorreu").equals("%"))
					{
						model.getVariables().declareVariable("restringeixCerca", false);
					}
					
					model.getVariables().declareVariable("queryEnabled", queryEnabled);
			
					listbox = esquema.getFellow("lista").getFellow("listbox");
					if (queryEnabled)
					{
						model.getJXPathContext().getValue("/usuari").refresh();
						listbox.dataPath = "/model:/usuari";
					}
					
					if (listbox.getModel().getSize() == 1)
					{
						listbox.renderAll();
						Listitem elem = listbox.getItemAtIndex(0);
						if (elem != null)
							listbox.setSelectedItem(elem);
						
						select();
						retrySearch = false;
					}
					
					else
					{
						if ((listbox.getModel().getSize() == 0) && !retrySearch)
						{
							retrySearch = true;
							search();
						}
						
						else
						{
							esquema.tancaDetalls(); //amaguem dades..
							retrySearch = false;
						}
					}
					
					checkTruncatedList(listbox);
				}
				
				void showAltres()
				{
					if (view_altres == false)
					{
						esquema.getFellow("queryWindow").setHeight(queryWindowMax);
						esquema.getFellow("queryWindow").getFellow("queryWindowAltres")
								.setVisible(true);
						esquema.getFellow("queryWindow").getFellow("img_altres")
								.setSrc("~./img/fletxa-baix.gif");
						view_altres = true;
					}
					
					else
					{
						esquema.getFellow("queryWindow").setHeight(queryWindowMin);
						esquema.getFellow("queryWindow").getFellow("queryWindowAltres")
								.setVisible(false);
						esquema.getFellow("queryWindow").getFellow("img_altres")
								.setSrc("~./img/fletxa.gif");
						view_altres = false;
					}
				}
				
				void blockSearchCriteria()
				{
					if (view_search_criteria == false)
					{
						esquema.getFellow("queryWindow").setHeight(queryWindowMin);
						esquema.getFellow("queryWindow").getFellow("label_show_search")
								.setLabel(org.zkoss.util.resource.Labels
										.getLabel("usuaris.zul.HideSearch"));
						esquema.getFellow("queryWindow").getFellow("img_test")
								.setSrc("~./img/fletxa-baix.gif");
						
						view_search_criteria = true;
					}
				}
				
				void select ()
				{ 
					if (esquema.getFellow("lista").getFellow("listbox").selectedItem != null && 
						esquema.getFellow("lista").getFellow("listbox").selectedItem.value != null) {
						populateDetails (); 
						showDetall ();
					}
				}
				
				void showLista()
				{
					esquema.getFellow("lista").getFellow("listbox").clearSelection();
					esquema.getFellow("lista").getFellow("listbox").setRows(fileresO);
				}
				
				void showDetall()
				{
					esquema.hideCriteris();
					esquema.getFellow("lista").getFellow("listbox").setRows(5);
					esquema.showFormulari();
				}
				
				void doCommit(Event event)
				{
					model.commit();
					es.caib.zkib.binder.BindContext bindCtx = es.caib.zkib.datasource.XPathUtils.getComponentContext(
							listbox.getSelectedItem());
					Long idUsuari = (Long) es.caib.zkib.datasource.XPathUtils.getValue(bindCtx, "@id");
					
					if(idUsuari != null)
					{				
						esquema.getFellow("dades").getFellow("form").getFellow("panels").getFellow("basica")
							.getFellow("codi").setDisabled(true);
						esquema.getFellow("dades").getFellow("form").getJXPathContext().getPointer("@dataDarreraModificacioUsuari").invalidate();
					}
					event.stopPropagation();
				}
				/*boolean launchVNC(Long sessioId)
				 {
				 es.caib.seycon.net.ejb.SessioEJB sessioEJB = es.caib.seycon.net.ejb.SeyconFactory.getSessioEJB();
				 es.caib.seycon.net.Sessio sessio = sessioEJB.findById(sessioId);
				 if (sessio == null) {
				 Missatgebox.error(String.format(org.zkoss.util.resource.Labels.getLabel("usuaris.ErrorSessio"), new Object [] {sessioId}));
				 return false;
				 } else return sessioEJB.launchVNC(sessio);
				 }*/
				boolean launchVNC(Long sessioId)
				 {
					javax.naming.Context context = new javax.naming.InitialContext();
					xarxaHome = context
							.lookup(es.caib.seycon.ng.servei.ejb.XarxaServiceHome.JNDI_NAME);
					xarxaService = xarxaHome.create();
					return xarxaService.launchVNC(sessioId).booleanValue();
				}
				es.caib.seycon.ng.servei.ejb.UsuariService _usuariService = null;
				es.caib.seycon.ng.servei.ejb.UsuariService getUsuariService()
				{
					if (_usuariService == null) {
						javax.naming.Context context = new javax.naming.InitialContext();
						Object objUsuari = context
								.lookup(es.caib.seycon.ng.servei.ejb.UsuariServiceHome.JNDI_NAME);
						es.caib.seycon.ng.servei.ejb.UsuariServiceHome usuariHome = (es.caib.seycon.ng.servei.ejb.UsuariServiceHome) javax.rmi.PortableRemoteObject
								.narrow(objUsuari,
										es.caib.seycon.ng.servei.ejb.UsuariServiceHome.class);
						_usuariService = usuariHome.create();
					}
					return _usuariService;
				}
				
				// Identifica el domini de contrasenyes per defecte de l'usuari
				void changePasswordDefaultDomain()
				{
					ds = esquema.getFellow("dades").getFellow("form").getDataSource();
					ctx = ds.getJXPathContext();
					String codiUsuari = ctx.getValue("@codi");
			
					String domini = null;
					Iterator it = ctx.iteratePointers("/domini/politica[account/@name]");
					while (it.hasNext())
					{
						es.caib.zkib.jxpath.Pointer p = it.next();
						PoliticaContrasenya politica = p.getValue().instance;
						if (politica.getTipus().equals("M"))
						{
							if (domini == null)
							{
								domini = politica.getCodiDominiContrasenya();
							}
							
							else if (!domini.equals(politica.getCodiDominiContrasenya()))
							{
								es.caib.zkib.zkiblaf.Missatgebox.avis(org.zkoss.util.resource
										.Labels.getLabel("usuaris.CannotAssign"));
								return;
							}
						}
					}
					if(domini == null || domini.isEmpty())
					{
						es.caib.zkib.zkiblaf.Missatgebox.avis(org.zkoss.util.resource
								.Labels.getLabel("usuaris.DominiContrsenyesNull"));
					}
					else
					{
						changePassword (domini);
					}
				}
				]]></zscript>
				<zscript id="changePasswordScript"><![CDATA[
                    				void changePassword(String dominiContrasenyes)
                    				{
                    					ds = esquema.getFellow("dades").getFellow("form").getDataSource();
                    					ctx = ds.getJXPathContext();
                    					String codiUsuari = ctx.getValue("@codi");
                    					newPassword2.setAttribute("user", codiUsuari);
                    					newPassword2.setAttribute("domain", dominiContrasenyes);
                    					Events.postEvent("onStart", newPassword2, null);
                    				}
				
				void enterPassword(es.caib.zkib.datasource.DataSource ds, String xpath)
				{
					try{
						if ( ds.getJXPathContext().getValue(xpath+"/account[1]") == null)
						{
							es.caib.zkib.zkiblaf.Missatgebox.info(org.zkoss.util.resource.Labels.getLabel("usuaris.zul.NoAccountFound"));	
						} else {
							newPassword.setVisible(true);
							newPassword.setMode("highlighted");
							newPassword.setAttribute("ds", ds);
							newPassword.setAttribute("xpath", xpath);
						}
					} catch ( InterruptedException e) {}
				}
				]]>
				</zscript>
				<zscript>
				<![CDATA[
				
				void propagaCanvis()
				{
					ds = esquema.getFellow("dades").getFellow("form").getDataSource();
					ctx = ds.getJXPathContext();
					String codiUsuari = ctx.getValue("@codi");
			
					javax.naming.Context context = new javax.naming.InitialContext();
					Object objUsuari = context
							.lookup(es.caib.seycon.ng.servei.ejb.UsuariServiceHome.JNDI_NAME);
					es.caib.seycon.ng.servei.ejb.UsuariServiceHome usuariHome = (es.caib.seycon.ng.servei.ejb.UsuariServiceHome) javax.rmi.PortableRemoteObject
							.narrow(objUsuari,
									es.caib.seycon.ng.servei.ejb.UsuariServiceHome.class);
					es.caib.seycon.ng.servei.ejb.UsuariService usuariService = usuariHome
							.create();
			
					String[] tasquesSeycon = usuariService.refreshCanvis(codiUsuari);
					tasques.visible = true;
					tasques.mode = "overlapped";
					Events.postEvent("onInicia", desktop.getPage("tasquesSeycon")
							.getFellow("tasques"), tasquesSeycon);
				}
				
				void llistaTasquesPendents() {
					ds = esquema.getFellow("dades").getFellow("form").getDataSource();
					ctx = ds.getJXPathContext();
					String codiUsuari = ctx.getValue("@codi");
			
					javax.naming.Context context = new javax.naming.InitialContext();
					Object objUsuari = context
							.lookup(es.caib.seycon.ng.servei.ejb.UsuariServiceHome.JNDI_NAME);
					es.caib.seycon.ng.servei.ejb.UsuariServiceHome usuariHome = (es.caib.seycon.ng.servei.ejb.UsuariServiceHome) javax.rmi.PortableRemoteObject
							.narrow(objUsuari,
									es.caib.seycon.ng.servei.ejb.UsuariServiceHome.class);
					es.caib.seycon.ng.servei.ejb.UsuariService usuariService = usuariHome
							.create();
					
					String[] tasquesSeycon = usuariService.getTasques(codiUsuari);
					tasques.visible = true;
					tasques.mode = "overlapped";
					Events.postEvent("onInicia", desktop.getPage("tasquesSeycon")
							.getFellow("tasques"), tasquesSeycon);
				}
				
				void consultaQuota(codiUsuari)
				{
					Executions.getCurrent().sendRedirect("http://sofiwnt24/cgi-bin/quota.cgi?usuari="+codiUsuari,"_new");
				}
				
				void seguentCodiUsuari() {
					ds = esquema.getFellow("dades").getFellow("form").getDataSource();
					ctx = ds.getJXPathContext();
					String codiUsuari = ctx.getValue("@codi");
			
					javax.naming.Context context = new javax.naming.InitialContext();
					Object objUsuari = context
							.lookup(es.caib.seycon.ng.servei.ejb.UsuariServiceHome.JNDI_NAME);
					es.caib.seycon.ng.servei.ejb.UsuariServiceHome usuariHome = (es.caib.seycon.ng.servei.ejb.UsuariServiceHome) javax.rmi.PortableRemoteObject
							.narrow(objUsuari,
									es.caib.seycon.ng.servei.ejb.UsuariServiceHome.class);
					es.caib.seycon.ng.servei.ejb.UsuariService usuariService = usuariHome
							.create();
			
					String seguentCodi = usuariService.getSeguentCodi();
					esquema.getFellow("dades").getFellow("form").getFellow("codi")
							.setValue(seguentCodi);
				}
				
				String nomUsuari() {
					return (String) (esquema.getFellow("dades").getFellow("form")
							.getFellow("nom").getFellow("dada").value
							+ " "
							+ esquema.getFellow("dades").getFellow("form")
									.getFellow("primerLlinatge").getFellow("dada").value
							+ " " + esquema.getFellow("dades").getFellow("form")
							.getFellow("segonLlinatge").getFellow("dada").value);
				}
				
				void inicialitzaValors() {
			//		esquema.getFellow("dades").getFellow("form").getFellow("lbtipusUsuari")
			//				.setSelectedIndex(0);
					esquema.getFellow("dades").getFellow("form").getFellow("actiu")
							.setChecked(true);
				}
				
				boolean checkIfNumber(String in) {
					try {
						Integer.parseInt(in);
					}
			
					catch (NumberFormatException ex) {
						return false;
					}
			
					return true;
				}
				
				private boolean checkIfNumber(String in) {
					try {
						Integer.parseInt(in);
					}
			
					catch (Exception ex) {
						return false;
					}
			
					return true;
				}
				
				public void verificaNIF_WS (nif)  //No s'emplea.. s'emplea en el DAO(create,update[nom-llinatges-dni]
				{
					javax.naming.Context context = new javax.naming.InitialContext();
					Object objUsuari = context.lookup(es.caib.seycon.ng.servei.ejb.UsuariServiceHome.JNDI_NAME);
					es.caib.seycon.ng.servei.ejb.UsuariServiceHome usuariHome = (es.caib.seycon.ng.servei.ejb.UsuariServiceHome) javax.rmi.PortableRemoteObject.narrow(
						objUsuari, es.caib.seycon.ng.servei.ejb.UsuariServiceHome.class);
					es.caib.seycon.ng.servei.ejb.UsuariService usuariService = usuariHome.create();
					
					vnom = esquema.getFellow("dades").getFellow("form").getFellow("nom").getFellow("dada").value;
					vprimerLlinatge = esquema.getFellow("dades").getFellow("form").getFellow("primerLlinatge").getFellow("dada").value;
					vsegonLlinatge = esquema.getFellow("dades").getFellow("form").getFellow("segonLlinatge").getFellow("dada").value;
			
					if (vnom==null || "".equals(vnom) || vprimerLlinatge == null || "".equals(vprimerLlinatge))
					{
						Missatgebox.error(org.zkoss.util.resource.Labels.getLabel("usuaris.NomBuit"),
							org.zkoss.util.resource.Labels.getLabel("usuaris.VerNIF"));
					}
					
					else
					{
						segonLlinatge = (vsegonLlinatge==null ? "":vsegonLlinatge);
					
						try
						{
							String [] resultat = usuariService.verificarIdentitatUsuari(vnom, vprimerLlinatge, vsegonLlinatge, nif);
							if (!"0003".equals(resultat[0]))
								Missatgebox.error(String.format(org.zkoss.util.resource.Labels.getLabel("usuaris.PeticioIncorrecta"), new Object [] {resultat[0],resultat[1]}),org.zkoss.util.resource.Labels.getLabel("usuaris.VerIdentitat"));
						}
						
						catch (Exception e)
						{
							Missatgebox.error(org.zkoss.util.resource.Labels.getLabel("usuaris.ErrorVerIdentitat"),org.zkoss.util.resource.Labels.getLabel("usuaris.VerIdentitat"));
						}
					}
				}
				
				public void verificaNIF (nif) 
				{
					int longitud, dni, resto;
					String nifSinLetra, letraActual, letra_NIF, valor, primerCaracter, ultimCaracter,
						numNIE, numNIEaux;
					Integer dniInt;
					boolean esNIE = false, esNIF =false;
					
					if (!nif.equals("")) 
					{
						nif = nif.toUpperCase();
						longitud = nif.length();
						primerCaracter = nif.substring(0,1);
						ultimCaracter = nif.substring(longitud-1);
							
						// Primer, averiguar si Ã©s un NIF (tÃ© 9 caracters i l'Ãºltim Ã©s una lletra) o Ã©s un NIE (comenÃ§a per X, Y o Z i l'Ãºltim Ã©s una lletra)
						if (primerCaracter.equals("X") || primerCaracter.equals("Y") || primerCaracter.equals("Z"))
						{
							if (!checkIfNumber(ultimCaracter)) {
								esNIE = true;
							} else {
								esNIE = false;
							}
						} else {
							if (!checkIfNumber(ultimCaracter)) {
								if (longitud == 9)
									esNIF = true;
								else
									esNIF = false;
							} else {
								esNIF = false;
							}
						}
						
						nifSinLetra = "";
						letraActual = "";
						numNIEaux = "";
						java.text.DecimalFormat ceros = new java.text.DecimalFormat("0000000");
						java.text.DecimalFormat ceros8 = new java.text.DecimalFormat("00000000");
						
						// Si Ã©s un NIE s'ha d'autocompletar fins 7 carÃ cters amb 0's davant)
						if (esNIE && longitud > 2) {
							numNIEaux = nif.substring(1,longitud-1);
							if (checkIfNumber(numNIEaux)) {
								if (primerCaracter.equals("Y")) {
									numNIE = "1" + ceros.format(Long.parseLong(numNIEaux));
								}
								else if (primerCaracter.equals("Z")) {
									numNIE = "2" + ceros.format(Long.parseLong(numNIEaux));
								}
								else {
									if (numNIEaux.length() < 8) numNIE = ceros.format(Long.parseLong(numNIEaux));
									else	numNIE = ceros8.format(Long.parseLong(numNIEaux));
								}
		
								if (numNIE.length() == 7) {
									letraActual = ultimCaracter;
									nif = primerCaracter + ceros.format(Long.parseLong(numNIEaux)) + letraActual; 
									nifSinLetra = numNIE;
								} else if (numNIEaux.length() == 8)	{
									letraActual = ultimCaracter;
									nif = primerCaracter + ceros8.format(Long.parseLong(numNIEaux)) + letraActual;
									nifSinLetra = numNIE;
								} else {
									esNIE = false;
								}
							} else {
								esNIE = false;
							}
						}
		
						if (esNIF) {
							nifSinLetra =  nif.substring(0,longitud-1);
							letraActual = ultimCaracter;
						}
						
						if (esNIF || esNIE)
						{
							if (checkIfNumber(nifSinLetra))
							{
								dniInt = Integer.valueOf(nifSinLetra);
								dni = dniInt.intValue();
								
								resto = dni % 23;
								
								switch (resto)
								{
									case 0:  letra_NIF="T"; break;
									case 1:  letra_NIF="R"; break;
									case 2:  letra_NIF="W"; break;
									case 3:  letra_NIF="A"; break;
									case 4:  letra_NIF="G"; break;
									case 5:  letra_NIF="M"; break;
									case 6:  letra_NIF="Y"; break;
									case 7:  letra_NIF="F"; break;
									case 8:  letra_NIF="P"; break;
									case 9:  letra_NIF="D"; break;
									case 10:  letra_NIF="X"; break;
									case 11:  letra_NIF="B"; break;
									case 12:  letra_NIF="N"; break;
									case 13:  letra_NIF="J"; break;
									case 14:  letra_NIF="Z"; break;
									case 15:  letra_NIF="S"; break;
									case 16:  letra_NIF="Q"; break;
									case 17:  letra_NIF="V"; break;
									case 18:  letra_NIF="H"; break;
									case 19:  letra_NIF="L"; break;
									case 20:  letra_NIF="C"; break;
									case 21:  letra_NIF="K"; break;
									case 22:  letra_NIF="E"; break;
									
									default:
									{
										letra_NIF = "";
										Missatgebox.info(org.zkoss.util.resource.Labels.getLabel("usuaris.DNIInvalid"),org.zkoss.util.resource.Labels.getLabel("usuaris.VerDNI"));
										break;
									}
								}
								
								if (esNIE) {
									if (primerCaracter.equals("X"))
										valor = primerCaracter + nifSinLetra + letra_NIF;
									else
										valor = primerCaracter + ceros.format(Long.parseLong(numNIEaux)) + letra_NIF;
								} else valor = nifSinLetra + letra_NIF;
								
								txtNif =  form.getFellow("NIF");
								txtNif.setText(nif.toUpperCase());
								
								if (!nif.equals(valor))
								{
									Missatgebox.info(String.format(org.zkoss.util.resource.Labels.getLabel("usuaris.LletraNIF"), new Object [] {nif,letraActual,valor,letra_NIF}),org.zkoss.util.resource.Labels.getLabel("usuaris.VerDNI"));
								}
							}
							
							else
							{
								Missatgebox.info(org.zkoss.util.resource.Labels.getLabel("usuaris.NoDNI"),
									org.zkoss.util.resource.Labels.getLabel("usuaris.VerDNI"));
							}
						}
						
						else
						{
							Missatgebox.info(org.zkoss.util.resource
									.Labels.getLabel("usuaris.NoDNI"),
								org.zkoss.util.resource.Labels.getLabel("usuaris.VerDNI"));
						}
					}
				}
				
				// Functionality to refress the user sessions info
				void refreshUserSessions(data)
				{
					try{
						// Check tab selected
						if (data.getParent().isSelected())
						{
							form.getDataSource().getJXPathContext()
							.getValue(form.getXPath() + "/sessio").refresh();
						}
					}
					catch(Exception e){
						System.out.println(e);
					}
				}
				
				void setDisabledColor ()
				{
					disabledRow.setVisible (! actiu.isChecked());   					
				}
				
			]]>
		</zscript>

		<esquemavertical id="esquema" datamodel="/model" focusCriteri="queryCodi"
			onHideFormulari="showLista()">

			<criteris id="queryWindow" style="min-height=${queryWindowMin}" onOK="search()"
				width="${amplaria}">

				<hbox>
					<input_criteri id="queryCodi" etiqueta="${c:l('usuaris.zul.Codi')}" />
					<input_criteri id="queryDNI" etiqueta="${c:l('usuaris.zul.NIF')}" />
					<input_criteri id="queryGrupPrimari"
						etiqueta="${c:l('usuaris.zul.Grupprimari')}" />
					<imageclic onClick="search()" src="~./img/fletxa_cerca.gif" />
				</hbox>

				<hbox>
					<input_criteri id="queryNom" etiqueta="${c:l('usuaris.zul.Nom')}" />
					<input_criteri id="queryPrimerLlinatge"
						etiqueta="${c:l('usuaris.zul.Primerllinatge')}" />
					<input_criteri id="querySegonLlinatge"
						etiqueta="${c:l('usuaris.zul.Segonllinatge')}" />
				</hbox>

				<hbox>
					<input_etiqueta value="${c:l('usuaris.zul.Altres')}" />
					<imageclic id="img_altres" onClick="showAltres()"
						src="~./img/fletxa.gif" />
				</hbox>

				<separator spacing="2px" />

				<altres_criteris id="queryWindowAltres" visible="false">
					<hbox>
						<input_criteri id="queryGrupSecundari"
							etiqueta="${c:l('usuaris.zul.Grupsecundari')}" />
							
						<input_criteri id="queryNomCurt"
							etiqueta="${c:l('usuaris.zul.Nomcurt')}"  />

						<input_criteri id="queryDominiCorreu"
							etiqueta="${c:l('usuaris.zul.Dominicorreu')}" />
						<!-- <input_criteri id="queryTipusUsuari" etiqueta="Tipus usuari:" mascara="/[I,E,i,e,\null]/: Introdueix I/i o E/e"/>
							<input_criteri id="queryActiu" etiqueta="Actiu:" mascara="/[N,S,n,s,\null]/: Introdueix S/s o N/n"/> -->
					</hbox>

					<hbox>
						<input_criteri id="queryAccountName"
							etiqueta="${c:l('usuaris.zul.Account')}"  />
						<input_criteri id="queryAccountSystem"
							etiqueta="${c:l('accounts.dispatcher')}" />
						<hbox width="250px" widths="100px,*">
							<label sclass="etiqueta"
								value="${c:l('usuaris.zul.Tipususuari')}" />
							<listbox id="queryTipusUsuari" mold="select"  
								dataPath="/model:/tipusUsuari">
								<dataitem bind="@codi">
									<listcelllabel bind="@codi" labelBind="@descripcio" />
								</dataitem>
							</listbox>
						</hbox>
						
					</hbox>
					<hbox>
						<input_criteri id="queryRoleName"
							etiqueta="${c:l('accounts.role')}"  />
						<input_criteri id="queryRoleSystem"
							etiqueta="${c:l('accounts.dispatcher')}" />
						<hbox width="250px" widths="100px,*">
							<label sclass="etiqueta" value="${c:l('usuaris.zul.Actiu')}" />
							<listbox id="queryActiu" mold="select">
								<listitem label=""/>
								<listitem value="S" label="${c:l('usuaris.zul.Actiu.yes')}"/>
								<listitem value="N" label="${c:l('usuaris.zul.Actiu.no')}"/>
							</listbox>
						</hbox>
					</hbox>
					<hbox>
						<hbox width="250px" widths="100px,150px">
							<label sclass="etiqueta" value="${c:l('usuaris.zul.attributeName')}"/>
							<listbox id="queryAttributeName" mold="select" dataPath="/model:/tipusDada" width="85%">
								<dataitem bind="@codi">
									<listcell bind="@label"/>
								</dataitem>
							</listbox>
						</hbox>
						<input_criteri id="queryAttributeValue"
							etiqueta="${c:l('usuaris.zul.attributeValue')}" />
					</hbox>
				</altres_criteris>
				<separator spacing="9px" />
			</criteris>

			<navegador id="lista" width="${amplaria}">
				<toolbar>
					<insertbutton acces="${canCreateUser}"
						listbox="/esquema/lista/listbox" onClick="showDetall()" />
					<commitbutton datamodel="/model" onClick="doCommit(event)"/>
					<undobutton datamodel="/model" listbox="/esquema/lista/listbox" />
					<listexporttoolbarbutton acces="${canQueryUser}"
						listbox="/esquema/lista/listbox" />
				</toolbar>
				<listbox id="listbox" autocommit="false" dataPath="/model:/usuari"
					fixedLayout="true" height="96%" onClick="showDetall()"
					onSelect="select()" rows="${fileres}">
					<listhead>
						<listheader label="${c:l('usuaris.zul.Codi-2')}" sort="auto"
							width="12%" />
						<listheader label="${c:l('usuaris.zul.Nom-2')}" sort="auto"
							width="13%" />
						<listheader label="${c:l('usuaris.zul.Primerllinatge-2')}"
							sort="auto" width="13%" />
						<listheader label="${c:l('usuaris.zul.Segonllinatge-2')}"
							sort="auto" width="13%" />
						<listheader label="${c:l('usuaris.zul.Grup')}" sort="auto"
							width="13%" />
						<listheader label="${c:l('usuaris.zul.NIF-2')}" sort="auto"
							width="12%" />
						<listheader label="${c:l('usuaris.zul.Nomcurt-2')}" sort="auto"
							width="12%" />
						<listheader label="${c:l('usuaris.zul.DominiCorreu')}" sort="auto"
							width="12%" />
					</listhead>
					<listfoot>
						<listfooter span="3">
							<label id="listboxFoot" style="margin-left: 10px;" />
						</listfooter>
					</listfoot>
					<dataitem bind=".">
						<listcell bind="@codi" />
						<listcell bind="@nom" />
						<listcell bind="@primerLlinatge" />
						<listcell bind="@segonLlinatge" />
						<listcell bind="@codiGrupPrimari" />
						<listcell bind="@NIF" />
						<listcell bind="@nomCurt" />
						<listcell bind="@dominiCorreu" />
					</dataitem>
				</listbox>
			</navegador>

			<detalls id="dades" width="${amplaria}">
				<zscript>
				<![CDATA[
					void onChangeTipus (Listbox listbox)
					{
						es.caib.zkib.jxpath.JXPathContext ctx = form.getJXPathContext();
						es.caib.zkib.datamodel.DataModelCollection collection = ctx.getValue("/domini");
						collection.refresh();
					}
					
					void onChangeDades()
					{
						try {
							// <!-- Visualitzar (o no) les opcions dels operadors -->
							form.getFellow("imgPwd").setVisible(canUpdateUserPassword);
							form.getFellow("imgPropaga").setVisible(canRefreshUser);
							form.getFellow("imgTasquesPendents").setVisible(canRefreshUser);
							//form.getFellow("imgConsultaQuota").setVisible(canUpdateCustomUser);
							form.getFellow("imgMazinger").setVisible(canViewMazingerUsuari);
							form.getFellow("imgRegistresAcces").setVisible(canViewRegistresAccesUsuari);
							// <!-- Deshabilitar (o no) el codi d'usuari -->
							ds = form.getDataSource();
							ctx = ds.getJXPathContext();
							registre = ctx.getValue("/");
							form.getFellow("codi").setDisabled(!registre.isNew());
							// <!-- Si el registre Ã©s nou (Afegeix nou), s'inicalitzen uns valors -->
							if (registre.isNew()) {
								inicialitzaValors();
							} else {
								// Seleccionen el tipus d'usuari del listbox
								if (registre instanceof XmlDataNode) {
									Usuari usu = registre.getInstance();
								}
							}
							setDisabledColor();
						} catch (Exception e) {
							//Missatgebox.info ("Error "+e);
							form.getFellow("codi").setDisabled(true);
						}
					}
					
					]]>
				</zscript>
				<form id="form" dataPath="/esquema/lista/listbox:/." width="99%"
					onChangeXPath="onChangeDades()">
					<attribute name="onActualitza">
						if (event.getData() instanceof String) {
							dada = (String) event.getData();
						} else {
							dada = (String) (event.getData()[0]);
						}
						camp = (DataTextbox) form.getFellow(idActualitza).getFellow("dada");
						camp.setValue(dada);
					</attribute>

					<tabbox id="panels" width="${amplaria2}">
						<tabs>
							<tab label="${c:l('usuaris.zul.Informaciabasica')}" />
							<tab label="${c:l('usuaris.zul.Accounts')}" />
							<tab label="${c:l('usuaris.zul.Rols')}" />
							<tab label="${c:l('usuaris.zul.RolsHeretats')}" />
							<tab label="${c:l('usuaris.zul.Impressora')}" />
							<tab label="${c:l('usuaris.zul.Sessions')}" />
							<tab
								label="${c:l('usuaris.zul.Processosdusuari')}" />
						</tabs>

						<tabpanels>

							<tabpanel id="basica">
								<hbox width="100%" widths="*,30px">
									<vbox width="100%">
										<hbox width="100%" widths="50%,1px,*">
											<grid width="99%">
												<rows>
													<row>
														<input_etiqueta
															value="${c:l('usuaris.zul.Codi-2')}" />

														<hbox width="100%">
															<textbox id="codi" bind="@codi" maxlength="150"
																sclass="textbox" constraint="no empty" width="100%">
																<attribute name="onChange">
																	if (codi.value.equals("?")) {
																		seguentCodiUsuari();
																	}
																</attribute>
															</textbox>

															<label value="*" />
														</hbox>
													</row>
													<row>
														<input_etiqueta
															value="${c:l('usuaris.zul.Nom-2')}" />

														<hbox width="100%">
															<input_dada bind="@nom" id="nom" mascara="no empty"
																lectura="${!canModifyUser}" maxlength="50"
																multiline_custom="false" width_custom="100%" />

															<label value="*" />
														</hbox>
													</row>
													<row>
														<input_etiqueta style="white-space:nowrap;"
															value="${c:l('usuaris.zul.Primerllinatge-2')}" />

														<hbox width="100%">
															<input_dada id="primerLlinatge" mascara="no empty"
																bind="@primerLlinatge" lectura="${!canModifyUser}"
																maxlength="50" width_custom="100%" />

															<label value="*" />
														</hbox>
													</row>
													<row>
														<input_etiqueta
															value="${c:l('usuaris.zul.Segonllinatge-2')}" />
														<input_dada bind="@segonLlinatge" id="segonLlinatge"
															lectura="${!canModifyUser}" maxlength="50"
															width_custom="97%" />
													</row>
													<row>
														<input_etiqueta
															value="${c:l('usuaris.zul.Nomcurt-2')}" />
														<hbox width="97%" widths="*,10px,100px,5px,17px">
															<textbox bind="@nomCurt" id="nomCurt"
																maxlength="50" readonly="${!canModifyUser}"
																sclass="textbox" width="100%">
																<attribute name="onChange">
																	self.value = self.value.toLowerCase()
																		.replaceAll(" ", "");//llevem espais
																</attribute>
															</textbox>
															<input_etiqueta value="${c:l('usuaris.zul.@')}" />
															<input_dada bind="@dominiCorreu" id="dominiCorreu"
																lectura="${!canModifyUser}"
																width_custom="100%" />
															<separator width="5px" />
															<imageclic align="right"
																src="~./img/servidorCorreu.gif">
																<attribute name="onClick">
																	if (canModifyUser) {
																		idActualitza = "dominiCorreu";
																		desktop.getPage("dominisCorreuLlista")
																			.setAttribute("llistaObsolets", false);
																		Events.postEvent("onInicia",
																			desktop.getPage("dominisCorreuLlista")
																				.getFellow("esquemaLlista"), form);
																	}
																</attribute>
															</imageclic>
														</hbox>
													</row>
													<row>
														<input_etiqueta
															value="${c:l('usuaris.zul.NIF-2')}" />
														<hbox width="97%" widths="*,5px,17px">
															<textbox bind="@NIF" id="NIF"
																readonly="${!canModifyUser}"
																sclass="textbox" width="100%">
																<attribute name="onChange">
																	verificaNIF(self.value);
																</attribute>
															</textbox>
															<separator width="5px" />
															<imageclic src="~./img/help16.gif">
																<attribute name="onClick">
																	verificaNIF(form.getFellow("NIF").value);
																</attribute>
															</imageclic>
														</hbox>
													</row>
												</rows>
											</grid>
											<separator width="100%" />
											<grid width="99%">
												<rows>
													<row>
														<input_etiqueta
															value="${c:l('usuaris.zul.Tipus')}" />

														<hbox widths="*,0">
														<listbox id="lbtipusUsuari"
															dataPath="/model:/tipusUsuari" mold="select"
															width="202px" bind="@tipusUsuari"
															onSelect="onChangeTipus(self)"
															disabled="${!canModifyUser}">
																<dataitem bind="@codi">
																	<listcelllabel bind="@codi"
																		labelBind="@descripcio" />
																</dataitem>
															</listbox>
															<label value="*"/>
														</hbox>
													</row>
													<row>
														<input_etiqueta
															value="${c:l('usuaris.zul.Grupprimari-2')}" />

														<div style="display: inline; ">
															<input_dada id="codiGrupPrimari"
																bind="@codiGrupPrimari" mascara="no empty"
																lectura="${!canModifyUser}" width_custom="200px" 
																tooltip="tooltipGrup" style="display: inline-block; "/>
															<label value="*" style="display: inline-block; padding-left: 4px; padding-right: 4px;"/>
															<imageclic src="~./img/grup.gif" style="display: inline-block; ">
																<attribute name="onClick">
																	if (canModifyUser)
																	{
																		idActualitza = "codiGrupPrimari";
																		desktop.getPage("grupsLlista")
																			.setAttribute("tipus", "");
																		desktop.getPage("grupsLlista")
																			.setAttribute("llistaObsolets", false);
																		Events.postEvent("onInicia",
																				desktop.getPage("grupsLlista")
																					.getFellow("esquemaLlista"), form);
																	}
																</attribute>
															</imageclic>
															<label bind="primaryGroup[1]/descripcio" style="display: inline; padding-left: 4px;"/>
														</div>
													</row>
													<row>
														<input_etiqueta
															value="${c:l('usuaris.zul.Servidorhome')}" />

														<hbox>
															<input_dada id="servidorHome" bind="@servidorHome"
																lectura="${!canModifyUser}" width_custom="200px"
																mascara="no empty" />
															<label value="*" />
															<separator width="0px" />
															<imageclic src="~./img/servidorHome.gif">
																<attribute name="onClick">
																	<![CDATA[
																		if (canModifyUser)
																		{
																			idActualitza = "servidorHome";
																			desktop.getPage("maquinesLlistaUsuaris")
																				.setAttribute("llista", "servidorHome");
																			
																			homeServer = servidorHome
																				.getFellow("dada").value;
																				
																			homeServer = (homeServer.equals("null") ?
																				null : homeServer);
																			
																			desktop.getPage("maquinesLlistaUsuaris")
																				.setAttribute("codiCerca", homeServer);
																			Events.postEvent("onInicia",
																				desktop.getPage("maquinesLlistaUsuaris")
																					.getFellow("esquemaLlista"), form);
																		}
																	]]>
																</attribute>
															</imageclic>
														</hbox>
													</row>
													<row>
														<input_etiqueta
															value="${c:l('usuaris.zul.ServidorCorreu')}" />

														<hbox>
															<input_dada id="servidorCorreu" mascara="no empty"
																bind="@servidorCorreu" width_custom="200px"
																lectura="${!canModifyUser}" />
															<label value="*" />
															<separator width="0px" />
															<imageclic src="~./img/servidorCorreu.gif">
																<attribute name="onClick">
																	<![CDATA[
																		if (canModifyUser)
																		{
																			idActualitza = "servidorCorreu";
																			desktop.getPage("maquinesLlistaUsuaris")
																				.setAttribute("llista",
																						"servidorCorreu");
																			
																			mailServer = servidorCorreu
																					.getFellow("dada").value;
																					
																			mailServer = (mailServer.equals("null") ?
																				null : mailServer);
																			
																			desktop.getPage("maquinesLlistaUsuaris")
																				.setAttribute("codiCerca", mailServer);
																			Events.postEvent("onInicia",
																				desktop.getPage("maquinesLlistaUsuaris")
																					.getFellow("esquemaLlista"), form);
																		}
																	]]>
																</attribute>
															</imageclic>
														</hbox>
													</row>
													<row>
														<input_etiqueta
															value="${c:l('usuaris.zul.ServidorPerfil')}" />

														<hbox>
															<input_dada id="servidorPerfil" mascara="no empty"
																bind="@servidorPerfil" 
																lectura="${!canModifyUser}"
																width_custom="200px" />
															<label value="*" />
															<separator width="0px" />
															<imageclic src="~./img/servidorPerfils.gif">
																<attribute name="onClick">
																	<![CDATA[
																		if (canModifyUser) {
																			idActualitza = "servidorPerfil";
																			desktop.getPage("maquinesLlistaUsuaris")
																				.setAttribute("llista",
																						"servidorPerfil");
																			
																			profileServer = servidorPerfil
																				.getFellow("dada").value;
																				
																			profileServer = (profileServer
																				.equals("null") ? null : profileServer);
																			
																			desktop.getPage("maquinesLlistaUsuaris")
																				.setAttribute("codiCerca",
																					profileServer);
																			Events.postEvent("onInicia",
																				desktop.getPage("maquinesLlistaUsuaris")
																					.getFellow("esquemaLlista"), form);
																		}
																	]]>
																</attribute>
															</imageclic>
														</hbox>
													</row>
													<row  >
														<input_etiqueta
															value="${c:l('usuaris.zul.Actiu-2')}" />
														<div>
															<checkbox id="actiu" bind="@actiu"
																disabled="${!canModifyUser}" onCheck='setDisabledColor()' />
															<label value="${c:l('accounts.Disabled')}" style="background-color: red; color:white;" visible="false" id="disabledRow"/>
														</div>
													</row>
													<row>
														<input_etiqueta
															value="${c:l('usuaris.zul.Multisessia')}" />
														<checkbox id="multisessio" bind="@multiSessio"
															disabled="${!canModifyUser}" onCheck="" />
													</row>
												</rows>
											</grid>
										</hbox>
										<separator height="1px" />
										<hbox width="100%">
											<grid width="99.5%">
												<rows>
													<row>
														<input_etiqueta
															value="${c:l('usuaris.zul.Aliesdecorreu')}" />
														<textbox id="aliesCorreu" bind="@aliesCorreu"
															readonly="${!canModifyUser}"
															sclass="textbox" width="${ample-250}px">
															<attribute name="onChange">
																self.value = self.value.toLowerCase();
															</attribute>
														</textbox>
													</row>
													<row>
														<input_etiqueta
															value="${c:l('usuaris.zul.Telafon')}" />
														<input_dada id="telefon" bind="@telefon" 
															lectura="${!canUpdateCustomUser}"
															width_custom="${ample-250}px" />
													</row>
												</rows>
											</grid>
										</hbox>
									</vbox>
									<vbox align="center" width="100%"
										style="border:1px solid #7F9196;padding:2px;background-color:#EEEEEE">
										<imageclic id="imgPwd" src="~./img/pwd.gif" tooltip="pwd">
											<attribute name="onClick">
												<![CDATA[
													llista = (DataListbox) esquema.getFellow("lista").getFellow("listbox");
													if (llista.isCommitPending()) {
														Missatgebox.avis(org.zkoss.util.resource.Labels.getLabel("usuaris.ConfirmarPerCanviarPWD"));
														return;
													}
													if (!form.getFellow("codi").value.equals(""))
													{
														// Comprovem que el nif estiga complert
//														String nifusu = form.getFellow("NIF").value;
														//												if (nifusu==null || "".equals(nifusu.trim())) {
														//													Missatgebox.error(org.zkoss.util.resource.Labels.getLabel("usuaris.NoPermes"),org.zkoss.util.resource.Labels.getLabel("usuaris.Error2"));
														//													return;
														//												}
														
														Missatgebox.confirmaOK_CANCEL(org.zkoss.util
																.resource.Labels.getLabel("usuaris.SegurCanviar"),
															org.zkoss.util.resource.Labels
																.getLabel("usuaris.CanviarPwd"),
															new EventListener()
															{
																public void onEvent(Event evt)
																{
																	if ("onOK".equals(evt.getName()))
																	{
																		if (form.getFellow("actiu").isChecked())
																		{
																			//Commit model + refresh accounts
																			model.commit();
																			form.getJXPathContext()
																				.getValue("/domini").refresh();
																			changePasswordDefaultDomain();
																		}
																		
																		else
																		{
																			Missatgebox.info(org.zkoss.util
																					.resource.Labels
																					.getLabel("usuaris.NoActiu"),
																				org.zkoss.util.resource.Labels
																					.getLabel("usuaris.CanviarPwd"));
																		}
																	}
																}
															}
														);
													}
													
													else
													{
														Missatgebox.info(org.zkoss.util.resource.Labels
																	.getLabel("usuaris.SelUsuari"),
																org.zkoss.util.resource.Labels
																	.getLabel("usuaris.CanviarPwd"));
													}
												]]>
											</attribute>
										</imageclic>
										<imageclic id="imgPropaga" src="~./img/propaga.gif"
											tooltip="propaga">
											<attribute name="onClick">
												if (!form.getFellow("codi").value.equals("")) {
													Missatgebox.confirmaOK_CANCEL(org.zkoss.util.resource.Labels
															.getLabel("usuaris.SegurPropagarCanvi"),
															org.zkoss.util.resource.Labels
																	.getLabel("usuaris.PropagarCanvi"),
															new EventListener() {
																public void onEvent(Event evt) {
																	if ("onOK".equals(evt.getName())) {
																		propagaCanvis();
																	}
																}
															});
												} else {
													Missatgebox.info(org.zkoss.util.resource.Labels
															.getLabel("usuaris.SelUsuari"), org.zkoss.util.resource.Labels
															.getLabel("usuaris.PropagarCanvi"));
												}
											</attribute>
										</imageclic>
										<imageclic id="imgTasquesPendents"
											src="~./img/exclamacio.gif" tooltip="tasquesPendents"
											visible="false">
											<attribute name="onClick">
												if (!form.getFellow("codi").value.equals("")) {
													llistaTasquesPendents();
												} else {
													Missatgebox.info(
															org.zkoss.util.resource.Labels.getLabel("usuaris.SelUsuari"),
															org.zkoss.util.resource.Labels.getLabel("usuaris.Tasques"));
												}
											</attribute>
										</imageclic>
										<!--  <imageclic id="imgConsultaQuota" src="~./img/quota.gif" tooltip="consultaQuota" visible="false"> 
											<attribute name="onClick">
											if (!form.getFellow("codi").value.equals("")) {
											consultaQuota(form.getFellow("codi").value);
											} else {
											Missatgebox.info("Ha de seleccionar un usuari.","Consulta quota");
											}
											</attribute>
											</imageclic>-->
										<imageclic
											id="imgRegistresAcces" src="~./img/aplicacio.gif"
											tooltip="registresAcces">
											<attribute name="onClick">
												if (!form.getFellow("codi").value.equals("")) {
													desktop.getPage("registresAccesUsuari").setAttribute("usuari",
															form.getFellow("codi").getValue());
													Events.postEvent("onInicia", desktop.getPage("registresAccesUsuari")
															.getFellow("esquemaLlista"), form);
												} else {
													Missatgebox.info(
															org.zkoss.util.resource.Labels.getLabel("usuaris.SelUsuari"),
															org.zkoss.util.resource.Labels.getLabel("usuaris.RegAcces"));
												}
											</attribute>
										</imageclic>
										<imageclic id="imgMazinger" src="img/mazinger.gif"
											tooltip="mazinger">
											<attribute name="onClick">
												if (!form.getFellow("codi").value.equals("")) {
													desktop.getPage("mazingerconfig").setAttribute("usuari",
															form.getFellow("codi").getValue());
													Events.postEvent("onInicia", desktop.getPage("mazingerconfig")
															.getFellow("esquemaLlista"), form);
												} else {
													Missatgebox.info(org.zkoss.util.resource.Labels
															.getLabel("usuaris.SelUsuari"), org.zkoss.util.resource.Labels
															.getLabel("usuaris.ConfiguracioMazinger"));
												}
											</attribute>
										</imageclic>
										<imageclic id="imgAuditausu" src="img/auditoria.png"
											tooltip="auditausu" visible="${canQueryCustomAudit}">
											<attribute name="onClick">
												<![CDATA[
													if (!form.getFellow("codi").value.equals("")) {
														try {
															String codiUsu = form.getFellow("codi").value;
															java.util.Calendar hui = java.util.Calendar.getInstance();
															hui.add(java.util.Calendar.MONTH, 0);
															hui.add(java.util.Calendar.DATE, -1);
															java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat(
																	"dd/MM/yyyy");
															String data = dateFormat.format(hui.getTime());
															java.util.Calendar hui2 = java.util.Calendar.getInstance();
															java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat(
																	"dd/MM/yyyy");
															String data2 = dateFormat.format(hui2.getTime());
															es.caib.zkib.zkiblaf.Application
																	.call("/auditoria.zul?codiUsuariAuditat=" + codiUsu
																			+ "&dataIniciAuditoria=" + data
																			+ "&dataFiAuditoria=" + data2);
														} catch (Throwable th) {
															Missatgebox.error(th.getMessage());
														}
													} else {
														Missatgebox.info(org.zkoss.util.resource.Labels
																.getLabel("usuaris.SelUsuari"), org.zkoss.util.resource.Labels
																.getLabel("usuaris.ApliAccesibles"));
													}
												]]>
											</attribute>
										</imageclic>
										<imageclic id="imgWF"
											src="img/nouwf.png" tooltip="nouwf">
											<attribute name="onClick">
	if (!form.getFellow("codi").value.equals("")) {
		desktop.getPage("usuNouProces").setAttribute("codiUsuari",
				form.getFellow("codi").getValue());
		Events.postEvent("onInicia",
				desktop.getPage("usuNouProces").getFellow("esquemaGeneric"),
				form);
	} else {
		Missatgebox.info(org.zkoss.util.resource.Labels
				.getLabel("usuaris.SelUsuari"), org.zkoss.util.resource.Labels
				.getLabel("usuaris.IniciarProces"));
	}
</attribute>
										</imageclic>
										<popup id="pwd">
											<label
												value="${c:l('usuaris.zul.Canviacontrasenya')}" />
										</popup>
										<popup id="propaga">
											<label
												value="${c:l('usuaris.zul.Propagaelscanvis')}" />
										</popup>
										<popup id="tasquesPendents">
											<label
												value="${c:l('usuaris.zul.Llistalestasquespend')}" />
										</popup>
										<!--  	<popup id="consultaQuota">
											<label value="${c:l('usuaris.zul.Consultaquota')}"/>
											</popup>	-->
										<popup id="registresAcces">
											<label
												value="${c:l('usuaris.zul.Registresdaccas')}" />
										</popup>
										<popup id="mazinger">
											<label
												value="${c:l('usuaris.zul.ConfiguraciadeMazing')}" />
										</popup>
										<popup id="auditausu">
											<label
												value="${c:l('usuaris.zul.Auditoriadusuari')}" />
										</popup>
										<popup id="nouwf">
											<label
												value="${c:l('usuaris.zul.Crearprocasdelusuar')}" />
										</popup>
									</vbox>
								</hbox>

								<separator spacing="10px" />

								<hbox width="100%"
									widths="40%,1px,40%,1px,*">
								<vbox width="99%">
									<grid dataPath="/esquema/lista/listbox:/dada"
										if="${canUpdateUserMetadata}" width="98%">
										<columns>
											<column label="${c:l('usuaris.zul.Dadesaddicionals')}"></column>
											<column></column>
										</columns>
										<datarow>
											<input_etiqueta bind="@dataLabel" width_custom="250px"
												value="${c:l('usuaris.zul.@codiDada')}"/>
												<div use="com.soffid.web.users.additionalData.InputField" onChange=""/>
										</datarow>
									</grid>
									<grid
										dataPath="/esquema/lista/listbox:/dada"
										if="${!canUpdateUserMetadata}" width="98%">
										<columns>
											<column label="${c:l('usuaris.zul.Dadesaddicionals')}"></column>
											<column></column>
										</columns>
										<datarow>
											<input_etiqueta
												bind="@dataLabel" value="${c:l('usuaris.zul.@codiDada')}"
												width_custom="250px" />
												<div use="com.soffid.web.users.additionalData.InputField"/>
										</datarow>
									</grid>
								</vbox>
									<separator width="1px" />
									<vbox width="99%">
										<grid
											dataPath="/esquema/lista/listbox:/grup" fixedLayout="true"
											height="130px" id="gridGrups" width="99%">
											<attribute name="onActualitza">
	dada = (String) (event.getData()[0]);
	modelProxy = (es.caib.zkib.binder.list.FullModelProxy) gridGrups.getModel();
	ds = gridGrups.getDataSource();
	ctx = ds.getJXPathContext();
	xpath = gridGrups.getXPath() + "[@codiGrup = '" + dada + "']";
	boolean jaExisteix = true;
	try {
		valor = ctx.getValue(xpath);
	} catch (Exception e) {
		jaExisteix = false;
	}
	if (jaExisteix) {
		Missatgebox.info(
				String.format(org.zkoss.util.resource.Labels
						.getLabel("usuaris.GrupAssignat"),
						new Object[] { dada }), org.zkoss.util.resource.Labels
						.getLabel("usuaris.ErrorGrup"));
	} else {
		position = modelProxy.newInstance();
		ds = gridGrups.getDataSource();
		ctx = ds.getJXPathContext();
		xpath = gridGrups.getXPath() + modelProxy.getBind(position);
		pointer = ctx.createPath(xpath);
		ctx2 = ctx.getRelativeContext(pointer);
		campCodiUsuari = (DataTextbox) form.getFellow("codi");
		codiUsuari = campCodiUsuari.getValue();
		ctx2.setValue("@codiGrup", dada);
		ctx2.setValue("@codiUsuari", codiUsuari);
		ctx2.setValue("@descripcioGrup", (String) (event.getData()[1]));
		ctx2.setValue("@nomComplet", nomUsuari());
		pointer.invalidate();
	}
</attribute>
											<columns>
												<column
													label="${c:l('usuaris.zul.Grup')}" width="*" />
												<column
													label="${c:l('usuaris.zul.')}"
													visible="${canDeleteUserGroup}" width="30px" />
											</columns>
											<datarow>
												<label bind="@codiGrup"
													tooltip="grupsTooltip" />
												<imageclic align="right"
													src="~./img/list-remove.gif">
													<attribute name="onClick">
	if (canDeleteUserGroup) {
		dataRow = self.getParent();
		xpath = dataRow.getXPath();
		dataSource = gridGrups.getDataSource();
		context = dataSource.getJXPathContext();
		dada = context.getValue(xpath + "/@codiGrup");
		Missatgebox.confirmaOK_CANCEL(String.format(
				org.zkoss.util.resource.Labels
						.getLabel("usuaris.SegurEsborrar"),
				new Object[] { dada }), org.zkoss.util.resource.Labels
				.getLabel("usuaris.Esborra"), new EventListener() {
			public void onEvent(Event evt) {
				if ("onOK".equals(evt.getName())) {
					context.removePath(xpath);
				}
			}
		});
	}
</attribute>
												</imageclic>
											</datarow>
										</grid>

										<button
											image="~./img/list-add.gif"
											label="${c:l('usuaris.zul.Afegeixnou')}"
											visible="${canCreateUserGroup}">
											<attribute name="onClick">
	desktop.getPage("grupsLlista").setAttribute("tipus", "");
	desktop.getPage("grupsLlista").setAttribute("llistaObsolets", false);
	Events.postEvent("onInicia",
			desktop.getPage("grupsLlista").getFellow("esquemaLlista"),
			gridGrups);
</attribute>
										</button>
										<popup id="grupsTooltip"
											width="200px">
											<attribute name="onOpen">
	if (event.getReference() instanceof DataLabel) {
		dataLab = event.getReference();
		dataRow = dataLab.getParent();
		xpath = dataRow.getXPath();
		dataSource = gridGrups.getDataSource();
		context = dataSource.getJXPathContext();
		value = context.getValue(xpath + "/@descripcioGrup");
		grupsTooltipLabel.value = value;
	}
</attribute>
											<label
												id="grupsTooltipLabel" value="" />
										</popup>
									</vbox>
									<separator width="1px" />
									<vbox width="99%">
										<input_etiqueta
											value="${c:l('usuaris.zul.Observacions')}" />
										<input_dada bind="@comentari"
											lectura="${!canModifyUser and !canUpdateCustomUser}"
											maxlength="1024" rows_custom="8" width_custom="95%" />
									</vbox>
								</hbox>

								<separator spacing="10px" />

								<hbox width="99%" widths="50%,50%">
									<grid sclass="grid sensescroll">
										<rows>
											<row>
												<input_etiqueta
													value="${c:l('usuaris.zul.Creatper')}" />
												<hbox>
													<input_dada
														bind="@usuariCreacio" id="usuariCreacio" lectura="true" />
													<datebox
														bind="@dataCreacioUsuari" disabled="true"
														format="${c:l('usuaris.zul.dateFormat')}" id="dataCreacio" sclass="dateboxread" />
												</hbox>
											</row>
											<row>
												<input_etiqueta
													value="${c:l('usuaris.zul.Modificatper')}" />
												<hbox>
													<input_dada
														bind="@usuariDarreraModificacio"
														id="usuariDarreraModificacio" lectura="true" />
													<datebox
														bind="@dataDarreraModificacioUsuari" disabled="true"
														format="${c:l('usuaris.zul.dateFormat')}" id="dataDarreraModificacio"
														sclass="dateboxread"/>
												</hbox>
											</row>
										</rows>
									</grid>
									<grid sclass="grid sensescroll">
										<rows>
											<row>
												<hbox width="100%"
													widths="50%,50%">
													<vbox
														width="100%">
														<hbox
															width="100%" widths="50%,50%">
															<input_etiqueta
																value="${c:l('usuaris.zul.DarreraccasalSEU')}" />
															<datebox
																bind="@usuariSEU/dataDarrerLogin" buttonVisible="false"
																disabled="true" format="${c:l('usuaris.zul.dateFormat')}"
																sclass="dateboxread" width="120px" />
														</hbox>
														<hbox
															width="100%" widths="50%,50%">
															<input_etiqueta
																value="${c:l('usuaris.zul.IPdeconnexia')}" />
															<input_dada
																bind="@usuariSEU/lastIP" lectura="true"
																width_custom="120px" />
														</hbox>
													</vbox>
													<hbox width="50%"
														widths="50%,50%">
														<input_etiqueta
															value="${c:l('usuaris.zul.Versia')}" />
														<input_dada
															bind="@usuariSEU/@versio" lectura="true" />
													</hbox>
												</hbox>
											</row>
										</rows>
									</grid>
								</hbox>
							</tabpanel>
							<tabpanel id="accounts" onCreatedAccout="accountCreated()">
								<zscript>
									<![CDATA[
										void comprovaCanviaPassword(Component origen) {
											if (!form.getFellow("codi").value.equals("")) {
												treeitem = origen.parent.parent;
												binder = treeitem.getAttribute(
														es.caib.zkib.binder.BindContext.BINDCTX_ATTRIBUTE,
														Component.COMPONENT_SCOPE);
												String xpath = binder.getXPath();
												ds = binder.getDataSource();
												ctx = ds.getJXPathContext();
												
												tipus = ctx.getValue(xpath + "/@tipus");
												xpath2 = xpath.substring(0, xpath.lastIndexOf("/")) + "/@codi";
												dominiContrasenyes = ctx.getValue(xpath2);
									
												if (tipus.equals ("M") )
													changePassword(dominiContrasenyes);
												else
													enterPassword (ds, xpath);
											} else {
												Missatgebox.info(org.zkoss.util.resource.Labels
														.getLabel("usuaris.SelUsuari"),
														org.zkoss.util.resource.Labels
																.getLabel("usuaris.CanviarPwd2"));
											}
										}
										void renameAccount() {
											es.caib.zkib.binder.BindContext ctx = es.caib.zkib.datasource.XPathUtils
													.getComponentContext(self);
											Page p = desktop.getPage("renameAccount");
											p.setAttribute("dataPath", ctx.getXPath());
											p.setAttribute("dataSource", ctx.getDataSource());
											Events.postEvent("onInicia", p.getFellow("changeName"), accounts);
										}
										void removeAccount() {
											es.caib.zkib.binder.BindContext ctx = es.caib.zkib.datasource.XPathUtils
													.getComponentContext(self);
											es.caib.zkib.datasource.XPathUtils.removePath(ctx.getDataSource(),
													ctx.getXPath());
										}
										void createAccount() {
											es.caib.zkib.binder.BindContext ctx = es.caib.zkib.datasource.XPathUtils
													.getComponentContext(accounts);
											Page p = desktop.getPage("createAccount");
											p.setAttribute("dataPath", ctx.getXPath());
											p.setAttribute("dataSource", ctx.getDataSource());
											Events.postEvent("onInicia", p.getFellow("createAccount"), accounts);
										}
										void accountCreated() {
											x = treebox.dataPath;
											treebox.dataPath = null;
											treebox.dataPath = x;
										}
										void onDisplayAccount(Component r) {
											es.caib.zkib.binder.BindContext ctx = es.caib.zkib.datasource.XPathUtils
													.getComponentContext(r);
											try {
												instance = es.caib.zkib.datasource.XPathUtils.getValue(ctx, ".").instance;
												if (instance instanceof Account) {
													disabled = es.caib.zkib.datasource.XPathUtils.getValue(ctx,
															"/@disabled");
													if (disabled != null && disabled) {
														it = r.getChildren().iterator();
														while (it.hasNext()) {
															Component c = it.next();
															if (c instanceof HtmlBasedComponent) {
																c.setStyle("text-decoration:line-through;");
															}
														}
													}
													checkIsUpdatePending(r.treerow);
												}
											} catch (Throwable e) {}
										}
										void checkIsUpdatePending(Component item) {
											try{
												es.caib.zkib.binder.BindContext ctx = XPathUtils
													.getComponentContext(item);
												es.caib.zkib.datamodel.DataNode dn = XPathUtils.getValue(ctx, ".");
												if (dn != null) {
													Account acc = dn.getInstance();
													if (acc != null && acc.getId() != null)
													{
														es.caib.seycon.ng.servei.AccountService accountService = es.caib.seycon.ng.ServiceLocator
															.instance().getAccountService();
													
														Treerow treeitem = item;
														Image img = treeitem.getChildren().get(1).getChildren().get(0)
																.getChildren().get(2);
														img.setVisible(accountService.isUpdatePending(acc));
														
														es.caib.zkib.datasource.DataSource ds = ctx.getDataSource();
														
														String prefix = ctx.getXPath();
														ds.sendEvent(new es.caib.zkib.events.XPathRerunEvent(ds,
																XPathUtils.concat(prefix, "/@lastUpdated")));
														ds.sendEvent(new es.caib.zkib.events.XPathRerunEvent(ds,
																XPathUtils.concat(prefix, "/@lastPasswordSet")));
														ds.sendEvent(new es.caib.zkib.events.XPathRerunEvent(ds,
																XPathUtils.concat(prefix, "/@passwordExpiration")));
													}
												}
											}catch(Exception e){
												System.out.println(e);
											}
										}
									]]>
								</zscript>

								<vbox width="100%">
									<tree id="treebox" autocommit="false"
										dataPath="/esquema/lista/listbox:/" fixedLayout="true"
										onSelect="" rows="${fileres}" width="100%"
										onNewRow="onDisplayAccount(event.data)">
										<attribute name="onRecarrega">
											treebox = esquema.getFellow("dades").getFellow("treebox");
											model.getJXPathContext().getValue("/usuari/domini").refresh();
											treebox.dataPath = "/esquema/lista/listbox:/";
										</attribute>
										<treecols>
											<treecol
												label="${c:l('usuaris.zul.Dominidecontrasenyes')}" />
											<treecol label="${c:l('usuaris.zul.Account')}" />
											<treecol label="${c:l('usuaris.zul.DataUpdate')}" />
											<treecol label="${c:l('usuaris.zul.DataAssignacia')}"
												width="110px" />
											<treecol label="${c:l('usuaris.zul.DataCaducitat')}"
												width="110px" />
											<treecol label="${c:l('usuaris.zul.')}" width="60px" />
										</treecols>
										<treeitemfinder bind="." path="/domini/politica">
											<treerow>
												<treecell bind="../@codi" />
												<treecell />
												<treecell />
												<treecell />
												<treecell />
												<treecell>
<!-- 													<divVisible bind="@tipus" valorVisible="M">
 -->
														<imageclic src="~./img/pwd.gif" tooltip="pwd">
															<attribute name="onClick">
																comprovaCanviaPassword(self.parent);
															</attribute>
														</imageclic>
<!-- 													</divVisible>
 -->
												</treecell>
											</treerow>
										</treeitemfinder>
										<treeitemfinder bind="." path="/account">
											<treerow>
												<treecell bind="@dispatcher" />
												<treecell>
													<hbox widths="*, 3px, 16px">
														<label bind="@name" width="90%" />
														<separator></separator>
														<image src="~./img/exclamacio.gif" visible="false"
															width="16px" height="16px">
														</image>
													</hbox>
												</treecell>
												<treecell>
													<datebox bind="@lastUpdated" buttonVisible="false"
														disabled="true" format="${c:l('usuaris.zul.dateFormat')}"
														sclass="dateboxreadnoborder" width="100%" />
												</treecell>
												<treecelldestacat destacatBoolea="@caducada">
													<datebox bind="@lastPasswordSet" buttonVisible="false"
														disabled="true" format="${c:l('usuaris.zul.dateFormat')}"
														sclass="dateboxreadnoborder" width="100%" />
												</treecelldestacat>
												<treecelldestacat
													destacatBoolea="@caducada">
													<datebox bind="@passwordExpiration"
														buttonVisible="false" disabled="true"
														format="${c:l('usuaris.zul.dateFormat')}"
														sclass="dateboxreadnoborder" width="100%" />
												</treecelldestacat>
												<treecell>
													<imageclic src="~./img/vincula.gif"
														onClick="if (canCreateUserRole) renameAccount()" />
													<timer delay="10000" repeats="true"
														onTimer="checkIsUpdatePending(self.parent.parent);" />
													<imageclic align="right" src="~./img/list-remove.gif"
														onClick="if (canDeleteUserRole) removeAccount()" />
												</treecell>
											</treerow>
										</treeitemfinder>
									</tree>
									<hbox width="100%">
										<button image="~./img/list-add.gif"
											label="${c:l('usuaris.zul.Afegeixnou')}"
											visible="${canCreateUserRole}" onClick="createAccount()">
										</button>
									</hbox>
								</vbox>
							</tabpanel>

							<tabpanel id="rols">
								<vbox width="100%">
									<listbox
										dataPath="/esquema/lista/listbox:/rol" fixedLayout="true"
										height="400px" id="gridRols" sclass="likeagrid"
										onActualitza="actualitza(event)"
										onNewRow="newRolRow()">
										<zscript>
<![CDATA[
void actualitza (event) {
										dada = (String)(event.getData()[0]);
										modelProxy = (es.caib.zkib.binder.list.FullModelProxy) gridRols.getModel();
	
										ds = gridRols.getDataSource(); 
										ctx =  ds.getJXPathContext();
										if (event.getData()[3] != null) {
											valorDomini = (event.getData()[3])[0];
											bbdd = (String)(event.getData()[5]);
											xpath = gridRols.getXPath() + 
												"[@nomRol = '" + dada + "' and @baseDeDades = '" + bbdd + "' and valorDomini/@valor = '" + valorDomini + "']";
										} else {
											valorDomini = "";
											bbdd = (String)(event.getData()[5]);
											xpath = gridRols.getXPath() + 
												"[@nomRol = '" + dada + "' and @baseDeDades = '" + bbdd + "']";
										}

										// Test if more than one account is applicable
										list = new LinkedList();
										dispatcher = event.getData()[5];
										for (it = form.getJXPathContext().iterate("/domini/politica/account[@dispatcher='"+dispatcher+"']");
											it.hasNext();)
										{
											list.add(it.next());
										}

										boolean jaExisteix = false;
										boolean hasAccount = ! list.isEmpty();
										boolean multipleAccounts = list.size() > 1;
										try{
											for (it = ctx.iterate(xpath); it.hasNext();)
											{
											
												grant = it.next();
												if (grant{"accountName"} == null)
													jaExisteix = true;
												else
												{
													for (it2 = list.iterator(); it2.hasNext();)
													{
														account = it2.next();
														if (account{"name"}.equals (grant{"accountName"}))
														{
															it2.remove();
														}
													}
												}
											}
											if (list.isEmpty() && hasAccount)
												jaExisteix = true;
												
										} catch(Exception e){
											alert(e);
											jaExisteix = false;
										}
										// Verificamos si el rol es SC_REPONSABLE que no estÃ¡ asignado ya a la misma aplicaciÃ³n
										if (!jaExisteix && "SC_RESPONSABLE".equals( event.getData()[0]) ) {
											javax.naming.Context context = new javax.naming.InitialContext();		
											aplicacioHome = context.lookup(es.caib.seycon.ng.servei.ejb.AplicacioServiceHome.JNDI_NAME);
											aplicacioService = aplicacioHome.create();
											String _nomRol = event.getData()[0];
											String _codiApp = event.getData()[3][0];
											String _codiBbdd = event.getData()[5];
											Collection admApp = aplicacioService.findAdministracioAplicacioByNomRolAndCodiAplicacio(_nomRol,_codiApp);
											if (admApp!=null && admApp.size()!=0) {
												for (int i=0; i < admApp.size(); i++) {
													String disp = admApp.get(i).getCodiBaseDeDadesRol();
													if (disp.equals(_codiBbdd)) {
														Missatgebox.info(String.format(org.zkoss.util.resource.Labels.getLabel("usuaris.ResponsableAplicacio"), new Object [] {_codiApp,admApp.get(i).getCodiUsuari()}));
														return;
													}
												}
											}
										}
										
										if(jaExisteix) {
											Missatgebox.info(String.format(org.zkoss.util.resource.Labels.getLabel("usuaris.RolAssignat"), new Object [] {dada,bbdd,valorDomini}),org.zkoss.util.resource.Labels.getLabel("usuaris.ErrorRol"));
										} else {
											position = modelProxy.newInstance();
											ds = gridRols.getDataSource(); 
											ctx =  ds.getJXPathContext(); 
											xpath = gridRols.getXPath() + modelProxy.getBind(position); 
											pointer =ctx.createPath (xpath);
											ctx2 = ctx.getRelativeContext(pointer);
												
											campCodiUsuari = (DataTextbox) form.getFellow("codi");
											codiUsuari = campCodiUsuari.getValue();
						
											ctx2.setValue("@codiUsuari", codiUsuari);
											ctx2.setValue("@nomRol", event.getData()[0]);
											ctx2.setValue("@baseDeDades", dispatcher);
											ctx2.setValue("@codiAplicacio", event.getData()[1]);
											ctx2.setValue("@descripcioRol", event.getData()[2]);
											ctx2.setValue("@nomComplertUsuari", nomUsuari());
											ctx2.setValue("@startDate", new Date());
											
											if (event.getData()[3] != null) {
												es.caib.seycon.ng.comu.ValorDomini valor = new es.caib.seycon.ng.comu.ValorDomini();
												valor.setValor((event.getData()[3])[0]);
												valor.setDescripcio((event.getData()[3])[1]);
												valor.setNomDomini(event.getData()[4]);
												valor.setCodiExternDomini(event.getData()[1]);
												ctx2.setValue("/valorDomini", valor);
											}
											
											pointer.invalidate ();
											
											
											if (multipleAccounts)
											{
												Listbox select = selectAccountWnd.getFellow("select");
												select.getItems().clear();
												for (Object c: list)
												{
													Listitem item = new Listitem (c{"name"}, c{"name"});
													select.getItems().add(item);
												}
												selectAccountWnd.setAttribute("context", ds);
												selectAccountWnd.setAttribute("xpath", xpath);
												selectAccountWnd.setMode("highlighted");
											}
										}
									}

									void newRolRow ()
									{
										ctx = XPathUtils.getComponentContext(event.data);
										Long rule = XPathUtils.getValue(ctx, "@ruleId");
										if (rule != null)
										{
											Listcell cell = event.data.getChildren().get(8);
											cell.getChildren().get(0).visible = false;
											cell.getChildren().get(1).visible = true;
											cell = event.data.getChildren().get(9);
											cell.getChildren().get(0).visible = false;
										}
										Listcell cellImage = event.data.getChildren().get(0);
										Image image = cellImage.getChildren().get(0);
										es.caib.seycon.ng.comu.SoDRisk risk = XPathUtils.getValue (ctx, "@sodRisk");
										if (risk != null)
										{
											image.setSrc("/img/risk-" + risk.getValue()+".png");
											image.setVisible(true);
										}
										
										// Disable domain value
										if ( XPathUtils.getValue (ctx, "valorDomini") == null ||
											XPathUtils.getValue (ctx, "valorDomini/@valor") == null )
										{
											event.data.getChildren().get(1).getChildren().get(1).visible = false;
										}
										startbox = event.data.getChildren().get(5).getChildren().get(0);
										endbox = event.data.getChildren().get(6).getChildren().get(0);
										if (XPathUtils.getValue(ctx,"id") != null)
										{
											startbox.disabled = endbox.disabled = true;
											Date d1 = XPathUtils.getValue(ctx,"@startDate");
											Date d2 = XPathUtils.getValue(ctx,"@endDate");
											Date now = new Date();
											if (d1 != null && now.before(d1) )
											{
												for (c: event.data.getChildren())
												{
													c.style = "background-color: #ffffc0;";
												}
											}
											else if (d2 != null && d2.before(now)) 
											{
												for (c: event.data.getChildren())
												{
													c.style = "text-decoration: line-through;";
												}
											} else {
												event.data.style = event.data.style + "; background-color: blue;";
											}
										} else if (showHolderGroup) {
											// Change holdergroup textbox to a new listbox
											createHolderGroupListbox(event.data);
										}
										// Show sand clock when waiting for approval
										approvalPending = XPathUtils.getValue(ctx,"@approvalPending");
										if (approvalPending != null && approvalPending)
										{
											image.setVisible(false);
											Image image2 = cellImage.getChildren().get(1);
											image2.setVisible(true);
											for (c: event.data.getChildren())
											{
												c.style = "background-color: #ffffc0;";
											}
										}
									}
									
									void createHolderGroupListbox(Listitem row) {
										Listcell cell = row.getChildren().get(7);
										cell.getChildren().get(0).visible = false;
										es.caib.zkib.component.DataListbox lb = new es.caib.zkib.component.DataListbox ();
										lb.setBind("@holderGroup");
										lb.setMold("select");
										lb.setParent(cell);
										Listitem selected = null;
										if (! enforceHolderGroup)
										{
											Listitem item = new Listitem();
											item.setValue("");
											item.setLabel("");
											lb.getChildren().add (item);
											lb.setSelectedItem(item);
										}
										Set groups = new LinkedHashSet();
										es.caib.zkib.jxpath.JXPathContext jxpc = form.getDataSource().getJXPathContext();
										groups.add(jxpc.getValue("/@codiGrupPrimari"));
										for (Iterator it = jxpc.iterate("/grup/@codiGrup"); it.hasNext();)
										{
											groups.add(it.next());
										}
										
										es.caib.seycon.ng.servei.ejb.GrupService gs = 
												new javax.naming.InitialContext()
													.lookup (es.caib.seycon.ng.servei.ejb.GrupServiceHome.JNDI_NAME)
														.create();
										es.caib.seycon.ng.servei.ejb.TipusUnitatOrganitzativaService tus =
												new javax.naming.InitialContext()
													.lookup (es.caib.seycon.ng.servei.ejb.TipusUnitatOrganitzativaServiceHome.JNDI_NAME)
														.create();
										for (String group: groups)
										{
											Grup grup = gs.findGrupByCodiGrup(group);
											if (grup.getTipus() != null)
											{
												list = tus.findTipusUnitatOrganitzativaByFiltre(grup.getTipus(), null);
												if (! list.isEmpty())
												{
									 				TipusUnitatOrganitzativa tuo = list.get(0);
									 				if (tuo.isRoleHolder())
									 				{
														Listitem item = new Listitem();
														item.setValue(group);
														item.setLabel(group);
														if (selected == null)
															selected = item;
														lb.getChildren().add (item);
									 				}
												}
											}
										}
										
										if (selected != null)
											lb.setSelectedItem(selected);

									}
]]>
</zscript>
										<listhead>
											<listheader
												label="Risk"
												width="30px" />
											<listheader
												label="${c:l('usuaris.zul.Rol')}" sort="auto" width="20%" />
											<listheader
												label="${c:l('usuaris.zul.Bbdd')}" sort="auto" width="10%" />
											<listheader
												label="${c:l('usuaris.zul.Account')}" sort="auto"
												width="10%" />
											<listheader
												label="${c:l('usuaris.zul.Aplicacia')}" sort="auto"
												width="20%" />
											<listheader
												label="${c:l('usuaris.zul.startDate')}" width="10%"  sort="auto"/>
											<listheader
												label="${c:l('usuaris.zul.endDate')}" width="10%"  sort="auto"/>
											<listheader
												label="${c:l('usuaris.zul.holderGroup')}" width="10%" visible="${showHolderGroup}"  sort="auto"/>
											<listheader
												label="${c:l('usuaris.zul.')}"
												visible="${canDeleteUserRole}" width="30px" />
											<listheader
												label="${c:l('usuaris.zul.')}"
												visible="${canDeleteUserRole}" width="30px" />
										</listhead>
										<dataitem bind=".">
											<listcell>
												<imageclic align="right" visible="false">
													<attribute name="onClick">
													<![CDATA[
													ctx = XPathUtils.getComponentContext(self);
													Collection rules = XPathUtils.getValue(ctx, "@sodRules");
													StringBuffer sb = new StringBuffer ();
													for (es.caib.seycon.ng.comu.SoDRule rule: rules)
													{
														sb.append ("- ").
															append (rule.getName()).
															append ("\n");
															
													}
													Missatgebox.info(
														String.format("Affected by rules:\n %s",
															new Object[] { sb.toString() }));
]]></attribute>
												</imageclic>
												<imageclic align="right" visible="false" width="24px" height="24px" src="/img/hourglass.gif">
													<attribute name="onClick">
													<![CDATA[
	ctx = XPathUtils.getComponentContext(self);
	proc = XPathUtils.getValue(ctx, "/@approvalProcess");
	if (idProces != null) {
		es.caib.zkib.zkiblaf.Application.call("wf/process.zul?id=" + proc);
	}
]]></attribute>
												</imageclic>
											</listcell>
											<listcell >
												<label  bind="@nomRol" tooltip="rolsTooltip"></label>
												<div style="display:inline" tooltip="domainTooltip">
													<label value = "/"></label>
													<label  bind="valorDomini/@valor"/>
												</div>
											</listcell>
											<listcell
												bind="@baseDeDades" />

											<listcell
												bind="@accountName" />

											<listcell
												bind="@codiAplicacio" />
											<listcell >
												<datebox format="${c:l('usuaris.zul.dateFormat2')}" disabled="${!canCreateUserRole}" bind="@startDate"></datebox>
											</listcell>
											<listcell >
												<datebox format="${c:l('usuaris.zul.dateFormat2')}" disabled="${!canCreateUserRole}" bind="@endDate"></datebox>
											</listcell>
											<listcell>
												<label bind="@holderGroup" />
											</listcell>
											<listcell>
												<imageclic align="right"
													src="~./img/list-remove.gif">
													<attribute name="onClick">
	// Controlem que si Ã©s gestionableWF='S' no es puga esborrar
	listCell = self.getParent();
	dlistbox = listCell.getListbox();
	modelo = dlistbox.getModel();
	listItem = listCell.getParent();
	posicio = listItem.getIndex();
	elemPos = modelo.getElementAt(posicio);
	xpath = elemPos.getDataContext().getXPath();
	dataSource = gridRols.getDataSource();
	context = dataSource.getJXPathContext();
	dada = context.getValue(xpath + "/@nomRol");
	/*gestionableWF = context.getValue(xpath+"/@gestionableWF");
	nomRol = context.getValue(xpath+"/@nomRol");
	if ("S".equals(gestionableWF)) {
		Missatgebox.avis(String.format(org.zkoss.util.resource.Labels.getLabel("usuaris.RolBorrar"), new Object [] {nomRol}));
	}*/
	if (canDeleteUserRole /*@and "N".equals(gestionableWF) */) {

		Missatgebox.confirmaOK_CANCEL(String.format(
				org.zkoss.util.resource.Labels
						.getLabel("usuaris.SegurRolBorrar"),
				new Object[] { dada }), org.zkoss.util.resource.Labels
				.getLabel("usuaris.Esborra"), new EventListener() {
			public void onEvent(Event evt) {
				if ("onOK".equals(evt.getName())) {
					context.removePath(xpath);
				}
			}
		});
	}
</attribute>
												</imageclic>
												<imageclic align="right" visible="false"
													src="/img/info.png">
													<attribute name="onClick">
													<![CDATA[
													ctx = XPathUtils.getComponentContext(self);
													String ruleDescription = XPathUtils.getValue(ctx, "@ruleDescription");
													Missatgebox.info(
															org.zkoss.util.resource.Labels
																	.getLabel("usuaris.assignedByRule",
															new Object[] { ruleDescription }));
]]></attribute>
												</imageclic>
											</listcell>
											<listcell>
												<checkbox>
													<!--attribute name="onCheck">
														listCell = self.getParent(); 
														dlistbox = listCell.getListbox(); 
														modelo = dlistbox.getModel();
														listItem = listCell.getParent(); 
														posicio = listItem.getIndex(); 
														elemPos = modelo.getElementAt(posicio); 
														xpath = elemPos.getDataContext().getXPath(); 
														dataSource = gridRols.getDataSource(); 
														context = dataSource.getJXPathContext();  
														gestionableWF = context.getValue(xpath+"/@gestionableWF");
														nomRol = context.getValue(xpath+"/@nomRol");
														if ("S".equals(gestionableWF)) {
														Missatgebox.avis("No es pot esborrar el rol '"+nomRol+"', Ã©s un rol gestionable per Workflows");
														self.setChecked(false);	
														}
														</attribute-->
												</checkbox>
											</listcell>
										</dataitem>
									</listbox>
									<popup id="rolsTooltip"
										width="200px">
										<attribute name="onOpen">
    label = event.getReference();
    if (label != null)
    {
		listCell = label.parent;
		if (listCell instanceof DataListcell) {
			dlistbox = listCell.getListbox();
			modelo = dlistbox.getModel();
			listItem = listCell.getParent();
			posicio = listItem.getIndex();
			elemPos = modelo.getElementAt(posicio);
			xpath = elemPos.getDataContext().getXPath();
			dataSource = gridRols.getDataSource();
			context = dataSource.getJXPathContext();
			dada = context.getValue(xpath + "/@nomRol");
			desc = context.getValue(xpath + "/@descripcioRol");
			rolsTooltipLabel.value = dada + (desc != null ? ("\n" + desc) : "");
		}
	}
</attribute>
										<label id="rolsTooltipLabel"
											multiline="true" value="" />
									</popup>
									<popup id="domainTooltip"
										width="200px">
										<attribute name="onOpen">
    label = event.getReference();
    if (label != null)
    {
		listCell = label.parent;
		if (listCell instanceof DataListcell) {
			dlistbox = listCell.getListbox();
			modelo = dlistbox.getModel();
			listItem = listCell.getParent();
			posicio = listItem.getIndex();
			elemPos = modelo.getElementAt(posicio);
			xpath = elemPos.getDataContext().getXPath();
			dataSource = gridRols.getDataSource();
			context = dataSource.getJXPathContext();
			dada = context.getValue(xpath + "/valorDomini/@nomDomini");
			desc = context.getValue(xpath + "/valorDomini/@descripcio");
			domainTooltipLabel.value = dada + (desc != null ? ("\n" + desc) : "");
		}
	}
</attribute>
										<label id="domainTooltipLabel"
											multiline="true" value="" />
									</popup>
								</vbox>
								<hbox width="100%" widths="50%,50%">
									<hbox>
										<button
											image="~./img/list-add.gif"
											label="${c:l('usuaris.zul.Afegeixnou')}"
											visible="${canCreateUserRole}">
											<attribute name="onClick">
	desktop.getPage("rolsLlista").setAttribute("mostraGestionableWF", "true");
	desktop.getPage("rolsLlista").setAttribute("tipus", "wizard");
	desktop.getPage("rolsLlista").setAttribute("usuari",
			form.getFellow("codi").getValue());
	Events.postEvent("onInicia",
			desktop.getPage("rolsLlista").getFellow("esquemaLlista"), gridRols);
</attribute>
										</button>
										<button
											image="~./img/list-remove.gif"
											label="${c:l('usuaris.zul.Esborrarolsseleccion')}"
											visible="${canCreateUserRole}">
											<attribute name="onClick">
String nomRolsBorrar = "";
									ArrayList rolsBorrar = new ArrayList();
									Collection items = gridRols.getItems();
									for (Iterator it = items.iterator(); it.hasNext();) {
										Listitem item = (Listitem) it.next();
										Collection cells = item.getChildren();
										int pos = 0;
										String nomRol ="";
										DataCheckbox cbox = null;
										Listcell celdaBorrar = null;
										for (Iterator itcell = cells.iterator(); itcell
												.hasNext();) {
											Listcell cell = (Listcell) itcell.next();
											if (pos==1) {nomRol = cell.getLabel(); celdaBorrar = cell;} 
											else
												if (pos==9) {
													Iterator itcb = cell.getChildren().iterator();
													if (itcb.hasNext()) cbox = (DataCheckbox) itcb.next();
												}
											pos++; 
										}
										if (cbox!=null @and cbox.isChecked()) {
											nomRolsBorrar += nomRol+", ";
											rolsBorrar.add(celdaBorrar);
										}
									}
									if (!"".equals(nomRolsBorrar)) {
										nomRolsBorrar = nomRolsBorrar.substring(0,nomRolsBorrar.length()-2);
										Missatgebox.confirmaOK_CANCEL(String.format(org.zkoss.util.resource.Labels.getLabel("usuaris.SegurRolsBorrar"), new Object [] {nomRolsBorrar}),
											org.zkoss.util.resource.Labels.getLabel("usuaris.Esborra"),
											new EventListener() {
												public void onEvent(Event evt) {
													if ("onOK".equals(evt.getName())) {
														for (i = 0; i @lt rolsBorrar.size(); i++) {
															listCell = rolsBorrar.get(i);
															dlistbox = listCell.getListbox(); 
															modelo = dlistbox.getModel();
															listItem = listCell.getParent(); 
															posicio = listItem.getIndex(); 
															elemPos = modelo.getElementAt(posicio); 
															xpath = elemPos.getDataContext().getXPath(); 
															dataSource = gridRols.getDataSource();
															context = dataSource.getJXPathContext(); 
															context.removePath(xpath);
														}
													}
												}
											});
									}
</attribute>
										</button>
									</hbox>
									<hbox style="float:right">
										<listexportbutton
											acces="${canQueryUser}" listbox="gridRols" />
									</hbox>
								</hbox>
							</tabpanel>

							<tabpanel id="rolsHeredats">
								<vbox width="100%">
									<listbox id="gridRolsHeredats" autocommit="false"
										dataPath="/esquema/lista/listbox:/rolsheredats"
										fixedLayout="true" height="400px" sclass="likeagrid">
										<listhead>
											<listheader sort="auto" width="450px"
												label="${c:l('usuaris.zul.Rol[nom@bbdd&gt;aplicac')}"/>
											<listheader sort="auto"
												label="${c:l('usuaris.zul.Informaciadassignac')}"/>
										</listhead>
										<dataitem bind=".">
											<listcell bind="@infoContenidor" />
											<listcell bind="@metaInfo" />
										</dataitem>
									</listbox>
									<hbox style="float:right">
										<listexportbutton acces="${canQueryUser}"
											listbox="gridRolsHeredats" />
									</hbox>
								</vbox>
							</tabpanel>

							<tabpanel id="dadesAddicionals">
									<vbox
										if="${!canCreateUserPrinter and !canDeleteUserPrinter}"
										width="99%">
										<grid
											dataPath="/esquema/lista/listbox:/impressora"
											fixedLayout="true" height="130px"
											id="gridImpressora_SoloLectura">
											<columns>
												<column
													label="${c:l('usuaris.zul.Impressora')}" width="60%" />
												<column
													label="${c:l('usuaris.zul.Servidor')}" width="*" />
												<column
													label="${c:l('usuaris.zul.Def')}" width="30px" />
											</columns>
											<datarow>
												<label
													bind="@codiImpressora" />
												<label
													bind="@nomServidorImpressora" />
												<checkbox
													bind="@perDefecte" disabled="true" />
											</datarow>
										</grid>
									</vbox>
									<vbox
										if="${canCreateUserPrinter or canDeleteUserPrinter}"
										width="99%">
										<grid
											dataPath="/esquema/lista/listbox:/impressora"
											fixedLayout="true" height="130px" id="gridImpressora">
											<attribute name="onActualitza">
	Object[] dades = (Object[]) event.getData();
	codiI = (String) dades[0];
	nomS = (String) dades[1];
	modelInstance = gridImpressora.getModel();
	modelProxy = (es.caib.zkib.binder.list.FullModelProxy) gridImpressora
			.getModel();
	ds = gridImpressora.getDataSource();
	ctx = ds.getJXPathContext();
	xpath = gridImpressora.getXPath() + "[@codiImpressora = '"
			+ (event.getData()[0]) + "']";
	boolean jaExisteix = true;
	try {
		valor = ctx.getValue(xpath);
	} catch (Exception e) {
		jaExisteix = false;
	}
	if (jaExisteix) {
		Missatgebox.info(String.format(org.zkoss.util.resource.Labels
				.getLabel("usuaris.ImpressoraAssignada"),
				new Object[] { codiI }), org.zkoss.util.resource.Labels
				.getLabel("usuaris.ErrorImpressora"));
	} else {
		position = modelProxy.newInstance();
		ds = gridImpressora.getDataSource();
		ctx = ds.getJXPathContext();
		xpath = gridImpressora.getXPath() + modelProxy.getBind(position);
		pointer = ctx.createPath(xpath);
		ctx2 = ctx.getRelativeContext(pointer);
		campCodiUsuari = (DataTextbox) form.getFellow("codi");
		codiUsuari = campCodiUsuari.getValue();
		ctx2.setValue("@codiImpressora", codiI);
		ctx2.setValue("@nomServidorImpressora", nomS);
		ctx2.setValue("@codiUsuari", codiUsuari);
		pointer.invalidate();
	}
</attribute>
											<columns>
												<column
													label="${c:l('usuaris.zul.Impressora')}" width="60%" />
												<column
													label="${c:l('usuaris.zul.Servidor')}" width="*" />
												<column
													label="${c:l('usuaris.zul.Def')}" width="30px" />
												<column
													label="${c:l('usuaris.zul.')}"
													visible="${canDeleteUserPrinter}" width="30px" />
											</columns>
											<datarow>
												<label
													bind="@codiImpressora" />
												<label
													bind="@nomServidorImpressora" />
												<checkbox
													bind="@perDefecte">
													<attribute name="onCheck">
	dataRow = self.getParent();
	xpathActual = dataRow.getXPath();
	ds = gridImpressora.getDataSource();
	ctx = ds.getJXPathContext();
	actual = ctx.getValue(xpathActual + "/@codiImpressora");
	jaMarcat = true;
	try {
		xpathAltra = gridImpressora.getXPath() + "[@codiImpressora != '"
				+ actual + "' and @perDefecte='true']";
		valor = ctx.getValue(xpathAltra + "/@codiImpressora");
	} catch (Exception e) {
		jaMarcat = false;
	}
	if (jaMarcat) {
		xpathAltra = gridImpressora.getXPath() + "[@codiImpressora = '" + valor
				+ "']";
		pointer = ctx.getPointer(xpathAltra);
		ctx2 = ctx.getRelativeContext(pointer);
		ctx2.setValue("/@perDefecte", false);
		pointer.invalidate();
	}
</attribute>
												</checkbox>
												<imageclic
													src="~./img/list-remove.gif">
													<attribute name="onClick">
	if (canDeleteUserPrinter) {
		dataRow = self.getParent();
		xpath = dataRow.getXPath();
		dataSource = gridImpressora.getDataSource();
		context = dataSource.getJXPathContext();
		dada = context.getValue(xpath + "/@codiImpressora");
		Missatgebox.confirmaOK_CANCEL(String.format(
				org.zkoss.util.resource.Labels
						.getLabel("usuaris.EsborraImpressora"),
				new Object[] { dada }), org.zkoss.util.resource.Labels
				.getLabel("usuaris.Esborra"), new EventListener() {
			public void onEvent(Event evt) {
				if ("onOK".equals(evt.getName())) {
					context.removePath(xpath);
				}
			}
		});
	}
</attribute>
												</imageclic>
											</datarow>
										</grid>
										<button
											if="${canCreateUserPrinter}" image="~./img/list-add.gif"
											label="${c:l('usuaris.zul.Afegeixnova')}">
											<attribute name="onClick">
	Events.postEvent("onInicia", desktop.getPage("impressoresLlista")
			.getFellow("esquemaLlista"), gridImpressora);
</attribute>
										</button>
									</vbox>

							</tabpanel>

							<tabpanel id="Sessions">
								<vbox width="100%">
									<timer id="timer" delay="${refreshPageTime}" repeats="true"
										onTimer="refreshUserSessions(self.getParent())" />
									<grid id="gridSessions" height="300px" width="99%"
										dataPath="/esquema/lista/listbox:/sessio"
										fixedLayout="true" >
										<columns>
											<column label="${c:l('usuaris.zul.Maquinaservidora')}"
												width="*" />
											<column label="${c:l('usuaris.zul.Maquinaclient')}"
												width="*" />
											<column label="${c:l('usuaris.zul.Port')}" width="120px"/>
											<column label="${c:l('usuaris.zul.DataInici')}"
												width="140px" />
											<column label="${c:l('usuaris.zul.VNC')}" width="60px" />
										</columns>
										<datarow>
											<label bind="@nomMaquinaServidora" />
											<label bind="@nomMaquinaClient" />
											<label bind="@port" />
											<datebox bind="@dataInici" buttonVisible="false"
												disabled="true" format="dd/MM/yyyy kk:mm"
												sclass="dateboxreadnoborder" width="99%" />
											<imageclic sclass="imageclic centre" src="~./img/vnc.gif">
												<attribute name="onClick">
													dataRow = self.getParent();
													context = dataRow.getJXPathContext();
													id = context.getValue("@id");
													if (launchVNC(id)) {
														Missatgebox.info(
																org.zkoss.util.resource.Labels.getLabel("usuaris.SessioVNC"),
																org.zkoss.util.resource.Labels.getLabel("usuaris.SessioVNC"));
													}
												</attribute>
											</imageclic>
										</datarow>
									</grid>
								</vbox>
							</tabpanel>

							<tabpanel id="processos">
								<vbox width="100%">
									<listbox
										dataPath="/esquema/lista/listbox:/processosUsuari"
										fixedLayout="true" height="300px" id="gridProcessos"
										width="99%">
										<listhead>
											<listheader
												label="${c:l('usuaris.zul.IdProcess')}" sort="auto"
												width="*" />
											<listheader
												label="${c:l('usuaris.zul.Nom-2')}" sort="auto" width="*" />
											<listheader
												label="${c:l('usuaris.zul.Estat')}" sort="auto" width="*" />
											<listheader
												label="${c:l('usuaris.zul.DataInici')}" sort="auto"
												width="*" />
											<listheader
												label="${c:l('usuaris.zul.DataFi')}" sort="auto" width="*" />
											<listheader
												label="${c:l('usuaris.zul.')}" width="30px" />
										</listhead>
										<dataitem bind=".">
											<listcell bind="@id" />
											<listcell
												bind="/processDefinition/@name" />
											<listcell
												bind="@currentTask" />
											<listcell bind="@start" />
											<listcell bind="@end" />
											<listcell>
												<imageclic
													src="img/root.gif" tooltiptext="Mostra procÃ©s">
													<attribute name="onClick">
	listCell = self.getParent();
	dlistbox = listCell.getListbox();
	modelo = dlistbox.getModel();
	listItem = listCell.getParent();
	posicio = listItem.getIndex();
	elemPos = modelo.getElementAt(posicio);
	xpath = elemPos.getDataContext().getXPath();
	ds = dlistbox.getDataSource();
	ctx = ds.getJXPathContext();
	idProces = ctx.getValue(xpath + "/@id");
	if (idProces != null) {
		es.caib.zkib.zkiblaf.Application.call("wf/process.zul?id=" + idProces);
	}
</attribute>
												</imageclic>
											</listcell>
										</dataitem>
									</listbox>
								</vbox>
							</tabpanel>
						</tabpanels>
					</tabbox>
				</form>
			</detalls>
		</esquemavertical>

		<window closable="false" id="selectAccountWnd"
			position="center, center"
			title="${c:l('usuaris.zul.selectAccount.title')}" visible="false"
			width="300px">
			<zscript>
				void accept() {
					if (select.getSelectedItem() == null) {
						Missatgebox(org.zkoss.util.resource.Labels
								.getLabel("usuaris.zul.selectAccount.selectone"));
					} else {
						ctx = selectAccountWnd.getAttribute("context");
						path = selectAccountWnd.getAttribute("xpath");
						ctx.getJXPathContext().setValue(path + "/@accountName",
								select.getSelectedItem().getValue());
						selectAccountWnd.visible = false;
					}
				}
				void cancel() {
					ctx = selectAccountWnd.getAttribute("context");
					path = selectAccountWnd.getAttribute("xpath");
					es.caib.zkib.datasource.XPathUtils.removePath(ctx, path);
					selectAccountWnd.visible = false;
				}
			</zscript>
			<vbox width="100%">
				<separator spacing="10px" />
				<hbox width="95%" pack="center" align="center">
					<label
						value="${c:l('usuaris.zul.selectAccount.account')}" />
					<listbox id="select"></listbox>
				</hbox>
				<separator spacing="10px" />
				<hbox width="95%" pack="end" align="end">
					<button
						label="${c:l('usuaris.zul.selectAccount.ok') }"
						onClick="accept()" />
					<separator spacing="10px" />
					<button
						label="${c:l('usuaris.zul.selectAccount.cancel') }"
						onClick="cancel()" />
				</hbox>
				<separator spacing="10px" />
			</vbox>
		</window>
		<window visible="false" id="binarywindow" width="50%" height="50%" title="Binary-Viewer" border="normal" 
		closable="true" onClose="close()">
		<iframe id="iframe" height="100%" width="100%" />
		<zscript><![CDATA[
			void close(){
				binarywindow.detach();
			}
		]]>
		</zscript>
		</window>

		<include src="usuarisllista.zul" />
		<include src="dominisCorreullista.zul" />
		<include src="grupsllista.zul" />
		<include src="finestres/maquinesllistaUsuari.zul" />
		<include src="impressoresllista.zul" />
		<include src="rolsllista.zul" />
		<include src="finestres/canviPassword.zul" />
		<include src="tasquesSeycon.zul" />
		<include src="finestres/llistaRegistreAccesUsuari.zul" />
		<include src="finestres/getmazingerconfig.zul" />
		<include src="finestres/usu_nouProces.zul" />
		<include src="finestres/user_renameAccount.zul" />
		<include src="finestres/user_createAccount.zul" />

		<window closable="true" id="newPassword" position="center, center"
			sizable="true" title="${c:l('accounts.setPassword.title')}"
			visible="false" width="34em"
			onClose="onCancelPassword(); event.stopPropagation();">
			<zscript>
				<![CDATA[
					void onCancelPassword()
					{
						Window wnd = Path.getComponent("/newPassword");
						password.setValue("");
						wnd.setVisible(false);
					}
					
					void onSetPassword()
					{
						es.caib.seycon.ng.servei.ejb.AccountService service = new javax.naming.InitialContext()
								.lookup(es.caib.seycon.ng.servei.ejb.AccountServiceHome.JNDI_NAME)
								.create();
						model.commit();
				
						es.caib.zkib.datasource.DataSource ds = newPassword.getAttribute("ds");
						String xpath = newPassword.getAttribute("xpath");
						account = ds.getJXPathContext().getValue(xpath+"/account[1]").instance;

						service.setAccountPassword(account, new Password(password.getValue()));
						es.caib.zkib.zkiblaf.Missatgebox
								.confirmaOK(org.zkoss.util.resource.Labels
										.getLabel("accounts.setPassword.msg"));
						onCancelPassword();
					}
				]]>
			</zscript>
			<vbox width="30em" heights="5em, 3em" align="center">
				<hbox align="center" height="5em" >
					<hbox width="8em" align="center" pack="end">
						<label 
							value="${c:l('accounts.setPassword.label')}">
						</label>
					</hbox>
					<space width="2em"></space>
					<hbox width="18em" align="center" pack="start">
						<textbox type="password" width="18em" id="password"
							onOK="onSetPassword();">
						</textbox>
					</hbox>
				</hbox>
				<hbox align="center" pack="end" width="30em">
					<button
						label="${c:l('accounts.setPassword.Cancel')}"
						onClick="onCancelPassword()" />
					<button label="${c:l('accounts.setPassword.OK')}"
						onClick="onSetPassword()" />
				</hbox>
			</vbox>
		</window>

		<window closable="true" id="newPassword2" position="center, center"
			sizable="true" title="${c:l('accounts.setPassword.title')}"
			visible="false" width="34em"
			onClose="onCancelPassword(); event.stopPropagation();">
			<attribute name="onStart"><![CDATA[
			        newPassword2.doHighlighted();
			        generationType.selectedItem = generationRandom;
			        onChangeSelectedGeneration ();
			]]></attribute>
			<zscript>
				<![CDATA[
					void onCancelPassword()
					{
						Window wnd = Path.getComponent("/newPassword2");
						password.setValue("");
						wnd.setVisible(false);
					}
					
					void onSetPassword()
					{
						model.commit();
						es.caib.seycon.ng.servei.ejb.UsuariService service = new javax.naming.InitialContext()
							.lookup(es.caib.seycon.ng.servei.ejb.UsuariServiceHome.JNDI_NAME)
							.create();
						String user = newPassword2.getAttribute("user");
						String domain = newPassword2.getAttribute("domain");
						if (generationType.selectedItem == generationSet)
						{
							service.setTemporaryPassword(user, domain, new Password(password.getValue()));
							es.caib.zkib.zkiblaf.Missatgebox
									.confirmaOK(org.zkoss.util.resource.Labels
											.getLabel("accounts.setPassword.msg"));
						}
						else
						{
							String nouPassword = service.canviPassword(user, domain);
							Events.postEvent("onInicia", desktop.getPage("canviPassword")
									.getFellow("password"), new String[] { nouPassword,
									domain });
						}
				
						onCancelPassword();
					}
					
					void onChangeSelectedGeneration ()
					{
						if (generationType.selectedItem == generationSet)
						{
							password.setDisabled (false);
							password.setFocus(true);
							passworddiv.setStyle("visibility: visible");
						} else {
							password.setDisabled (true);
							setButton.setFocus(true);
							passworddiv.setStyle("visibility: hidden");
						}
					}
				]]>
			</zscript>
			<vbox width="30em" heights="3em, 2em" style="margin: 4em">
				<radiogroup id="generationType" width="24em" orient="vertical">
					<attribute name="onCheck"><![CDATA[
					    onChangeSelectedGeneration();
					]]></attribute>
					<radio label="${c:l('usuaris.zul.radomPassword')}" id="generationRandom" width="20em" selected="true" value="random" onSelect=""/>
					<radio label="${c:l('usuaris.zul.setPassword')}" id ="generationSet" width="20em" value="set" onSelect=""/>
				</radiogroup>
				<div style="visibility: hidden" id="passworddiv">
					<label 
						value="${c:l('accounts.setPassword.label')}">
					</label>
					<textbox style="margin-left: 2em;" disabled="true" type="password" width="18em" id="password"
						onOK="onSetPassword();">
					</textbox>
				</div>
				<hbox align="center" pack="end" width="26em">
					<button
						label="${c:l('accounts.setPassword.Cancel')}"
						onClick="onCancelPassword()" />
					<button id = "setButton"
					    label="${c:l('accounts.setPassword.OK')}"
						onClick="onSetPassword()" />
				</hbox>
			</vbox>
		</window>

	</frame>
	<zscript>
	<![CDATA[
			if (requestedUser != null)
			{
				qw = esquema.getFellow("queryWindow");
				qw.getFellow("queryCodi").getFellow("textbox").setValue (requestedUser);
				Events.postEvent ("onOK", qw, null );				
				esquema.getFellow("queryWindow").parent.parent.setVisible(false);
				esquema.getFellow("lista").parent.setVisible(false);
			}
	]]>
	</zscript>
</zk>
