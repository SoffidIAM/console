<?xml version="1.0" encoding="UTF-8"?>

<?component name="account_acl" macro-uri="/accounts/accountAcl.zul"?>
<?component name="input_criteri" macro-uri="/comu/input_criteri.zul"?>
<?component name="input_dada" macro-uri="/comu/input_dada.zul"?>
<?component name="input_etiqueta" macro-uri="/comu/input_etiqueta.zul"?>

<zk>
<style><![CDATA[
	.center-column div {
		text-align: center !important; 
	}
	div.menupopup tr.red-menu a {color: red;} 
	div.menupopup tr.blue-menu a {color: blue;} 
	div.menupopup tr.gray-menu a {color: gray;}
]]></style>
<zscript><![CDATA[
	Component macro = self;
	macro.addEventListener("onNewFolder", new org.zkoss.zk.ui.event.EventListener() {
		public void onEvent (Event evt) {
			onNewFolder(evt.data);
		}
	});
	
	macro.addEventListener("onOpenFolder", new org.zkoss.zk.ui.event.EventListener() {
		public void onEvent (Event evt) {
			onOpenFolder(evt.data);
		}
	});
	
	void onNewFolder (String path) {
		es.caib.zkib.component.Form form = innerWindow.getFellow("form");
		form.setDataPath("/model:"+path);
		Events.sendEvent(new Event("onEnable",  innerWindow.getFellow("ownerAcl"), true));
		Events.sendEvent(new Event("onEnable",  innerWindow.getFellow("managerAcl"), true));
		Events.sendEvent(new Event("onEnable", innerWindow.getFellow("userAcl"), true));
		innerWindow.setTitle(org.zkoss.util.resource.Labels.getLabel("vault.folder.new"));
		// Add current user as owner
		es.caib.seycon.ng.comu.Usuari current = es.caib.seycon.ng.EJBLocator.getUsuariService().getCurrentUsuari();
		if (current != null)
		{
			es.caib.zkib.datasource.XPathUtils.createPath(model, path+"/ownerUsers", current);
		}
		Boolean personal = es.caib.zkib.datasource.XPathUtils.getValue(form, "/@personal");
		if (personal != null && personal)
		{
			innerWindow.getFellow("permissionsButton").setVisible(false);
			innerWindow.getFellow("aclDiv").setVisible(false);
		}
		else
		{
			innerWindow.getFellow("permissionsButton").setVisible(false);
			innerWindow.getFellow("aclDiv").setVisible(true);
		}
		innerWindow.doHighlighted();
	}
	
	void onOpenFolder (String path) {
		es.caib.zkib.component.Form form = innerWindow.getFellow("form");
		form.setDataPath("/model:"+path);
		Events.sendEvent(new Event("onEnable",  innerWindow.getFellow("ownerAcl"), true));
		Events.sendEvent(new Event("onEnable",  innerWindow.getFellow("managerAcl"), true));
		Events.sendEvent(new Event("onEnable", innerWindow.getFellow("userAcl"), true));
		innerWindow.setTitle(org.zkoss.util.resource.Labels.getLabel("vault.folder.open"));
		Boolean personal = es.caib.zkib.datasource.XPathUtils.getValue(form, "/@personal");
		if (personal != null && personal)
		{
			innerWindow.getFellow("permissionsButton").setVisible(false);
			innerWindow.getFellow("aclDiv").setVisible(false);
		}
		else
		{
			innerWindow.getFellow("permissionsButton").setVisible(true);
			innerWindow.getFellow("aclDiv").setVisible(true);
		}
		innerWindow.doHighlighted();
	}
	

	void onCancel () {
		model.refresh();
		innerWindow.setVisible(false);
	}
	
	void onApply () {
		es.caib.zkib.datasource.XPathUtils.getValue(innerWindow.getFellow("form"), ".").update();
		model.commit ();
		innerWindow.setVisible(false);

		Tree treebox = esquema.getFellow("lista").getFellow("treebox");
		
		String xPath = null;
		if (treebox.getSelectedItem() != null)
			xPath = treebox.getSelectedItem().getValue().getXPath();
		
		model.refresh();
		
		if (xPath != null)
			treebox.obreBrancaByXpath(xPath);
		
	}
	
	void selectParent ()
	{
		es.caib.zkib.component.DataTree tree = selectFolderWnd.getFellow ("folderTree");
		tree.setSelectedItem(null);
		selectFolderWnd.doHighlighted();
	}
	
	void selectedParentFolder ()
	{
		es.caib.zkib.component.DataTree tree = selectFolderWnd.getFellow ("folderTree");
		Treeitem item = tree.getSelectedItem();
		if (item == null)
		{
			
			es.caib.zkib.binder.BindContext ctx2 = es.caib.zkib.datasource.XPathUtils.getComponentContext(innerWindow.getFellow("form"));
			es.caib.zkib.datasource.XPathUtils.setValue(ctx2, "@parentFolder", null);
			es.caib.zkib.datasource.XPathUtils.setValue(ctx2, "@parentId", null);
		} else {
			es.caib.zkib.binder.BindContext ctx1 = es.caib.zkib.datasource.XPathUtils.getComponentContext(item);
			es.caib.zkib.binder.BindContext ctx2 = es.caib.zkib.datasource.XPathUtils.getComponentContext(innerWindow.getFellow("form"));
			es.caib.zkib.datasource.XPathUtils.setValue(ctx2, "@parentFolder",
					es.caib.zkib.datasource.XPathUtils.getValue(ctx1, "@name"));
			es.caib.zkib.datasource.XPathUtils.setValue(ctx2, "@parentId", 
				es.caib.zkib.datasource.XPathUtils.getValue(ctx1, "@id"));

		}
		selectFolderWnd.setVisible(false);
	}
	
	void openPermissionsGrid ()
	{
		model.commit ();
		com.soffid.iam.service.ejb.VaultService vs = es.caib.seycon.ng.EJBLocator.getVaultService();
		com.soffid.iam.api.VaultFolder folder = es.caib.zkib.datasource.XPathUtils.getValue( innerWindow.getFellow("form"), ".").getInstance();
		com.soffid.iam.api.VaultFolderPermissions perm = vs.getFolderPermissions( folder );
		
		pageScope.put("vaultFolderPermissions", perm);
		
		Grid g = permissionsWnd.getFellow ("permissionsGrid");
		
		// Remove columns
		Columns cols = g.getColumns();
		while ( cols.getChildren().size() > 1)
			cols.getLastChild().setParent(null);
		// Remove rows
		Rows rows = g.getRows ();
		while ( rows.getChildren().size() > 0)
			rows.getLastChild().setParent(null);
		// Create columns
		for ( Object obj: perm.getGrantee())
		{
			
			Column col = new Column();
			col.setAlign("center");
			col.setSclass("center-column");
			Component ic = null;
			if (obj instanceof es.caib.seycon.ng.comu.Grup)
			{
				new Image ("/img/group.png").setParent(col);
				new Label ( obj.getCodi ()).setParent (col);
				ic = new es.caib.zkib.zkiblaf.ImageClic ("/img/link.png");
       			ic.setAttribute("jmpUrl", "index.zul?embed&target=/grups.zul?group="+obj.getCodi());
			}
			if (obj instanceof es.caib.seycon.ng.comu.Usuari)
			{
				new Image ("/img/user.png").setParent(col);
				new Label ( obj.getCodi ()).setParent (col);
				ic = new es.caib.zkib.zkiblaf.ImageClic ("/img/link.png");
				ic.setAttribute("jumpUrl", "index.zul?embed&target=/usuaris.zul?user="+obj.getCodi());
			}
			if (obj instanceof es.caib.seycon.ng.comu.Rol)
			{
				new Image ("/img/key.png").setParent(col);
				new Label ( obj.getNom ()).setParent (col);
			}
			if (ic != null)
			{
				ic.addEventListener("onClick", new org.zkoss.zk.ui.event.EventListener()
				{
					public void onEvent (Event evt) {
	               		Executions.getCurrent().sendRedirect(
	               				evt.getTarget().getAttribute("jumpUrl"), "soffid_popup");
					}
				});
				ic.setParent(col);
			}
			col.setParent(cols);
		}
		// Create rows
		for ( com.soffid.iam.api.VaultFolderAccountPermissions ap: perm.getAccounts())
		{
			Row row = new Row ();
			row.setParent(rows);
			Label l = new Label ( ap.getAccount().getDescription() );
			l.setParent(row);
			for ( es.caib.seycon.ng.comu.AccountAccessLevelEnum level: ap.getPermissions())
			{
				Div d1 = new Div ();
				d1.setParent(row);
				d1.setStyle("text-align: center");
				Label l2 = new Label ( level.getValue() );
				l2.setParent(d1);
				setLabelStyle (l2);

				es.caib.zkib.zkiblaf.ImageClic ic = new es.caib.zkib.zkiblaf.ImageClic ("/img/refresca.png");
				ic.setWidth("16px");
				ic.setStyle ("margin-left: 1em");
				ic.setParent(d1);
				ic.setTitle(org.zkoss.util.resource.Labels.getLabel("vault.folder.change"));
				
				ic.addEventListener("onClick",
						new org.zkoss.zk.ui.event.EventListener() {
							public void onEvent (Event evt) {
								pageScope.put("AccessTypeLabel", evt.getTarget().getPreviousSibling());
			               		accessType.open (evt.getTarget());
							}
										
				});
			}
			
		}
		permissionsWnd.doHighlighted();
	}
	
	void setLabelStyle (Label l)
	{
		if (l.getValue().equals ( es.caib.seycon.ng.comu.AccountAccessLevelEnum.ACCESS_OWNER.getValue()))
		{
			l.setStyle("color: red");
		}
		else if (l.getValue().equals ( es.caib.seycon.ng.comu.AccountAccessLevelEnum.ACCESS_MANAGER.getValue()))
		{
			l.setStyle("color: blue");
		}
		else if (l.getValue().equals ( es.caib.seycon.ng.comu.AccountAccessLevelEnum.ACCESS_USER.getValue()))
		{
			l.setStyle("");
		}
		else if (l.getValue().equals ( es.caib.seycon.ng.comu.AccountAccessLevelEnum.ACCESS_NONE.getValue()))
		{
			l.setStyle("color: gray");
		} else {
			System.out.println ("UNKNOWN LEVEL "+l.getValue());
		}
		l.setSclass("center-cell");
	}
	
	void changeAccessType (String value)
	{
		Label l = pageScope.get("AccessTypeLabel");
		if (l != null)
		{
			l.setValue(value);
			setLabelStyle(l);
		}
	}
	
	void applyPermissions ()
	{
		
		System.out.println ("==========================================> ap ");
		com.soffid.iam.api.VaultFolderPermissions perm = pageScope.get("vaultFolderPermissions");
		
		Grid g = permissionsWnd.getFellow ("permissionsGrid");
		
		for (int i = 0; i < perm.getAccounts().size(); i++)
		{
			com.soffid.iam.api.VaultFolderAccountPermissions accPermissions = perm.getAccounts().get(i);
			for (j = 0; j < accPermissions.getPermissions().size(); j++)
			{
				Component c = g.getCell(i, j+1);
				Label l = c.getFirstChild();
				accPermissions.getPermissions().set(j, es.caib.seycon.ng.comu.AccountAccessLevelEnum.fromString(l.getValue()));
			}
		}

		com.soffid.iam.service.ejb.VaultService vs = es.caib.seycon.ng.EJBLocator.getVaultService();
		vs.applyFolderPermissions(perm);
		
		permissionsWnd.setVisible(false);
	}
]]></zscript>
<window id="innerWindow" visible="false" sizable="true" position="center,center" 
	width="80%" >
	<form id="form" dataPath="/model:/void" orient="vertical" width="100%" style="padding: 10px">
		<div>
			<grid fixedLayout="false" style="width: 48%; margin-right: 4%; float: left" sclass="noBorderGrid">
				<rows>
					<row>
						<input_etiqueta value="${c:l('vault.folder.parent')}:" />
						<div>
							<label bind="@parentFolder" />
							<imageclic src="/img/root.gif" width="16px" height="16px" onClick="selectParent()">
							</imageclic>
						</div>
					</row>
					<row>
						<input_etiqueta value="${c:l('vault.folder.name')}:" />
						<hbox width="90%" widths="*, 2em">
							<input_dada id="txtAccountName" bind="@name"
								maxlength="10" multiline_custom="false"
								width_custom="90%" />
							<label value="*" />
						</hbox>
					</row>
					<row>
						<input_etiqueta value="${c:l('vault.folder.description')}:" />
						<input_dada id="txtAccountDescription" bind="@description"
							lectura="false" maxlength="50" multiline_custom="true"
							rows_custom="6"
							width_custom="97%" />
					</row>
				</rows>
			</grid>
			<div width="48%" style="float: left" id="aclDiv">
				<label value="${c:l('accounts.owner')}" width="100%" />
				<account_acl id="ownerAcl" userList="ownerUsers"  width="100%"
					groupList="ownerGroups" roleList="ownerRoles" />
				<label value="${c:l('accounts.manager')}"  width="100%"/>
				<account_acl id="managerAcl" userList="managerUsers"  width="100%"
					groupList="managerGroups" roleList="managerRoles" />
				<label value="${c:l('accounts.userAccess')}"  width="100%" />
				<account_acl id="userAcl" userList="grantedUsers"  width="100%"
					groupList="grantedGroups" roleList="grantedRoles" />
			</div>
		</div>
		
		<div style ="margin-top: 2em; width:100%">
			<button label="${c:l('vault.folder.permissions')}" id="permissionsButton" onClick="openPermissionsGrid()"></button>
			<div style ="float:right">
					<button
						label="${c:l('accounts.setPassword.Cancel')}"
						onClick="onCancel()" />
					<button label="${c:l('accounts.setPassword.OK')}"
						onClick="onApply()" />
			</div>
		</div>
	</form>

</window>
	<window id="selectFolderWnd" visible="false"  sizable="true" position="center,center" 
		width="50%" title="${c:l('vault.folder.SelectParentFolder')}">
		<tree autocommit="false" dataPath="/model:/" fixedLayout="false"
			width="100%" rows="10" id="folderTree">
			<treeitemfinder bind="." open="false" path="/folder">
				<treerow onDoubleClick="if (folderTree.getSelectedCount() > 0) selectParentFolder();">
					<treecell>
						<image src="/img/root.gif" height="1em" />
						<label bind="@name"
							style="display: inline-block; padding-bottom: 5px; padding-top: 5px;" />
					</treecell>
				</treerow>
			</treeitemfinder>
		</tree>
		<div style="float:right; margin-top: 2em;">
			<button label="${c:l('accounts.setPassword.Cancel')}"
				onClick="selectFolderWnd.setVisible(false);" />
			<button id="selectButton"
				label="${c:l('accounts.setPassword.OK')}" onClick="selectedParentFolder()"/>
		</div>
	</window>

	<window id="permissionsWnd" visible="false"  sizable="true" position="center,center" 
		border="normal"
		width="90%" title="${c:l('vault.folder.permissions')}">
		<form>
			<grid id="permissionsGrid" fixedLayout="false">
				<columns>
					<column label="${c:l('auditoria.zul.account') }"></column>
				</columns>
				<rows></rows>
			</grid>
			<div style="float:right; margin-top: 2em;">
				<button label="${c:l('accounts.setPassword.Cancel')}"
					onClick="permissionsWnd.setVisible(false);" />
				<button id="selectButton"
					label="${c:l('accounts.setPassword.OK')}" onClick="applyPermissions()"/>
			</div>
		</form>
	</window>
	<menupopup id="accessType" style="font-size: 12px"> 	
				<menuitem label="${c:l('accounts.owner')}" sclass="red-menu" value="O" onClick="changeAccessType(self.value)"/>
				<menuitem label="${c:l('accounts.manager')}" value="M" sclass="blue-menu" style="color: blue;" onClick="changeAccessType(self.value)"/>
				<menuitem label="${c:l('accounts.user')}" value="U" onClick="changeAccessType(self.value)"/>
				<menuitem label="${c:l('accounts.noAccess')}" value="-" sclass="gray-menu" onClick="changeAccessType(self.value)"/>
	</menupopup>
</zk>