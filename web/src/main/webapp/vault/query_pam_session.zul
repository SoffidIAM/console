<?page id="passwordVault" ?>
<?taglib uri="/WEB-INF/tld/web/core.dsp.tld" prefix="c" ?>
<?component name="input_criteri" macro-uri="/comu/input_criteri.zul"?>
<?component name="input_dada" macro-uri="/comu/input_dada.zul"?>
<?component name="input_etiqueta" macro-uri="/comu/input_etiqueta.zul"?>
<?component name="folderWindow" macro-uri="/vault/folder.zul"?>
<?component name="accountWindow" macro-uri="/vault/account.zul"?>

<frame xmlns:h="http://www.w3.org/1999/xhtml" title="${c:l('pamSession.title')}"
	 id="topframe" width="100%" use="com.soffid.iam.web.vault.QueryPamSessionFrame" >
	<label use="com.soffid.iam.web.vault.QueryPamSessionData" id="data"/>
	
	<div use="com.soffid.iam.web.component.NavigationBar" frame="frame">
	</div>

	<style>
		div.grid td {vertical-align: top;}
		div.grid td.gc div { min-height: 24px};
video::-webkit-media-controls-enclosure {
display:none !important;
}

.custom-video-controls {
}

		div#videoContainer {
			display: inline-block;
			text-align: center;
		}
		div#videoContainer.min video  {
			width: 640px;
			height: 480px;
		}

		div#videoContainer.max video  {
			height: 100vh ;
			height: calc(100vh - 40px);
		}
			
		div#videoContainer .video-control  {
			background: white;
			width: 100%
		}

		div#videoContainer.max .video-control  {
		    position: absolute;
			background: white;
			bottom: 0;
			z-index: 2147483648;
		}

	</style>

	<div>
		<databox type="STRING" readonly="true" value="${pamSession.jumpServerGroup }" label="${c:l('pamSession.jumpServerGroup') } :" />
		<databox type="STRING" readonly="true" value="${pamSession.path}" label="${c:l('pamSession.sessionId') } :" />
		<customfield3 dataType="USER" readonly="true" value="${pamSession.user }" label="${c:l('pamSession.userName') }" />
		<customfield3 dataType="DATE_TIME" readonly="true" value="${pamSession.serverStart }" label="${c:l('pamSession.start') }" />
		<customfield3 dataType="DATE_TIME" readonly="true" value="${pamSession.serverEnd }" label="${c:l('pamSession.end') }" />
		<databox type="STRING" readonly="true" value="${pamSession.serverUrl}" label="${c:l('pamSession.serviceUrl') } :" />
		<databox type="STRING" readonly="true" value="${pamSession.accountName}" label="${c:l('pamSession.accountName') } :" />
		<div sclass="section" id="videos">
			<customfield3 label="${c:l('pamSession.recordings') }" dataType="SEPARATOR"/>
		    <h:div id="videoContainer" class="min" >
				<html><![CDATA[
				  <video id="video" >
					<source src="${firstVideo}" type="video/ogg" id="videosrc">
					<track src="${firstCaption}" kind='subtitles' id="videocaption" label='Keystrokes'  mode="hidden" language="en"> 
						Your browser does not support the video tag. 
				  </video>
			]]>
			</html>
			  <div id="video-controls" style="vertical-align: middle; display: flex; width: 100%" sclass="video-control">
			    <imageclic src="/img/play.svg" style="vertical-align: middle;" id="playbutton"/>
			    <h:input type="range" id="seekBar" value="0" style="vertical-align: middle; width: 100%"/>
			    <h:span style="width: 150px" id="seekLabel"/>
			    <imageclic src="/img/keyboard.svg" style="vertical-align: middle" id="keystrokes"/>
			    <imageclic src="/img/max.svg" style="vertical-align: middle" id="fullScreen"/>
			  </div>
			</h:div>
				  <script> <![CDATA[
				  var soffidVideos = ${videos };
				  var soffidCaptions = ${captions };
				  var soffidChapters = ${chapterStart };
				  var showCaptions = false;
				  var video = document.getElementById("video");
				  var videoContainer = document.getElementById("${videoContainer.uuid }");
				  var playButton = document.getElementById("${playbutton.uuid }");
				  var keyboardButton = document.getElementById("${keystrokes.uuid}");
				  var fullScreenButton = document.getElementById("${fullScreen.uuid}");
				  var seekBar = document.getElementById("${seekBar.uuid }");
				  var seekLabel = document.getElementById("${seekLabel.uuid }");
				  var currentChapter = 0;
				  // Event listener for the play/pause button
				  playButton.addEventListener("click", function() {
				    if (video.paused == true) {
				      // Play the video
				      video.play();
				      playButton.src = "${execution.contextPath }/img/held.svg"
				    } else {
				      // Pause the video
				      video.pause();
				      playButton.src = "${execution.contextPath }/img/play.svg"
				    }
				  });
				  // Event listener for the full-screen button
				  fullScreenButton.addEventListener("click", function() {
					 var isInFullScreen = (document.fullscreenElement && document.fullscreenElement !== null) ||
					        (document.webkitFullscreenElement && document.webkitFullscreenElement !== null) ||
					        (document.mozFullScreenElement && document.mozFullScreenElement !== null) ||
					        (document.msFullscreenElement && document.msFullscreenElement !== null);
				    if (!isInFullScreen ) {
					    if (videoContainer.requestFullscreen) {
					      videoContainer.requestFullscreen();
					    } else if (videoContainer.mozRequestFullScreen) {
					      videoContainer.mozRequestFullScreen(); // Firefox
					    } else if (video.webkitRequestFullscreen) {
					      videoContainer.webkitRequestFullscreen(); // Chrome and Safari
					    }
					    videoContainer.setAttribute("class", "max");
					    fullScreenButton.src = "${execution.contextPath }/img/min.svg"
					 } else {
				        if (document.exitFullscreen) {
				            document.exitFullscreen();
				        } else if (document.webkitExitFullscreen) {
				            document.webkitExitFullscreen();
				        } else if (document.mozCancelFullScreen) {
				            document.mozCancelFullScreen();
				        } else if (document.msExitFullscreen) {
				            document.msExitFullscreen();
				        }
   					    videoContainer.setAttribute("class", "min");
					    fullScreenButton.src = "${execution.contextPath }/img/max.svg";
					 }
					 
				  });
				  keyboardButton.addEventListener("click", function() {
					  showCaptions = !showCaptions;
					  if (showCaptions) {
						  video.textTracks[0].mode="showing";
						  keyboardButton.src = "${execution.contextPath }/img/no-keyboard.svg";
					  } else {
						  video.textTracks[0].mode="disabled";
						  keyboardButton.src = "${execution.contextPath }/img/keyboard.svg";
					  }
				  });
				  document.addEventListener('fullscreenchange', function() {
					    if (document.fullscreenElement == videoContainer) {
						    videoContainer.setAttribute("class", "max");
						    fullScreenButton.src = "${execution.contextPath }/img/min.svg"
  					    } else {
	   					    videoContainer.setAttribute("class", "min");
						    fullScreenButton.src = "${execution.contextPath }/img/max.svg"
						}
				  });
				  // Event listener for the seek bar
 				  seekBar.addEventListener("change", function() {
					  // Calculate the new time
					  var videoSize = ${videoEnd } - ${videoStart };
					  var time = videoSize * (seekBar.value / 100) + ${videoStart };
					  var newChapter = 0;
					  for (var i = 0; i < soffidChapters.length; i++) {
						  if ( time > soffidChapters[i]) {
							     newChapter = i;
						  }
					  }
					  // Update the video time
					  var t = (time - soffidChapters[newChapter])  / 1000;
					  if (t < 0) t = 0;
					  if (newChapter != currentChapter) {
						  currentChapter = newChapter;
						  document.getElementById("videosrc").src = soffidVideos[currentChapter];
					      document.getElementById("videocaption").src = soffidCaptions[currentChapter];							  
						  video.currentTime = 0;
						  video.textTracks[0].mode = "disabled";
					      video.load();
						  video.play().then(function() {
							  video.textTracks[0].mode =  showCaptions ? "showing": "disabled";
						      video.pause();
							  video.currentTime = t;
//						      playButton.src = "${execution.contextPath }/img/held.svg"
						  });
					  } else {
						  video.currentTime = t;
					  }
					});
 				  seekBar.addEventListener("input", function() {
					  // Calculate the new time
					  video.pause();
					  var videoSize = ${videoEnd } - ${videoStart };
					  var time = videoSize * (seekBar.value / 100) + ${videoStart };
					  var t = new Date( time);
					  seekLabel.innerText = zk.formatDate(t, "${timeFormat }");
					});
					// Update the seek bar as the video plays
					video.addEventListener("timeupdate", function() {
					  var videoSize = ${videoEnd } - ${videoStart };
					  var chapterStart = soffidChapters[currentChapter] ;
					  var position = video.currentTime * 1000 + chapterStart - ${videoStart};
					  seekBar.value = 100 * position / videoSize;
					  var t = new Date( chapterStart + video.currentTime * 1000);
					  seekLabel.innerText = zk.formatDate(t, "${timeFormat }");
					});
					video.addEventListener("ended", function() {
					  if (soffidChapters.length > currentChapter + 1) {
					     currentChapter ++;
					     document.getElementById("videosrc").src = soffidVideos[currentChapter];
					     document.getElementById("videocaption").src = soffidCaptions[currentChapter];
					     playButton.src = "${execution.contextPath }/img/held.svg"
					     video.textTracks[0].mode = "disabled";

					      video.load();
						  video.play().then(function() {
							  video.textTracks[0].mode =  showCaptions ? "showing": "disabled";
						  });
					  } else {
					      playButton.src = "${execution.contextPath }/img/play.svg"
					  } 
					});
					// Pause the video when the slider handle is being dragged
					seekBar.addEventListener("mousedown", function() {
					  video.pause();
				      playButton.src = "${execution.contextPath }/img/play.svg"
					});

				  ]]></script>
		</div>
	</div>

</frame>
